[{"name":"class AggregateFlow<T : Any>(wrapped: AggregatePublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/index.html","searchKeys":["AggregateFlow","class AggregateFlow<T : Any>(wrapped: AggregatePublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.AggregateFlow"]},{"name":"class ChangeStreamFlow<T : Any>(wrapped: ChangeStreamPublisher<T>) : Flow<ChangeStreamDocument<T>> ","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/index.html","searchKeys":["ChangeStreamFlow","class ChangeStreamFlow<T : Any>(wrapped: ChangeStreamPublisher<T>) : Flow<ChangeStreamDocument<T>> ","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow"]},{"name":"class ClientSession(val wrapped: ClientSession) : ClientSession","description":"com.mongodb.kotlin.client.coroutine.ClientSession","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/index.html","searchKeys":["ClientSession","class ClientSession(val wrapped: ClientSession) : ClientSession","com.mongodb.kotlin.client.coroutine.ClientSession"]},{"name":"class DistinctFlow<T : Any>(wrapped: DistinctPublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/index.html","searchKeys":["DistinctFlow","class DistinctFlow<T : Any>(wrapped: DistinctPublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.DistinctFlow"]},{"name":"class FindFlow<T : Any>(wrapped: FindPublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.FindFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/index.html","searchKeys":["FindFlow","class FindFlow<T : Any>(wrapped: FindPublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.FindFlow"]},{"name":"class ListCollectionNamesFlow(wrapped: ListCollectionNamesPublisher) : Flow<String> ","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/index.html","searchKeys":["ListCollectionNamesFlow","class ListCollectionNamesFlow(wrapped: ListCollectionNamesPublisher) : Flow<String> ","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow"]},{"name":"class ListCollectionsFlow<T : Any>(wrapped: ListCollectionsPublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/index.html","searchKeys":["ListCollectionsFlow","class ListCollectionsFlow<T : Any>(wrapped: ListCollectionsPublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow"]},{"name":"class ListDatabasesFlow<T : Any>(wrapped: ListDatabasesPublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/index.html","searchKeys":["ListDatabasesFlow","class ListDatabasesFlow<T : Any>(wrapped: ListDatabasesPublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow"]},{"name":"class ListIndexesFlow<T : Any>(wrapped: ListIndexesPublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/index.html","searchKeys":["ListIndexesFlow","class ListIndexesFlow<T : Any>(wrapped: ListIndexesPublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.ListIndexesFlow"]},{"name":"class ListSearchIndexesFlow<T : Any>(wrapped: ListSearchIndexesPublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/index.html","searchKeys":["ListSearchIndexesFlow","class ListSearchIndexesFlow<T : Any>(wrapped: ListSearchIndexesPublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow"]},{"name":"class MapReduceFlow<T : Any>(wrapped: MapReducePublisher<T>) : Flow<T> ","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/index.html","searchKeys":["MapReduceFlow","class MapReduceFlow<T : Any>(wrapped: MapReducePublisher<T>) : Flow<T> ","com.mongodb.kotlin.client.coroutine.MapReduceFlow"]},{"name":"class MongoClient(wrapped: MongoClient) : MongoCluster, Closeable","description":"com.mongodb.kotlin.client.coroutine.MongoClient","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/index.html","searchKeys":["MongoClient","class MongoClient(wrapped: MongoClient) : MongoCluster, Closeable","com.mongodb.kotlin.client.coroutine.MongoClient"]},{"name":"class MongoCollection<T : Any>(wrapped: MongoCollection<T>)","description":"com.mongodb.kotlin.client.coroutine.MongoCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/index.html","searchKeys":["MongoCollection","class MongoCollection<T : Any>(wrapped: MongoCollection<T>)","com.mongodb.kotlin.client.coroutine.MongoCollection"]},{"name":"class MongoDatabase(wrapped: MongoDatabase)","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/index.html","searchKeys":["MongoDatabase","class MongoDatabase(wrapped: MongoDatabase)","com.mongodb.kotlin.client.coroutine.MongoDatabase"]},{"name":"constructor(wrapped: AggregatePublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.AggregateFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/-aggregate-flow.html","searchKeys":["AggregateFlow","constructor(wrapped: AggregatePublisher<T>)","com.mongodb.kotlin.client.coroutine.AggregateFlow.AggregateFlow"]},{"name":"constructor(wrapped: ChangeStreamPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.ChangeStreamFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/-change-stream-flow.html","searchKeys":["ChangeStreamFlow","constructor(wrapped: ChangeStreamPublisher<T>)","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.ChangeStreamFlow"]},{"name":"constructor(wrapped: ClientSession)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.ClientSession","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/-client-session.html","searchKeys":["ClientSession","constructor(wrapped: ClientSession)","com.mongodb.kotlin.client.coroutine.ClientSession.ClientSession"]},{"name":"constructor(wrapped: DistinctPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.DistinctFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/-distinct-flow.html","searchKeys":["DistinctFlow","constructor(wrapped: DistinctPublisher<T>)","com.mongodb.kotlin.client.coroutine.DistinctFlow.DistinctFlow"]},{"name":"constructor(wrapped: FindPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.FindFlow.FindFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/-find-flow.html","searchKeys":["FindFlow","constructor(wrapped: FindPublisher<T>)","com.mongodb.kotlin.client.coroutine.FindFlow.FindFlow"]},{"name":"constructor(wrapped: ListCollectionNamesPublisher)","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.ListCollectionNamesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/-list-collection-names-flow.html","searchKeys":["ListCollectionNamesFlow","constructor(wrapped: ListCollectionNamesPublisher)","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.ListCollectionNamesFlow"]},{"name":"constructor(wrapped: ListCollectionsPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.ListCollectionsFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/-list-collections-flow.html","searchKeys":["ListCollectionsFlow","constructor(wrapped: ListCollectionsPublisher<T>)","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.ListCollectionsFlow"]},{"name":"constructor(wrapped: ListDatabasesPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.ListDatabasesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/-list-databases-flow.html","searchKeys":["ListDatabasesFlow","constructor(wrapped: ListDatabasesPublisher<T>)","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.ListDatabasesFlow"]},{"name":"constructor(wrapped: ListIndexesPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.ListIndexesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/-list-indexes-flow.html","searchKeys":["ListIndexesFlow","constructor(wrapped: ListIndexesPublisher<T>)","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.ListIndexesFlow"]},{"name":"constructor(wrapped: ListSearchIndexesPublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.ListSearchIndexesFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/-list-search-indexes-flow.html","searchKeys":["ListSearchIndexesFlow","constructor(wrapped: ListSearchIndexesPublisher<T>)","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.ListSearchIndexesFlow"]},{"name":"constructor(wrapped: MapReducePublisher<T>)","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.MapReduceFlow","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/-map-reduce-flow.html","searchKeys":["MapReduceFlow","constructor(wrapped: MapReducePublisher<T>)","com.mongodb.kotlin.client.coroutine.MapReduceFlow.MapReduceFlow"]},{"name":"constructor(wrapped: MongoClient)","description":"com.mongodb.kotlin.client.coroutine.MongoClient.MongoClient","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/-mongo-client.html","searchKeys":["MongoClient","constructor(wrapped: MongoClient)","com.mongodb.kotlin.client.coroutine.MongoClient.MongoClient"]},{"name":"constructor(wrapped: MongoCollection<T>)","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.MongoCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/-mongo-collection.html","searchKeys":["MongoCollection","constructor(wrapped: MongoCollection<T>)","com.mongodb.kotlin.client.coroutine.MongoCollection.MongoCollection"]},{"name":"constructor(wrapped: MongoDatabase)","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.MongoDatabase","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/-mongo-database.html","searchKeys":["MongoDatabase","constructor(wrapped: MongoDatabase)","com.mongodb.kotlin.client.coroutine.MongoDatabase.MongoDatabase"]},{"name":"fun <R : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<R>): AggregateFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun <R : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<R>): AggregateFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate"]},{"name":"fun <R : Any> aggregate(pipeline: List<Bson>, resultClass: Class<R>): AggregateFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun <R : Any> aggregate(pipeline: List<Bson>, resultClass: Class<R>): AggregateFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate"]},{"name":"fun <R : Any> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.distinct","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/distinct.html","searchKeys":["distinct","fun <R : Any> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.distinct"]},{"name":"fun <R : Any> distinct(fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.distinct","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/distinct.html","searchKeys":["distinct","fun <R : Any> distinct(fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.distinct"]},{"name":"fun <R : Any> find(clientSession: ClientSession, filter: Bson = BsonDocument(), resultClass: Class<R>): FindFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.find","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find.html","searchKeys":["find","fun <R : Any> find(clientSession: ClientSession, filter: Bson = BsonDocument(), resultClass: Class<R>): FindFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.find"]},{"name":"fun <R : Any> find(filter: Bson = BsonDocument(), resultClass: Class<R>): FindFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.find","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find.html","searchKeys":["find","fun <R : Any> find(filter: Bson = BsonDocument(), resultClass: Class<R>): FindFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.find"]},{"name":"fun <R : Any> listIndexes(clientSession: ClientSession, resultClass: Class<R>): ListIndexesFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun <R : Any> listIndexes(clientSession: ClientSession, resultClass: Class<R>): ListIndexesFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes"]},{"name":"fun <R : Any> listIndexes(resultClass: Class<R>): ListIndexesFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun <R : Any> listIndexes(resultClass: Class<R>): ListIndexesFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes"]},{"name":"fun <R : Any> listSearchIndexes(resultClass: Class<R>): ListSearchIndexesFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.listSearchIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/list-search-indexes.html","searchKeys":["listSearchIndexes","fun <R : Any> listSearchIndexes(resultClass: Class<R>): ListSearchIndexesFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.listSearchIndexes"]},{"name":"fun <R : Any> mapReduce(clientSession: ClientSession, mapFunction: String, reduceFunction: String, resultClass: Class<R>): MapReduceFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/map-reduce.html","searchKeys":["mapReduce","fun <R : Any> mapReduce(clientSession: ClientSession, mapFunction: String, reduceFunction: String, resultClass: Class<R>): MapReduceFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce"]},{"name":"fun <R : Any> mapReduce(mapFunction: String, reduceFunction: String, resultClass: Class<R>): MapReduceFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/map-reduce.html","searchKeys":["mapReduce","fun <R : Any> mapReduce(mapFunction: String, reduceFunction: String, resultClass: Class<R>): MapReduceFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce"]},{"name":"fun <R : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/watch.html","searchKeys":["watch","fun <R : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.watch"]},{"name":"fun <R : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/watch.html","searchKeys":["watch","fun <R : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.watch"]},{"name":"fun <R : Any> withDocumentClass(resultClass: Class<R>): Flow<R>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.withDocumentClass","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/with-document-class.html","searchKeys":["withDocumentClass","fun <R : Any> withDocumentClass(resultClass: Class<R>): Flow<R>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.withDocumentClass"]},{"name":"fun <R : Any> withDocumentClass(resultClass: Class<R>): MongoCollection<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withDocumentClass","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-document-class.html","searchKeys":["withDocumentClass","fun <R : Any> withDocumentClass(resultClass: Class<R>): MongoCollection<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.withDocumentClass"]},{"name":"fun <T : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<T>): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/aggregate.html","searchKeys":["aggregate","fun <T : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<T>): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate"]},{"name":"fun <T : Any> aggregate(pipeline: List<Bson>, resultClass: Class<T>): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/aggregate.html","searchKeys":["aggregate","fun <T : Any> aggregate(pipeline: List<Bson>, resultClass: Class<T>): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate"]},{"name":"fun <T : Any> getCollection(collectionName: String, resultClass: Class<T>): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.getCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/get-collection.html","searchKeys":["getCollection","fun <T : Any> getCollection(collectionName: String, resultClass: Class<T>): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.getCollection"]},{"name":"fun <T : Any> listCollections(clientSession: ClientSession, resultClass: Class<T>): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/list-collections.html","searchKeys":["listCollections","fun <T : Any> listCollections(clientSession: ClientSession, resultClass: Class<T>): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections"]},{"name":"fun <T : Any> listCollections(resultClass: Class<T>): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/list-collections.html","searchKeys":["listCollections","fun <T : Any> listCollections(resultClass: Class<T>): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections"]},{"name":"fun <T : Any> listDatabases(clientSession: ClientSession, resultClass: Class<T>): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun <T : Any> listDatabases(clientSession: ClientSession, resultClass: Class<T>): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases"]},{"name":"fun <T : Any> listDatabases(resultClass: Class<T>): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun <T : Any> listDatabases(resultClass: Class<T>): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases"]},{"name":"fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/watch.html","searchKeys":["watch","fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCluster.watch"]},{"name":"fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/watch.html","searchKeys":["watch","fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.watch"]},{"name":"fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/watch.html","searchKeys":["watch","fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCluster.watch"]},{"name":"fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/watch.html","searchKeys":["watch","fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.watch"]},{"name":"fun ClientSessionOptions.Builder.defaultTimeout(defaultTimeout: Long): ClientSessionOptions.Builder","description":"com.mongodb.kotlin.client.coroutine.defaultTimeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/default-timeout.html","searchKeys":["defaultTimeout","fun ClientSessionOptions.Builder.defaultTimeout(defaultTimeout: Long): ClientSessionOptions.Builder","com.mongodb.kotlin.client.coroutine.defaultTimeout"]},{"name":"fun CountOptions.maxTime(maxTime: Long): CountOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun CountOptions.maxTime(maxTime: Long): CountOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun CreateCollectionOptions.expireAfter(maxTime: Long): CreateCollectionOptions","description":"com.mongodb.kotlin.client.coroutine.expireAfter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/expire-after.html","searchKeys":["expireAfter","fun CreateCollectionOptions.expireAfter(maxTime: Long): CreateCollectionOptions","com.mongodb.kotlin.client.coroutine.expireAfter"]},{"name":"fun CreateIndexOptions.maxTime(maxTime: Long): CreateIndexOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun CreateIndexOptions.maxTime(maxTime: Long): CreateIndexOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun DropIndexOptions.maxTime(maxTime: Long): DropIndexOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun DropIndexOptions.maxTime(maxTime: Long): DropIndexOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun EstimatedDocumentCountOptions.maxTime(maxTime: Long): EstimatedDocumentCountOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun EstimatedDocumentCountOptions.maxTime(maxTime: Long): EstimatedDocumentCountOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun FindOneAndDeleteOptions.maxTime(maxTime: Long): FindOneAndDeleteOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun FindOneAndDeleteOptions.maxTime(maxTime: Long): FindOneAndDeleteOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun FindOneAndReplaceOptions.maxTime(maxTime: Long): FindOneAndReplaceOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun FindOneAndReplaceOptions.maxTime(maxTime: Long): FindOneAndReplaceOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun FindOneAndUpdateOptions.maxTime(maxTime: Long): FindOneAndUpdateOptions","description":"com.mongodb.kotlin.client.coroutine.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-time.html","searchKeys":["maxTime","fun FindOneAndUpdateOptions.maxTime(maxTime: Long): FindOneAndUpdateOptions","com.mongodb.kotlin.client.coroutine.maxTime"]},{"name":"fun IndexOptions.expireAfter(expireAfter: Long): IndexOptions","description":"com.mongodb.kotlin.client.coroutine.expireAfter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/expire-after.html","searchKeys":["expireAfter","fun IndexOptions.expireAfter(expireAfter: Long): IndexOptions","com.mongodb.kotlin.client.coroutine.expireAfter"]},{"name":"fun TransactionOptions.Builder.maxCommitTime(maxCommitTime: Long): TransactionOptions.Builder","description":"com.mongodb.kotlin.client.coroutine.maxCommitTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/max-commit-time.html","searchKeys":["maxCommitTime","fun TransactionOptions.Builder.maxCommitTime(maxCommitTime: Long): TransactionOptions.Builder","com.mongodb.kotlin.client.coroutine.maxCommitTime"]},{"name":"fun action(action: MapReduceAction): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.action","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/action.html","searchKeys":["action","fun action(action: MapReduceAction): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.action"]},{"name":"fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/aggregate.html","searchKeys":["aggregate","fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate"]},{"name":"fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate"]},{"name":"fun aggregate(pipeline: List<Bson>): AggregateFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/aggregate.html","searchKeys":["aggregate","fun aggregate(pipeline: List<Bson>): AggregateFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoDatabase.aggregate"]},{"name":"fun aggregate(pipeline: List<Bson>): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun aggregate(pipeline: List<Bson>): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.aggregate"]},{"name":"fun allowDiskUse(allowDiskUse: Boolean?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.allowDiskUse","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/allow-disk-use.html","searchKeys":["allowDiskUse","fun allowDiskUse(allowDiskUse: Boolean?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.allowDiskUse"]},{"name":"fun allowDiskUse(allowDiskUse: Boolean?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.allowDiskUse","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/allow-disk-use.html","searchKeys":["allowDiskUse","fun allowDiskUse(allowDiskUse: Boolean?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.allowDiskUse"]},{"name":"fun allowDiskUse(allowDiskUse: Boolean?): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.allowDiskUse","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/allow-disk-use.html","searchKeys":["allowDiskUse","fun allowDiskUse(allowDiskUse: Boolean?): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.allowDiskUse"]},{"name":"fun appendMetadata(mongoDriverInformation: MongoDriverInformation)","description":"com.mongodb.kotlin.client.coroutine.MongoClient.appendMetadata","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/append-metadata.html","searchKeys":["appendMetadata","fun appendMetadata(mongoDriverInformation: MongoDriverInformation)","com.mongodb.kotlin.client.coroutine.MongoClient.appendMetadata"]},{"name":"fun authorizedCollections(authorizedCollections: Boolean): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.authorizedCollections","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/authorized-collections.html","searchKeys":["authorizedCollections","fun authorizedCollections(authorizedCollections: Boolean): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.authorizedCollections"]},{"name":"fun authorizedDatabasesOnly(authorizedDatabasesOnly: Boolean?): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.authorizedDatabasesOnly","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/authorized-databases-only.html","searchKeys":["authorizedDatabasesOnly","fun authorizedDatabasesOnly(authorizedDatabasesOnly: Boolean?): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.authorizedDatabasesOnly"]},{"name":"fun batchSize(batchSize: Int): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): ListIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): ListIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.batchSize"]},{"name":"fun batchSize(batchSize: Int): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.batchSize","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/batch-size.html","searchKeys":["batchSize","fun batchSize(batchSize: Int): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.batchSize"]},{"name":"fun bypassDocumentValidation(bypassDocumentValidation: Boolean?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.bypassDocumentValidation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/bypass-document-validation.html","searchKeys":["bypassDocumentValidation","fun bypassDocumentValidation(bypassDocumentValidation: Boolean?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.bypassDocumentValidation"]},{"name":"fun bypassDocumentValidation(bypassDocumentValidation: Boolean?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.bypassDocumentValidation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/bypass-document-validation.html","searchKeys":["bypassDocumentValidation","fun bypassDocumentValidation(bypassDocumentValidation: Boolean?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.bypassDocumentValidation"]},{"name":"fun collation(collation: Collation?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.collation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/collation.html","searchKeys":["collation","fun collation(collation: Collation?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.collation"]},{"name":"fun collation(collation: Collation?): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.collation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/collation.html","searchKeys":["collation","fun collation(collation: Collation?): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.collation"]},{"name":"fun collation(collation: Collation?): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.collation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/collation.html","searchKeys":["collation","fun collation(collation: Collation?): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.collation"]},{"name":"fun collation(collation: Collation?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.collation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/collation.html","searchKeys":["collation","fun collation(collation: Collation?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.collation"]},{"name":"fun collation(collation: Collation?): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.collation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/collation.html","searchKeys":["collation","fun collation(collation: Collation?): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.collation"]},{"name":"fun collation(collation: Collation?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.collation","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/collation.html","searchKeys":["collation","fun collation(collation: Collation?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.collation"]},{"name":"fun collectionName(collectionName: String): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.collectionName","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/collection-name.html","searchKeys":["collectionName","fun collectionName(collectionName: String): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.collectionName"]},{"name":"fun comment(comment: BsonValue?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.comment"]},{"name":"fun comment(comment: BsonValue?): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.comment"]},{"name":"fun comment(comment: BsonValue?): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.comment"]},{"name":"fun comment(comment: BsonValue?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.comment"]},{"name":"fun comment(comment: BsonValue?): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.comment"]},{"name":"fun comment(comment: BsonValue?): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.comment"]},{"name":"fun comment(comment: BsonValue?): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.comment"]},{"name":"fun comment(comment: BsonValue?): ListIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.comment"]},{"name":"fun comment(comment: BsonValue?): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.comment"]},{"name":"fun comment(comment: String?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.comment"]},{"name":"fun comment(comment: String?): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.comment"]},{"name":"fun comment(comment: String?): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.comment"]},{"name":"fun comment(comment: String?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.comment"]},{"name":"fun comment(comment: String?): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.comment"]},{"name":"fun comment(comment: String?): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.comment"]},{"name":"fun comment(comment: String?): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.comment"]},{"name":"fun comment(comment: String?): ListIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): ListIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.comment"]},{"name":"fun comment(comment: String?): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.comment","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/comment.html","searchKeys":["comment","fun comment(comment: String?): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.comment"]},{"name":"fun create(connectionString: ConnectionString = ConnectionString(\"mongodb://localhost\"), mongoDriverInformation: MongoDriverInformation? = null): MongoClient","description":"com.mongodb.kotlin.client.coroutine.MongoClient.Factory.create","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/-factory/create.html","searchKeys":["create","fun create(connectionString: ConnectionString = ConnectionString(\"mongodb://localhost\"), mongoDriverInformation: MongoDriverInformation? = null): MongoClient","com.mongodb.kotlin.client.coroutine.MongoClient.Factory.create"]},{"name":"fun create(connectionString: String): MongoClient","description":"com.mongodb.kotlin.client.coroutine.MongoClient.Factory.create","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/-factory/create.html","searchKeys":["create","fun create(connectionString: String): MongoClient","com.mongodb.kotlin.client.coroutine.MongoClient.Factory.create"]},{"name":"fun create(settings: MongoClientSettings, mongoDriverInformation: MongoDriverInformation? = null): MongoClient","description":"com.mongodb.kotlin.client.coroutine.MongoClient.Factory.create","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/-factory/create.html","searchKeys":["create","fun create(settings: MongoClientSettings, mongoDriverInformation: MongoDriverInformation? = null): MongoClient","com.mongodb.kotlin.client.coroutine.MongoClient.Factory.create"]},{"name":"fun createIndexes(clientSession: ClientSession, indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): Flow<String>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-indexes.html","searchKeys":["createIndexes","fun createIndexes(clientSession: ClientSession, indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): Flow<String>","com.mongodb.kotlin.client.coroutine.MongoCollection.createIndexes"]},{"name":"fun createIndexes(indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): Flow<String>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-indexes.html","searchKeys":["createIndexes","fun createIndexes(indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): Flow<String>","com.mongodb.kotlin.client.coroutine.MongoCollection.createIndexes"]},{"name":"fun createSearchIndexes(searchIndexModels: List<SearchIndexModel>): Flow<String>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createSearchIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-search-indexes.html","searchKeys":["createSearchIndexes","fun createSearchIndexes(searchIndexModels: List<SearchIndexModel>): Flow<String>","com.mongodb.kotlin.client.coroutine.MongoCollection.createSearchIndexes"]},{"name":"fun cursorType(cursorType: CursorType): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.cursorType","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/cursor-type.html","searchKeys":["cursorType","fun cursorType(cursorType: CursorType): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.cursorType"]},{"name":"fun databaseName(databaseName: String?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.databaseName","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/database-name.html","searchKeys":["databaseName","fun databaseName(databaseName: String?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.databaseName"]},{"name":"fun filter(filter: Bson?): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.filter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/filter.html","searchKeys":["filter","fun filter(filter: Bson?): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.filter"]},{"name":"fun filter(filter: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.filter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/filter.html","searchKeys":["filter","fun filter(filter: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.filter"]},{"name":"fun filter(filter: Bson?): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.filter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/filter.html","searchKeys":["filter","fun filter(filter: Bson?): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.filter"]},{"name":"fun filter(filter: Bson?): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.filter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/filter.html","searchKeys":["filter","fun filter(filter: Bson?): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.filter"]},{"name":"fun filter(filter: Bson?): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.filter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/filter.html","searchKeys":["filter","fun filter(filter: Bson?): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.filter"]},{"name":"fun filter(filter: Bson?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.filter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/filter.html","searchKeys":["filter","fun filter(filter: Bson?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.filter"]},{"name":"fun finalizeFunction(finalizeFunction: String?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.finalizeFunction","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/finalize-function.html","searchKeys":["finalizeFunction","fun finalizeFunction(finalizeFunction: String?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.finalizeFunction"]},{"name":"fun find(clientSession: ClientSession, filter: Bson = BsonDocument()): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.find","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find.html","searchKeys":["find","fun find(clientSession: ClientSession, filter: Bson = BsonDocument()): FindFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.find"]},{"name":"fun find(filter: Bson = BsonDocument()): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.find","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find.html","searchKeys":["find","fun find(filter: Bson = BsonDocument()): FindFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.find"]},{"name":"fun fullDocument(fullDocument: FullDocument): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.fullDocument","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/full-document.html","searchKeys":["fullDocument","fun fullDocument(fullDocument: FullDocument): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.fullDocument"]},{"name":"fun fullDocumentBeforeChange(fullDocumentBeforeChange: FullDocumentBeforeChange): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.fullDocumentBeforeChange","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/full-document-before-change.html","searchKeys":["fullDocumentBeforeChange","fun fullDocumentBeforeChange(fullDocumentBeforeChange: FullDocumentBeforeChange): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.fullDocumentBeforeChange"]},{"name":"fun getClusterDescription(): ClusterDescription","description":"com.mongodb.kotlin.client.coroutine.MongoClient.getClusterDescription","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/get-cluster-description.html","searchKeys":["getClusterDescription","fun getClusterDescription(): ClusterDescription","com.mongodb.kotlin.client.coroutine.MongoClient.getClusterDescription"]},{"name":"fun getDatabase(databaseName: String): MongoDatabase","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.getDatabase","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/get-database.html","searchKeys":["getDatabase","fun getDatabase(databaseName: String): MongoDatabase","com.mongodb.kotlin.client.coroutine.MongoCluster.getDatabase"]},{"name":"fun getTransactionOptions(): TransactionOptions","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getTransactionOptions","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-transaction-options.html","searchKeys":["getTransactionOptions","fun getTransactionOptions(): TransactionOptions","com.mongodb.kotlin.client.coroutine.ClientSession.getTransactionOptions"]},{"name":"fun hasActiveTransaction(): Boolean","description":"com.mongodb.kotlin.client.coroutine.ClientSession.hasActiveTransaction","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/has-active-transaction.html","searchKeys":["hasActiveTransaction","fun hasActiveTransaction(): Boolean","com.mongodb.kotlin.client.coroutine.ClientSession.hasActiveTransaction"]},{"name":"fun hint(hint: Bson?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.hint","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/hint.html","searchKeys":["hint","fun hint(hint: Bson?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.hint"]},{"name":"fun hint(hint: Bson?): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.hint","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/hint.html","searchKeys":["hint","fun hint(hint: Bson?): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.hint"]},{"name":"fun hint(hint: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.hint","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/hint.html","searchKeys":["hint","fun hint(hint: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.hint"]},{"name":"fun hintString(hint: String?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.hintString","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/hint-string.html","searchKeys":["hintString","fun hintString(hint: String?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.hintString"]},{"name":"fun hintString(hint: String?): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.hintString","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/hint-string.html","searchKeys":["hintString","fun hintString(hint: String?): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.hintString"]},{"name":"fun hintString(hint: String?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.hintString","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/hint-string.html","searchKeys":["hintString","fun hintString(hint: String?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.hintString"]},{"name":"fun jsMode(jsMode: Boolean): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.jsMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/js-mode.html","searchKeys":["jsMode","fun jsMode(jsMode: Boolean): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.jsMode"]},{"name":"fun let(variables: Bson?): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.let","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/let.html","searchKeys":["let","fun let(variables: Bson?): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.let"]},{"name":"fun let(variables: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.let","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/let.html","searchKeys":["let","fun let(variables: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.let"]},{"name":"fun limit(limit: Int): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.limit","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/limit.html","searchKeys":["limit","fun limit(limit: Int): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.limit"]},{"name":"fun limit(limit: Int): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.limit","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/limit.html","searchKeys":["limit","fun limit(limit: Int): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.limit"]},{"name":"fun listCollectionNames(): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollectionNames","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/list-collection-names.html","searchKeys":["listCollectionNames","fun listCollectionNames(): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollectionNames"]},{"name":"fun listCollectionNames(clientSession: ClientSession): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollectionNames","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/list-collection-names.html","searchKeys":["listCollectionNames","fun listCollectionNames(clientSession: ClientSession): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollectionNames"]},{"name":"fun listCollections(): ListCollectionsFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/list-collections.html","searchKeys":["listCollections","fun listCollections(): ListCollectionsFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections"]},{"name":"fun listCollections(clientSession: ClientSession): ListCollectionsFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/list-collections.html","searchKeys":["listCollections","fun listCollections(clientSession: ClientSession): ListCollectionsFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoDatabase.listCollections"]},{"name":"fun listDatabaseNames(): Flow<String>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabaseNames","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/list-database-names.html","searchKeys":["listDatabaseNames","fun listDatabaseNames(): Flow<String>","com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabaseNames"]},{"name":"fun listDatabaseNames(clientSession: ClientSession): Flow<String>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabaseNames","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/list-database-names.html","searchKeys":["listDatabaseNames","fun listDatabaseNames(clientSession: ClientSession): Flow<String>","com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabaseNames"]},{"name":"fun listDatabases(): ListDatabasesFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun listDatabases(): ListDatabasesFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases"]},{"name":"fun listDatabases(clientSession: ClientSession): ListDatabasesFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun listDatabases(clientSession: ClientSession): ListDatabasesFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCluster.listDatabases"]},{"name":"fun listIndexes(): ListIndexesFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun listIndexes(): ListIndexesFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes"]},{"name":"fun listIndexes(clientSession: ClientSession): ListIndexesFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun listIndexes(clientSession: ClientSession): ListIndexesFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCollection.listIndexes"]},{"name":"fun listSearchIndexes(): ListSearchIndexesFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.listSearchIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/list-search-indexes.html","searchKeys":["listSearchIndexes","fun listSearchIndexes(): ListSearchIndexesFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCollection.listSearchIndexes"]},{"name":"fun mapReduce(clientSession: ClientSession, mapFunction: String, reduceFunction: String): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/map-reduce.html","searchKeys":["mapReduce","fun mapReduce(clientSession: ClientSession, mapFunction: String, reduceFunction: String): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce"]},{"name":"fun mapReduce(mapFunction: String, reduceFunction: String): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/map-reduce.html","searchKeys":["mapReduce","fun mapReduce(mapFunction: String, reduceFunction: String): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.mapReduce"]},{"name":"fun max(max: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.max","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/max.html","searchKeys":["max","fun max(max: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.max"]},{"name":"fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.maxAwaitTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/max-await-time.html","searchKeys":["maxAwaitTime","fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.maxAwaitTime"]},{"name":"fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.maxAwaitTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/max-await-time.html","searchKeys":["maxAwaitTime","fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.maxAwaitTime"]},{"name":"fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.maxAwaitTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/max-await-time.html","searchKeys":["maxAwaitTime","fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.maxAwaitTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionNamesFlow","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionNamesFlow","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.maxTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.maxTime"]},{"name":"fun min(min: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.min","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/min.html","searchKeys":["min","fun min(min: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.min"]},{"name":"fun name(indexName: String): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.name","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/name.html","searchKeys":["name","fun name(indexName: String): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.name"]},{"name":"fun nameOnly(nameOnly: Boolean?): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.nameOnly","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/name-only.html","searchKeys":["nameOnly","fun nameOnly(nameOnly: Boolean?): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.nameOnly"]},{"name":"fun noCursorTimeout(noCursorTimeout: Boolean): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.noCursorTimeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/no-cursor-timeout.html","searchKeys":["noCursorTimeout","fun noCursorTimeout(noCursorTimeout: Boolean): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.noCursorTimeout"]},{"name":"fun notifyMessageSent(): Boolean","description":"com.mongodb.kotlin.client.coroutine.ClientSession.notifyMessageSent","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/notify-message-sent.html","searchKeys":["notifyMessageSent","fun notifyMessageSent(): Boolean","com.mongodb.kotlin.client.coroutine.ClientSession.notifyMessageSent"]},{"name":"fun notifyOperationInitiated(operation: Any)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.notifyOperationInitiated","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/notify-operation-initiated.html","searchKeys":["notifyOperationInitiated","fun notifyOperationInitiated(operation: Any)","com.mongodb.kotlin.client.coroutine.ClientSession.notifyOperationInitiated"]},{"name":"fun partial(partial: Boolean): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.partial","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/partial.html","searchKeys":["partial","fun partial(partial: Boolean): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.partial"]},{"name":"fun projection(projection: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.projection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/projection.html","searchKeys":["projection","fun projection(projection: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.projection"]},{"name":"fun resumeAfter(resumeToken: BsonDocument): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.resumeAfter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/resume-after.html","searchKeys":["resumeAfter","fun resumeAfter(resumeToken: BsonDocument): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.resumeAfter"]},{"name":"fun returnKey(returnKey: Boolean): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.returnKey","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/return-key.html","searchKeys":["returnKey","fun returnKey(returnKey: Boolean): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.returnKey"]},{"name":"fun scope(scope: Bson?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.scope","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/scope.html","searchKeys":["scope","fun scope(scope: Bson?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.scope"]},{"name":"fun showExpandedEvents(showExpandedEvents: Boolean): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.showExpandedEvents","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/show-expanded-events.html","searchKeys":["showExpandedEvents","fun showExpandedEvents(showExpandedEvents: Boolean): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.showExpandedEvents"]},{"name":"fun showRecordId(showRecordId: Boolean): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.showRecordId","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/show-record-id.html","searchKeys":["showRecordId","fun showRecordId(showRecordId: Boolean): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.showRecordId"]},{"name":"fun skip(skip: Int): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.skip","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/skip.html","searchKeys":["skip","fun skip(skip: Int): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.skip"]},{"name":"fun sort(sort: Bson?): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.sort","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/sort.html","searchKeys":["sort","fun sort(sort: Bson?): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.sort"]},{"name":"fun sort(sort: Bson?): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.sort","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/sort.html","searchKeys":["sort","fun sort(sort: Bson?): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.sort"]},{"name":"fun startAfter(startAfter: BsonDocument): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.startAfter","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/start-after.html","searchKeys":["startAfter","fun startAfter(startAfter: BsonDocument): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.startAfter"]},{"name":"fun startAtOperationTime(startAtOperationTime: BsonTimestamp): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.startAtOperationTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/start-at-operation-time.html","searchKeys":["startAtOperationTime","fun startAtOperationTime(startAtOperationTime: BsonTimestamp): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.startAtOperationTime"]},{"name":"fun startTransaction()","description":"com.mongodb.kotlin.client.coroutine.ClientSession.startTransaction","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/start-transaction.html","searchKeys":["startTransaction","fun startTransaction()","com.mongodb.kotlin.client.coroutine.ClientSession.startTransaction"]},{"name":"fun startTransaction(transactionOptions: TransactionOptions)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.startTransaction","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/start-transaction.html","searchKeys":["startTransaction","fun startTransaction(transactionOptions: TransactionOptions)","com.mongodb.kotlin.client.coroutine.ClientSession.startTransaction"]},{"name":"fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.timeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/timeout.html","searchKeys":["timeout","fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","com.mongodb.kotlin.client.coroutine.MongoCluster.timeout"]},{"name":"fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.timeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/timeout.html","searchKeys":["timeout","fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","com.mongodb.kotlin.client.coroutine.MongoCollection.timeout"]},{"name":"fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.timeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/timeout.html","searchKeys":["timeout","fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","com.mongodb.kotlin.client.coroutine.MongoDatabase.timeout"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): AggregateFlow<T>","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): AggregateFlow<T>","com.mongodb.kotlin.client.coroutine.AggregateFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): DistinctFlow<T>","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): DistinctFlow<T>","com.mongodb.kotlin.client.coroutine.DistinctFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): FindFlow<T>","description":"com.mongodb.kotlin.client.coroutine.FindFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): FindFlow<T>","com.mongodb.kotlin.client.coroutine.FindFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListCollectionsFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListCollectionsFlow<T>","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListDatabasesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListDatabasesFlow<T>","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListSearchIndexesFlow<T>","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListSearchIndexesFlow<T>","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.timeoutMode","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.timeoutMode"]},{"name":"fun verbose(verbose: Boolean): MapReduceFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.verbose","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/verbose.html","searchKeys":["verbose","fun verbose(verbose: Boolean): MapReduceFlow<T>","com.mongodb.kotlin.client.coroutine.MapReduceFlow.verbose"]},{"name":"fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/watch.html","searchKeys":["watch","fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCluster.watch"]},{"name":"fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/watch.html","searchKeys":["watch","fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoDatabase.watch"]},{"name":"fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/watch.html","searchKeys":["watch","fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.watch"]},{"name":"fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/watch.html","searchKeys":["watch","fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoCluster.watch"]},{"name":"fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/watch.html","searchKeys":["watch","fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamFlow<Document>","com.mongodb.kotlin.client.coroutine.MongoDatabase.watch"]},{"name":"fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamFlow<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.watch","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/watch.html","searchKeys":["watch","fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamFlow<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.watch"]},{"name":"fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCluster","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.withCodecRegistry","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/with-codec-registry.html","searchKeys":["withCodecRegistry","fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCluster","com.mongodb.kotlin.client.coroutine.MongoCluster.withCodecRegistry"]},{"name":"fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withCodecRegistry","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-codec-registry.html","searchKeys":["withCodecRegistry","fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.withCodecRegistry"]},{"name":"fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoDatabase","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.withCodecRegistry","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/with-codec-registry.html","searchKeys":["withCodecRegistry","fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoDatabase","com.mongodb.kotlin.client.coroutine.MongoDatabase.withCodecRegistry"]},{"name":"fun withReadConcern(newReadConcern: ReadConcern): MongoCluster","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.withReadConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/with-read-concern.html","searchKeys":["withReadConcern","fun withReadConcern(newReadConcern: ReadConcern): MongoCluster","com.mongodb.kotlin.client.coroutine.MongoCluster.withReadConcern"]},{"name":"fun withReadConcern(newReadConcern: ReadConcern): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withReadConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-read-concern.html","searchKeys":["withReadConcern","fun withReadConcern(newReadConcern: ReadConcern): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.withReadConcern"]},{"name":"fun withReadConcern(newReadConcern: ReadConcern): MongoDatabase","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.withReadConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/with-read-concern.html","searchKeys":["withReadConcern","fun withReadConcern(newReadConcern: ReadConcern): MongoDatabase","com.mongodb.kotlin.client.coroutine.MongoDatabase.withReadConcern"]},{"name":"fun withReadPreference(newReadPreference: ReadPreference): MongoCluster","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.withReadPreference","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/with-read-preference.html","searchKeys":["withReadPreference","fun withReadPreference(newReadPreference: ReadPreference): MongoCluster","com.mongodb.kotlin.client.coroutine.MongoCluster.withReadPreference"]},{"name":"fun withReadPreference(newReadPreference: ReadPreference): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withReadPreference","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-read-preference.html","searchKeys":["withReadPreference","fun withReadPreference(newReadPreference: ReadPreference): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.withReadPreference"]},{"name":"fun withReadPreference(newReadPreference: ReadPreference): MongoDatabase","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.withReadPreference","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/with-read-preference.html","searchKeys":["withReadPreference","fun withReadPreference(newReadPreference: ReadPreference): MongoDatabase","com.mongodb.kotlin.client.coroutine.MongoDatabase.withReadPreference"]},{"name":"fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCluster","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.withTimeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCluster","com.mongodb.kotlin.client.coroutine.MongoCluster.withTimeout"]},{"name":"fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withTimeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.withTimeout"]},{"name":"fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoDatabase","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.withTimeout","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoDatabase","com.mongodb.kotlin.client.coroutine.MongoDatabase.withTimeout"]},{"name":"fun withWriteConcern(newWriteConcern: WriteConcern): MongoCluster","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.withWriteConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/with-write-concern.html","searchKeys":["withWriteConcern","fun withWriteConcern(newWriteConcern: WriteConcern): MongoCluster","com.mongodb.kotlin.client.coroutine.MongoCluster.withWriteConcern"]},{"name":"fun withWriteConcern(newWriteConcern: WriteConcern): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withWriteConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-write-concern.html","searchKeys":["withWriteConcern","fun withWriteConcern(newWriteConcern: WriteConcern): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.withWriteConcern"]},{"name":"fun withWriteConcern(newWriteConcern: WriteConcern): MongoDatabase","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.withWriteConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/with-write-concern.html","searchKeys":["withWriteConcern","fun withWriteConcern(newWriteConcern: WriteConcern): MongoDatabase","com.mongodb.kotlin.client.coroutine.MongoDatabase.withWriteConcern"]},{"name":"inline fun <R : Any> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument()): DistinctFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.distinct","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/distinct.html","searchKeys":["distinct","inline fun <R : Any> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument()): DistinctFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.distinct"]},{"name":"inline fun <R : Any> distinct(fieldName: String, filter: Bson = BsonDocument()): DistinctFlow<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.distinct","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/distinct.html","searchKeys":["distinct","inline fun <R : Any> distinct(fieldName: String, filter: Bson = BsonDocument()): DistinctFlow<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.distinct"]},{"name":"inline fun <R : Any> withDocumentClass(): Flow<R>","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.withDocumentClass","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/with-document-class.html","searchKeys":["withDocumentClass","inline fun <R : Any> withDocumentClass(): Flow<R>","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.withDocumentClass"]},{"name":"inline fun <R : Any> withDocumentClass(): MongoCollection<R>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.withDocumentClass","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/with-document-class.html","searchKeys":["withDocumentClass","inline fun <R : Any> withDocumentClass(): MongoCollection<R>","com.mongodb.kotlin.client.coroutine.MongoCollection.withDocumentClass"]},{"name":"inline fun <T : Any> getCollection(collectionName: String): MongoCollection<T>","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.getCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/get-collection.html","searchKeys":["getCollection","inline fun <T : Any> getCollection(collectionName: String): MongoCollection<T>","com.mongodb.kotlin.client.coroutine.MongoDatabase.getCollection"]},{"name":"object Factory","description":"com.mongodb.kotlin.client.coroutine.MongoClient.Factory","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/-factory/index.html","searchKeys":["Factory","object Factory","com.mongodb.kotlin.client.coroutine.MongoClient.Factory"]},{"name":"open class MongoCluster","description":"com.mongodb.kotlin.client.coroutine.MongoCluster","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/index.html","searchKeys":["MongoCluster","open class MongoCluster","com.mongodb.kotlin.client.coroutine.MongoCluster"]},{"name":"open override fun advanceClusterTime(clusterTime: BsonDocument?)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.advanceClusterTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/advance-cluster-time.html","searchKeys":["advanceClusterTime","open override fun advanceClusterTime(clusterTime: BsonDocument?)","com.mongodb.kotlin.client.coroutine.ClientSession.advanceClusterTime"]},{"name":"open override fun advanceOperationTime(operationTime: BsonTimestamp?)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.advanceOperationTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/advance-operation-time.html","searchKeys":["advanceOperationTime","open override fun advanceOperationTime(operationTime: BsonTimestamp?)","com.mongodb.kotlin.client.coroutine.ClientSession.advanceOperationTime"]},{"name":"open override fun clearTransactionContext()","description":"com.mongodb.kotlin.client.coroutine.ClientSession.clearTransactionContext","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/clear-transaction-context.html","searchKeys":["clearTransactionContext","open override fun clearTransactionContext()","com.mongodb.kotlin.client.coroutine.ClientSession.clearTransactionContext"]},{"name":"open override fun close()","description":"com.mongodb.kotlin.client.coroutine.ClientSession.close","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/close.html","searchKeys":["close","open override fun close()","com.mongodb.kotlin.client.coroutine.ClientSession.close"]},{"name":"open override fun close()","description":"com.mongodb.kotlin.client.coroutine.MongoClient.close","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-client/close.html","searchKeys":["close","open override fun close()","com.mongodb.kotlin.client.coroutine.MongoClient.close"]},{"name":"open override fun getClusterTime(): BsonDocument","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getClusterTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-cluster-time.html","searchKeys":["getClusterTime","open override fun getClusterTime(): BsonDocument","com.mongodb.kotlin.client.coroutine.ClientSession.getClusterTime"]},{"name":"open override fun getOperationTime(): BsonTimestamp","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getOperationTime","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-operation-time.html","searchKeys":["getOperationTime","open override fun getOperationTime(): BsonTimestamp","com.mongodb.kotlin.client.coroutine.ClientSession.getOperationTime"]},{"name":"open override fun getOptions(): ClientSessionOptions","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getOptions","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-options.html","searchKeys":["getOptions","open override fun getOptions(): ClientSessionOptions","com.mongodb.kotlin.client.coroutine.ClientSession.getOptions"]},{"name":"open override fun getOriginator(): Any","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getOriginator","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-originator.html","searchKeys":["getOriginator","open override fun getOriginator(): Any","com.mongodb.kotlin.client.coroutine.ClientSession.getOriginator"]},{"name":"open override fun getPinnedServerAddress(): ServerAddress?","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getPinnedServerAddress","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-pinned-server-address.html","searchKeys":["getPinnedServerAddress","open override fun getPinnedServerAddress(): ServerAddress?","com.mongodb.kotlin.client.coroutine.ClientSession.getPinnedServerAddress"]},{"name":"open override fun getRecoveryToken(): BsonDocument?","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getRecoveryToken","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-recovery-token.html","searchKeys":["getRecoveryToken","open override fun getRecoveryToken(): BsonDocument?","com.mongodb.kotlin.client.coroutine.ClientSession.getRecoveryToken"]},{"name":"open override fun getServerSession(): ServerSession","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getServerSession","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-server-session.html","searchKeys":["getServerSession","open override fun getServerSession(): ServerSession","com.mongodb.kotlin.client.coroutine.ClientSession.getServerSession"]},{"name":"open override fun getSnapshotTimestamp(): BsonTimestamp?","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getSnapshotTimestamp","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-snapshot-timestamp.html","searchKeys":["getSnapshotTimestamp","open override fun getSnapshotTimestamp(): BsonTimestamp?","com.mongodb.kotlin.client.coroutine.ClientSession.getSnapshotTimestamp"]},{"name":"open override fun getTimeoutContext(): TimeoutContext?","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getTimeoutContext","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-timeout-context.html","searchKeys":["getTimeoutContext","open override fun getTimeoutContext(): TimeoutContext?","com.mongodb.kotlin.client.coroutine.ClientSession.getTimeoutContext"]},{"name":"open override fun getTransactionContext(): Any?","description":"com.mongodb.kotlin.client.coroutine.ClientSession.getTransactionContext","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/get-transaction-context.html","searchKeys":["getTransactionContext","open override fun getTransactionContext(): Any?","com.mongodb.kotlin.client.coroutine.ClientSession.getTransactionContext"]},{"name":"open override fun isCausallyConsistent(): Boolean","description":"com.mongodb.kotlin.client.coroutine.ClientSession.isCausallyConsistent","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/is-causally-consistent.html","searchKeys":["isCausallyConsistent","open override fun isCausallyConsistent(): Boolean","com.mongodb.kotlin.client.coroutine.ClientSession.isCausallyConsistent"]},{"name":"open override fun setRecoveryToken(recoveryToken: BsonDocument)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.setRecoveryToken","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/set-recovery-token.html","searchKeys":["setRecoveryToken","open override fun setRecoveryToken(recoveryToken: BsonDocument)","com.mongodb.kotlin.client.coroutine.ClientSession.setRecoveryToken"]},{"name":"open override fun setSnapshotTimestamp(snapshotTimestamp: BsonTimestamp?)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.setSnapshotTimestamp","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/set-snapshot-timestamp.html","searchKeys":["setSnapshotTimestamp","open override fun setSnapshotTimestamp(snapshotTimestamp: BsonTimestamp?)","com.mongodb.kotlin.client.coroutine.ClientSession.setSnapshotTimestamp"]},{"name":"open override fun setTransactionContext(address: ServerAddress, transactionContext: Any)","description":"com.mongodb.kotlin.client.coroutine.ClientSession.setTransactionContext","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/set-transaction-context.html","searchKeys":["setTransactionContext","open override fun setTransactionContext(address: ServerAddress, transactionContext: Any)","com.mongodb.kotlin.client.coroutine.ClientSession.setTransactionContext"]},{"name":"open suspend override fun collect(collector: FlowCollector<ChangeStreamDocument<T>>)","description":"com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-change-stream-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<ChangeStreamDocument<T>>)","com.mongodb.kotlin.client.coroutine.ChangeStreamFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<String>)","description":"com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collection-names-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<String>)","com.mongodb.kotlin.client.coroutine.ListCollectionNamesFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.AggregateFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.DistinctFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-distinct-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.DistinctFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.FindFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.FindFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-collections-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.ListCollectionsFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-databases-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.ListDatabasesFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.ListIndexesFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-indexes-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.ListIndexesFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.collect","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","com.mongodb.kotlin.client.coroutine.MapReduceFlow.collect"]},{"name":"suspend fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.explain","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/explain.html","searchKeys":["explain","suspend fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","com.mongodb.kotlin.client.coroutine.AggregateFlow.explain"]},{"name":"suspend fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","description":"com.mongodb.kotlin.client.coroutine.FindFlow.explain","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/explain.html","searchKeys":["explain","suspend fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","com.mongodb.kotlin.client.coroutine.FindFlow.explain"]},{"name":"suspend fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.explain","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/explain.html","searchKeys":["explain","suspend fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.explain"]},{"name":"suspend fun <T : Any> runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/run-command.html","searchKeys":["runCommand","suspend fun <T : Any> runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand"]},{"name":"suspend fun <T : Any> runCommand(command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/run-command.html","searchKeys":["runCommand","suspend fun <T : Any> runCommand(command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand"]},{"name":"suspend fun abortTransaction()","description":"com.mongodb.kotlin.client.coroutine.ClientSession.abortTransaction","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/abort-transaction.html","searchKeys":["abortTransaction","suspend fun abortTransaction()","com.mongodb.kotlin.client.coroutine.ClientSession.abortTransaction"]},{"name":"suspend fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","suspend fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite"]},{"name":"suspend fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","suspend fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite"]},{"name":"suspend fun bulkWrite(clientSession: ClientSession, requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.bulkWrite","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/bulk-write.html","searchKeys":["bulkWrite","suspend fun bulkWrite(clientSession: ClientSession, requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","com.mongodb.kotlin.client.coroutine.MongoCollection.bulkWrite"]},{"name":"suspend fun bulkWrite(models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","suspend fun bulkWrite(models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite"]},{"name":"suspend fun bulkWrite(models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","suspend fun bulkWrite(models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","com.mongodb.kotlin.client.coroutine.MongoCluster.bulkWrite"]},{"name":"suspend fun bulkWrite(requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.bulkWrite","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/bulk-write.html","searchKeys":["bulkWrite","suspend fun bulkWrite(requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","com.mongodb.kotlin.client.coroutine.MongoCollection.bulkWrite"]},{"name":"suspend fun commitTransaction()","description":"com.mongodb.kotlin.client.coroutine.ClientSession.commitTransaction","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/commit-transaction.html","searchKeys":["commitTransaction","suspend fun commitTransaction()","com.mongodb.kotlin.client.coroutine.ClientSession.commitTransaction"]},{"name":"suspend fun countDocuments(clientSession: ClientSession, filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.countDocuments","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/count-documents.html","searchKeys":["countDocuments","suspend fun countDocuments(clientSession: ClientSession, filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","com.mongodb.kotlin.client.coroutine.MongoCollection.countDocuments"]},{"name":"suspend fun countDocuments(filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.countDocuments","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/count-documents.html","searchKeys":["countDocuments","suspend fun countDocuments(filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","com.mongodb.kotlin.client.coroutine.MongoCollection.countDocuments"]},{"name":"suspend fun createCollection(clientSession: ClientSession, collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.createCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/create-collection.html","searchKeys":["createCollection","suspend fun createCollection(clientSession: ClientSession, collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","com.mongodb.kotlin.client.coroutine.MongoDatabase.createCollection"]},{"name":"suspend fun createCollection(collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.createCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/create-collection.html","searchKeys":["createCollection","suspend fun createCollection(collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","com.mongodb.kotlin.client.coroutine.MongoDatabase.createCollection"]},{"name":"suspend fun createIndex(clientSession: ClientSession, keys: Bson, options: IndexOptions = IndexOptions()): String","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-index.html","searchKeys":["createIndex","suspend fun createIndex(clientSession: ClientSession, keys: Bson, options: IndexOptions = IndexOptions()): String","com.mongodb.kotlin.client.coroutine.MongoCollection.createIndex"]},{"name":"suspend fun createIndex(keys: Bson, options: IndexOptions = IndexOptions()): String","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-index.html","searchKeys":["createIndex","suspend fun createIndex(keys: Bson, options: IndexOptions = IndexOptions()): String","com.mongodb.kotlin.client.coroutine.MongoCollection.createIndex"]},{"name":"suspend fun createSearchIndex(definition: Bson): String","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createSearchIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-search-index.html","searchKeys":["createSearchIndex","suspend fun createSearchIndex(definition: Bson): String","com.mongodb.kotlin.client.coroutine.MongoCollection.createSearchIndex"]},{"name":"suspend fun createSearchIndex(indexName: String, definition: Bson): String","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.createSearchIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/create-search-index.html","searchKeys":["createSearchIndex","suspend fun createSearchIndex(indexName: String, definition: Bson): String","com.mongodb.kotlin.client.coroutine.MongoCollection.createSearchIndex"]},{"name":"suspend fun createView(clientSession: ClientSession, viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.createView","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/create-view.html","searchKeys":["createView","suspend fun createView(clientSession: ClientSession, viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","com.mongodb.kotlin.client.coroutine.MongoDatabase.createView"]},{"name":"suspend fun createView(viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.createView","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/create-view.html","searchKeys":["createView","suspend fun createView(viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","com.mongodb.kotlin.client.coroutine.MongoDatabase.createView"]},{"name":"suspend fun deleteMany(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.deleteMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/delete-many.html","searchKeys":["deleteMany","suspend fun deleteMany(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.coroutine.MongoCollection.deleteMany"]},{"name":"suspend fun deleteMany(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.deleteMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/delete-many.html","searchKeys":["deleteMany","suspend fun deleteMany(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.coroutine.MongoCollection.deleteMany"]},{"name":"suspend fun deleteOne(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.deleteOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/delete-one.html","searchKeys":["deleteOne","suspend fun deleteOne(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.coroutine.MongoCollection.deleteOne"]},{"name":"suspend fun deleteOne(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.deleteOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/delete-one.html","searchKeys":["deleteOne","suspend fun deleteOne(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.coroutine.MongoCollection.deleteOne"]},{"name":"suspend fun drop()","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.drop","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/drop.html","searchKeys":["drop","suspend fun drop()","com.mongodb.kotlin.client.coroutine.MongoDatabase.drop"]},{"name":"suspend fun drop(clientSession: ClientSession)","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.drop","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/drop.html","searchKeys":["drop","suspend fun drop(clientSession: ClientSession)","com.mongodb.kotlin.client.coroutine.MongoDatabase.drop"]},{"name":"suspend fun drop(clientSession: ClientSession, options: DropCollectionOptions = DropCollectionOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.drop","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop.html","searchKeys":["drop","suspend fun drop(clientSession: ClientSession, options: DropCollectionOptions = DropCollectionOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.drop"]},{"name":"suspend fun drop(options: DropCollectionOptions = DropCollectionOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.drop","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop.html","searchKeys":["drop","suspend fun drop(options: DropCollectionOptions = DropCollectionOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.drop"]},{"name":"suspend fun dropIndex(clientSession: ClientSession, indexName: String, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-index.html","searchKeys":["dropIndex","suspend fun dropIndex(clientSession: ClientSession, indexName: String, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex"]},{"name":"suspend fun dropIndex(clientSession: ClientSession, keys: Bson, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-index.html","searchKeys":["dropIndex","suspend fun dropIndex(clientSession: ClientSession, keys: Bson, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex"]},{"name":"suspend fun dropIndex(indexName: String, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-index.html","searchKeys":["dropIndex","suspend fun dropIndex(indexName: String, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex"]},{"name":"suspend fun dropIndex(keys: Bson, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-index.html","searchKeys":["dropIndex","suspend fun dropIndex(keys: Bson, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndex"]},{"name":"suspend fun dropIndexes(clientSession: ClientSession, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-indexes.html","searchKeys":["dropIndexes","suspend fun dropIndexes(clientSession: ClientSession, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndexes"]},{"name":"suspend fun dropIndexes(options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndexes","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-indexes.html","searchKeys":["dropIndexes","suspend fun dropIndexes(options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.dropIndexes"]},{"name":"suspend fun dropSearchIndex(indexName: String)","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.dropSearchIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/drop-search-index.html","searchKeys":["dropSearchIndex","suspend fun dropSearchIndex(indexName: String)","com.mongodb.kotlin.client.coroutine.MongoCollection.dropSearchIndex"]},{"name":"suspend fun estimatedDocumentCount(options: EstimatedDocumentCountOptions = EstimatedDocumentCountOptions()): Long","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.estimatedDocumentCount","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/estimated-document-count.html","searchKeys":["estimatedDocumentCount","suspend fun estimatedDocumentCount(options: EstimatedDocumentCountOptions = EstimatedDocumentCountOptions()): Long","com.mongodb.kotlin.client.coroutine.MongoCollection.estimatedDocumentCount"]},{"name":"suspend fun explain(verbosity: ExplainVerbosity? = null): Document","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.explain","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/explain.html","searchKeys":["explain","suspend fun explain(verbosity: ExplainVerbosity? = null): Document","com.mongodb.kotlin.client.coroutine.AggregateFlow.explain"]},{"name":"suspend fun explain(verbosity: ExplainVerbosity? = null): Document","description":"com.mongodb.kotlin.client.coroutine.FindFlow.explain","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-find-flow/explain.html","searchKeys":["explain","suspend fun explain(verbosity: ExplainVerbosity? = null): Document","com.mongodb.kotlin.client.coroutine.FindFlow.explain"]},{"name":"suspend fun explain(verbosity: ExplainVerbosity? = null): Document","description":"com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.explain","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-list-search-indexes-flow/explain.html","searchKeys":["explain","suspend fun explain(verbosity: ExplainVerbosity? = null): Document","com.mongodb.kotlin.client.coroutine.ListSearchIndexesFlow.explain"]},{"name":"suspend fun findOneAndDelete(clientSession: ClientSession, filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndDelete","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-delete.html","searchKeys":["findOneAndDelete","suspend fun findOneAndDelete(clientSession: ClientSession, filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndDelete"]},{"name":"suspend fun findOneAndDelete(filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndDelete","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-delete.html","searchKeys":["findOneAndDelete","suspend fun findOneAndDelete(filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndDelete"]},{"name":"suspend fun findOneAndReplace(clientSession: ClientSession, filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndReplace","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-replace.html","searchKeys":["findOneAndReplace","suspend fun findOneAndReplace(clientSession: ClientSession, filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndReplace"]},{"name":"suspend fun findOneAndReplace(filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndReplace","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-replace.html","searchKeys":["findOneAndReplace","suspend fun findOneAndReplace(filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndReplace"]},{"name":"suspend fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","suspend fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate"]},{"name":"suspend fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","suspend fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate"]},{"name":"suspend fun findOneAndUpdate(filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","suspend fun findOneAndUpdate(filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate"]},{"name":"suspend fun findOneAndUpdate(filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","suspend fun findOneAndUpdate(filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.coroutine.MongoCollection.findOneAndUpdate"]},{"name":"suspend fun insertMany(clientSession: ClientSession, documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.insertMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/insert-many.html","searchKeys":["insertMany","suspend fun insertMany(clientSession: ClientSession, documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","com.mongodb.kotlin.client.coroutine.MongoCollection.insertMany"]},{"name":"suspend fun insertMany(documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.insertMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/insert-many.html","searchKeys":["insertMany","suspend fun insertMany(documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","com.mongodb.kotlin.client.coroutine.MongoCollection.insertMany"]},{"name":"suspend fun insertOne(clientSession: ClientSession, document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.insertOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/insert-one.html","searchKeys":["insertOne","suspend fun insertOne(clientSession: ClientSession, document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","com.mongodb.kotlin.client.coroutine.MongoCollection.insertOne"]},{"name":"suspend fun insertOne(document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.insertOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/insert-one.html","searchKeys":["insertOne","suspend fun insertOne(document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","com.mongodb.kotlin.client.coroutine.MongoCollection.insertOne"]},{"name":"suspend fun renameCollection(clientSession: ClientSession, newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.renameCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/rename-collection.html","searchKeys":["renameCollection","suspend fun renameCollection(clientSession: ClientSession, newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.renameCollection"]},{"name":"suspend fun renameCollection(newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.renameCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/rename-collection.html","searchKeys":["renameCollection","suspend fun renameCollection(newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","com.mongodb.kotlin.client.coroutine.MongoCollection.renameCollection"]},{"name":"suspend fun replaceOne(clientSession: ClientSession, filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.replaceOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/replace-one.html","searchKeys":["replaceOne","suspend fun replaceOne(clientSession: ClientSession, filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.replaceOne"]},{"name":"suspend fun replaceOne(filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.replaceOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/replace-one.html","searchKeys":["replaceOne","suspend fun replaceOne(filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.replaceOne"]},{"name":"suspend fun runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference): Document","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/run-command.html","searchKeys":["runCommand","suspend fun runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference): Document","com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand"]},{"name":"suspend fun runCommand(command: Bson, readPreference: ReadPreference = this.readPreference): Document","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/run-command.html","searchKeys":["runCommand","suspend fun runCommand(command: Bson, readPreference: ReadPreference = this.readPreference): Document","com.mongodb.kotlin.client.coroutine.MongoDatabase.runCommand"]},{"name":"suspend fun startSession(options: ClientSessionOptions = ClientSessionOptions.builder().build()): ClientSession","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.startSession","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/start-session.html","searchKeys":["startSession","suspend fun startSession(options: ClientSessionOptions = ClientSessionOptions.builder().build()): ClientSession","com.mongodb.kotlin.client.coroutine.MongoCluster.startSession"]},{"name":"suspend fun toCollection()","description":"com.mongodb.kotlin.client.coroutine.AggregateFlow.toCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-aggregate-flow/to-collection.html","searchKeys":["toCollection","suspend fun toCollection()","com.mongodb.kotlin.client.coroutine.AggregateFlow.toCollection"]},{"name":"suspend fun toCollection()","description":"com.mongodb.kotlin.client.coroutine.MapReduceFlow.toCollection","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-map-reduce-flow/to-collection.html","searchKeys":["toCollection","suspend fun toCollection()","com.mongodb.kotlin.client.coroutine.MapReduceFlow.toCollection"]},{"name":"suspend fun updateMany(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-many.html","searchKeys":["updateMany","suspend fun updateMany(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany"]},{"name":"suspend fun updateMany(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-many.html","searchKeys":["updateMany","suspend fun updateMany(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany"]},{"name":"suspend fun updateMany(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-many.html","searchKeys":["updateMany","suspend fun updateMany(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany"]},{"name":"suspend fun updateMany(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-many.html","searchKeys":["updateMany","suspend fun updateMany(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateMany"]},{"name":"suspend fun updateOne(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-one.html","searchKeys":["updateOne","suspend fun updateOne(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne"]},{"name":"suspend fun updateOne(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-one.html","searchKeys":["updateOne","suspend fun updateOne(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne"]},{"name":"suspend fun updateOne(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-one.html","searchKeys":["updateOne","suspend fun updateOne(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne"]},{"name":"suspend fun updateOne(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-one.html","searchKeys":["updateOne","suspend fun updateOne(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.coroutine.MongoCollection.updateOne"]},{"name":"suspend fun updateSearchIndex(indexName: String, definition: Bson)","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.updateSearchIndex","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/update-search-index.html","searchKeys":["updateSearchIndex","suspend fun updateSearchIndex(indexName: String, definition: Bson)","com.mongodb.kotlin.client.coroutine.MongoCollection.updateSearchIndex"]},{"name":"val codecRegistry: CodecRegistry","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.codecRegistry","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/codec-registry.html","searchKeys":["codecRegistry","val codecRegistry: CodecRegistry","com.mongodb.kotlin.client.coroutine.MongoCluster.codecRegistry"]},{"name":"val codecRegistry: CodecRegistry","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.codecRegistry","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/codec-registry.html","searchKeys":["codecRegistry","val codecRegistry: CodecRegistry","com.mongodb.kotlin.client.coroutine.MongoCollection.codecRegistry"]},{"name":"val codecRegistry: CodecRegistry","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.codecRegistry","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/codec-registry.html","searchKeys":["codecRegistry","val codecRegistry: CodecRegistry","com.mongodb.kotlin.client.coroutine.MongoDatabase.codecRegistry"]},{"name":"val documentClass: Class<T>","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.documentClass","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/document-class.html","searchKeys":["documentClass","val documentClass: Class<T>","com.mongodb.kotlin.client.coroutine.MongoCollection.documentClass"]},{"name":"val name: String","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.name","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/name.html","searchKeys":["name","val name: String","com.mongodb.kotlin.client.coroutine.MongoDatabase.name"]},{"name":"val namespace: MongoNamespace","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.namespace","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/namespace.html","searchKeys":["namespace","val namespace: MongoNamespace","com.mongodb.kotlin.client.coroutine.MongoCollection.namespace"]},{"name":"val readConcern: ReadConcern","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.readConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/read-concern.html","searchKeys":["readConcern","val readConcern: ReadConcern","com.mongodb.kotlin.client.coroutine.MongoCluster.readConcern"]},{"name":"val readConcern: ReadConcern","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.readConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/read-concern.html","searchKeys":["readConcern","val readConcern: ReadConcern","com.mongodb.kotlin.client.coroutine.MongoCollection.readConcern"]},{"name":"val readConcern: ReadConcern","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.readConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/read-concern.html","searchKeys":["readConcern","val readConcern: ReadConcern","com.mongodb.kotlin.client.coroutine.MongoDatabase.readConcern"]},{"name":"val readPreference: ReadPreference","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.readPreference","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/read-preference.html","searchKeys":["readPreference","val readPreference: ReadPreference","com.mongodb.kotlin.client.coroutine.MongoCluster.readPreference"]},{"name":"val readPreference: ReadPreference","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.readPreference","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/read-preference.html","searchKeys":["readPreference","val readPreference: ReadPreference","com.mongodb.kotlin.client.coroutine.MongoCollection.readPreference"]},{"name":"val readPreference: ReadPreference","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.readPreference","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/read-preference.html","searchKeys":["readPreference","val readPreference: ReadPreference","com.mongodb.kotlin.client.coroutine.MongoDatabase.readPreference"]},{"name":"val wrapped: ClientSession","description":"com.mongodb.kotlin.client.coroutine.ClientSession.wrapped","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-client-session/wrapped.html","searchKeys":["wrapped","val wrapped: ClientSession","com.mongodb.kotlin.client.coroutine.ClientSession.wrapped"]},{"name":"val writeConcern: WriteConcern","description":"com.mongodb.kotlin.client.coroutine.MongoCluster.writeConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-cluster/write-concern.html","searchKeys":["writeConcern","val writeConcern: WriteConcern","com.mongodb.kotlin.client.coroutine.MongoCluster.writeConcern"]},{"name":"val writeConcern: WriteConcern","description":"com.mongodb.kotlin.client.coroutine.MongoCollection.writeConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-collection/write-concern.html","searchKeys":["writeConcern","val writeConcern: WriteConcern","com.mongodb.kotlin.client.coroutine.MongoCollection.writeConcern"]},{"name":"val writeConcern: WriteConcern","description":"com.mongodb.kotlin.client.coroutine.MongoDatabase.writeConcern","location":"mongodb-driver-kotlin-coroutine/com.mongodb.kotlin.client.coroutine/-mongo-database/write-concern.html","searchKeys":["writeConcern","val writeConcern: WriteConcern","com.mongodb.kotlin.client.coroutine.MongoDatabase.writeConcern"]}]
