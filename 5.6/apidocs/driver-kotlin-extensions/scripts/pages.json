[{"name":"class KCollectionSimplePropertyPath<T, R>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>) : KCollectionPropertyPath<T, R, KPropertyPath<T, R?>> ","description":"com.mongodb.kotlin.client.property.KCollectionSimplePropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-simple-property-path/index.html","searchKeys":["KCollectionSimplePropertyPath","class KCollectionSimplePropertyPath<T, R>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>) : KCollectionPropertyPath<T, R, KPropertyPath<T, R?>> ","com.mongodb.kotlin.client.property.KCollectionSimplePropertyPath"]},{"name":"class KMapSimplePropertyPath<T, K, R>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>) : KMapPropertyPath<T, K, R, KPropertyPath<T, R?>> ","description":"com.mongodb.kotlin.client.property.KMapSimplePropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-map-simple-property-path/index.html","searchKeys":["KMapSimplePropertyPath","class KMapSimplePropertyPath<T, K, R>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>) : KMapPropertyPath<T, K, R, KPropertyPath<T, R?>> ","com.mongodb.kotlin.client.property.KMapSimplePropertyPath"]},{"name":"constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>)","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath.KCollectionPropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/-k-collection-property-path.html","searchKeys":["KCollectionPropertyPath","constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>)","com.mongodb.kotlin.client.property.KCollectionPropertyPath.KCollectionPropertyPath"]},{"name":"constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>)","description":"com.mongodb.kotlin.client.property.KCollectionSimplePropertyPath.KCollectionSimplePropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-simple-property-path/-k-collection-simple-property-path.html","searchKeys":["KCollectionSimplePropertyPath","constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>)","com.mongodb.kotlin.client.property.KCollectionSimplePropertyPath.KCollectionSimplePropertyPath"]},{"name":"constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>)","description":"com.mongodb.kotlin.client.property.KMapPropertyPath.KMapPropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-map-property-path/-k-map-property-path.html","searchKeys":["KMapPropertyPath","constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>)","com.mongodb.kotlin.client.property.KMapPropertyPath.KMapPropertyPath"]},{"name":"constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>)","description":"com.mongodb.kotlin.client.property.KMapSimplePropertyPath.KMapSimplePropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-map-simple-property-path/-k-map-simple-property-path.html","searchKeys":["KMapSimplePropertyPath","constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>)","com.mongodb.kotlin.client.property.KMapSimplePropertyPath.KMapSimplePropertyPath"]},{"name":"constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, R?>)","description":"com.mongodb.kotlin.client.property.KPropertyPath.KPropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/-k-property-path.html","searchKeys":["KPropertyPath","constructor(previous: KPropertyPath<T, *>?, property: KProperty1<*, R?>)","com.mongodb.kotlin.client.property.KPropertyPath.KPropertyPath"]},{"name":"fun <FROM : Any> lookup(from: MongoCollection<FROM>, localField: KProperty1<out Any, Any?>, foreignField: KProperty1<FROM, Any?>, newAs: String): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.lookup","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/lookup.html","searchKeys":["lookup","fun <FROM : Any> lookup(from: MongoCollection<FROM>, localField: KProperty1<out Any, Any?>, foreignField: KProperty1<FROM, Any?>, newAs: String): Bson","com.mongodb.kotlin.client.model.Aggregates.lookup"]},{"name":"fun <FROM : Any> lookup(from: MongoCollection<FROM>, localField: KProperty1<out Any, Any?>, foreignField: KProperty1<FROM, Any?>, newAs: String): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.lookup","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/lookup.html","searchKeys":["lookup","fun <FROM : Any> lookup(from: MongoCollection<FROM>, localField: KProperty1<out Any, Any?>, foreignField: KProperty1<FROM, Any?>, newAs: String): Bson","com.mongodb.kotlin.client.model.Aggregates.lookup"]},{"name":"fun <InExpression, NExpression> firstN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.firstN","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/first-n.html","searchKeys":["firstN","fun <InExpression, NExpression> firstN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.firstN"]},{"name":"fun <InExpression, NExpression> lastN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.lastN","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/last-n.html","searchKeys":["lastN","fun <InExpression, NExpression> lastN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.lastN"]},{"name":"fun <InExpression, NExpression> maxN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.maxN","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/max-n.html","searchKeys":["maxN","fun <InExpression, NExpression> maxN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.maxN"]},{"name":"fun <InExpression, NExpression> minN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.minN","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/min-n.html","searchKeys":["minN","fun <InExpression, NExpression> minN(property: KProperty<*>, inExpression: InExpression, nExpression: NExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.minN"]},{"name":"fun <InExpression, PExpression> percentile(property: KProperty<*>, inExpression: InExpression, pExpression: PExpression, method: QuantileMethod): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.percentile","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/percentile.html","searchKeys":["percentile","fun <InExpression, PExpression> percentile(property: KProperty<*>, inExpression: InExpression, pExpression: PExpression, method: QuantileMethod): BsonField","com.mongodb.kotlin.client.model.Accumulators.percentile"]},{"name":"fun <InExpression> median(property: KProperty<*>, inExpression: InExpression, method: QuantileMethod): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.median","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/median.html","searchKeys":["median","fun <InExpression> median(property: KProperty<*>, inExpression: InExpression, method: QuantileMethod): BsonField","com.mongodb.kotlin.client.model.Accumulators.median"]},{"name":"fun <K, T> KProperty1<out Any?, Map<out K, T>?>.keyProjection(key: K): KPropertyPath<Any?, T?>","description":"com.mongodb.kotlin.client.model.keyProjection","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/key-projection.html","searchKeys":["keyProjection","fun <K, T> KProperty1<out Any?, Map<out K, T>?>.keyProjection(key: K): KPropertyPath<Any?, T?>","com.mongodb.kotlin.client.model.keyProjection"]},{"name":"fun <OutExpression, NExpression> bottomN(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression, nExpression: NExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.bottomN","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/bottom-n.html","searchKeys":["bottomN","fun <OutExpression, NExpression> bottomN(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression, nExpression: NExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.bottomN"]},{"name":"fun <OutExpression, NExpression> topN(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression, nExpression: NExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.topN","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/top-n.html","searchKeys":["topN","fun <OutExpression, NExpression> topN(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression, nExpression: NExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.topN"]},{"name":"fun <OutExpression> bottom(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.bottom","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/bottom.html","searchKeys":["bottom","fun <OutExpression> bottom(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.bottom"]},{"name":"fun <OutExpression> top(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.top","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/top.html","searchKeys":["top","fun <OutExpression> top(property: KProperty<*>, sortBy: Bson, outExpression: OutExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.top"]},{"name":"fun <T : Number?> bitwiseAnd(property: KProperty<T>, value: Int): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseAnd","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-and.html","searchKeys":["bitwiseAnd","fun <T : Number?> bitwiseAnd(property: KProperty<T>, value: Int): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseAnd"]},{"name":"fun <T : Number?> bitwiseAnd(property: KProperty<T>, value: Long): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseAnd","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-and.html","searchKeys":["bitwiseAnd","fun <T : Number?> bitwiseAnd(property: KProperty<T>, value: Long): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseAnd"]},{"name":"fun <T : Number?> bitwiseOr(property: KProperty<T>, value: Int): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseOr","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-or.html","searchKeys":["bitwiseOr","fun <T : Number?> bitwiseOr(property: KProperty<T>, value: Int): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseOr"]},{"name":"fun <T : Number?> bitwiseOr(property: KProperty<T>, value: Long): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseOr","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-or.html","searchKeys":["bitwiseOr","fun <T : Number?> bitwiseOr(property: KProperty<T>, value: Long): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseOr"]},{"name":"fun <T : Number?> bitwiseXor(property: KProperty<T>, value: Int): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseXor","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-xor.html","searchKeys":["bitwiseXor","fun <T : Number?> bitwiseXor(property: KProperty<T>, value: Int): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseXor"]},{"name":"fun <T : Number?> bitwiseXor(property: KProperty<T>, value: Long): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseXor","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-xor.html","searchKeys":["bitwiseXor","fun <T : Number?> bitwiseXor(property: KProperty<T>, value: Long): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseXor"]},{"name":"fun <T : Number?> inc(property: KProperty<T>, number: Number): Bson","description":"com.mongodb.kotlin.client.model.Updates.inc","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/inc.html","searchKeys":["inc","fun <T : Number?> inc(property: KProperty<T>, number: Number): Bson","com.mongodb.kotlin.client.model.Updates.inc"]},{"name":"fun <T : Number?> mul(property: KProperty<T>, number: Number): Bson","description":"com.mongodb.kotlin.client.model.Updates.mul","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/mul.html","searchKeys":["mul","fun <T : Number?> mul(property: KProperty<T>, number: Number): Bson","com.mongodb.kotlin.client.model.Updates.mul"]},{"name":"fun <T, R> customProperty(previous: KPropertyPath<*, T>, path: String): KProperty1<T, R?>","description":"com.mongodb.kotlin.client.property.KPropertyPath.Companion.customProperty","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/-companion/custom-property.html","searchKeys":["customProperty","fun <T, R> customProperty(previous: KPropertyPath<*, T>, path: String): KProperty1<T, R?>","com.mongodb.kotlin.client.property.KPropertyPath.Companion.customProperty"]},{"name":"fun <T> KProperty1<out Any?, Iterable<T>?>.filteredPosOp(identifier: String): KPropertyPath<out Any?, T?>","description":"com.mongodb.kotlin.client.model.filteredPosOp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/filtered-pos-op.html","searchKeys":["filteredPosOp","fun <T> KProperty1<out Any?, Iterable<T>?>.filteredPosOp(identifier: String): KPropertyPath<out Any?, T?>","com.mongodb.kotlin.client.model.filteredPosOp"]},{"name":"fun <T> KProperty1<out Any?, Iterable<T>?>.pos(position: Int): KPropertyPath<out Any?, T?>","description":"com.mongodb.kotlin.client.model.pos","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/pos.html","searchKeys":["pos","fun <T> KProperty1<out Any?, Iterable<T>?>.pos(position: Int): KPropertyPath<out Any?, T?>","com.mongodb.kotlin.client.model.pos"]},{"name":"fun <T> KProperty<Iterable<T>?>.all(vararg values: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.all","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/all.html","searchKeys":["all","fun <T> KProperty<Iterable<T>?>.all(vararg values: T): Bson","com.mongodb.kotlin.client.model.Filters.all"]},{"name":"fun <T> KProperty<T>.computedSearchMeta(): Bson","description":"com.mongodb.kotlin.client.model.Projections.computedSearchMeta","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed-search-meta.html","searchKeys":["computedSearchMeta","fun <T> KProperty<T>.computedSearchMeta(): Bson","com.mongodb.kotlin.client.model.Projections.computedSearchMeta"]},{"name":"fun <T> KProperty<T>.metaSearchHighlights(): Bson","description":"com.mongodb.kotlin.client.model.Projections.metaSearchHighlights","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/meta-search-highlights.html","searchKeys":["metaSearchHighlights","fun <T> KProperty<T>.metaSearchHighlights(): Bson","com.mongodb.kotlin.client.model.Projections.metaSearchHighlights"]},{"name":"fun <T> KProperty<T>.metaSearchScore(): Bson","description":"com.mongodb.kotlin.client.model.Projections.metaSearchScore","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/meta-search-score.html","searchKeys":["metaSearchScore","fun <T> KProperty<T>.metaSearchScore(): Bson","com.mongodb.kotlin.client.model.Projections.metaSearchScore"]},{"name":"fun <T> KProperty<T>.metaTextScore(): Bson","description":"com.mongodb.kotlin.client.model.Projections.metaTextScore","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/meta-text-score.html","searchKeys":["metaTextScore","fun <T> KProperty<T>.metaTextScore(): Bson","com.mongodb.kotlin.client.model.Projections.metaTextScore"]},{"name":"fun <T> KProperty<T>.metaVectorSearchScore(): Bson","description":"com.mongodb.kotlin.client.model.Projections.metaVectorSearchScore","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/meta-vector-search-score.html","searchKeys":["metaVectorSearchScore","fun <T> KProperty<T>.metaVectorSearchScore(): Bson","com.mongodb.kotlin.client.model.Projections.metaVectorSearchScore"]},{"name":"fun <T> KProperty<T>.path(): String","description":"com.mongodb.kotlin.client.model.path","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/path.html","searchKeys":["path","fun <T> KProperty<T>.path(): String","com.mongodb.kotlin.client.model.path"]},{"name":"fun <T> KProperty<T>.slice(skip: Int, limit: Int): Bson","description":"com.mongodb.kotlin.client.model.Projections.slice","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/slice.html","searchKeys":["slice","fun <T> KProperty<T>.slice(skip: Int, limit: Int): Bson","com.mongodb.kotlin.client.model.Projections.slice"]},{"name":"fun <T> KProperty<T?>.exists(): Bson","description":"com.mongodb.kotlin.client.model.Filters.exists","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/exists.html","searchKeys":["exists","fun <T> KProperty<T?>.exists(): Bson","com.mongodb.kotlin.client.model.Filters.exists"]},{"name":"fun <T> KProperty<T?>.geoWithinBox(lowerLeftX: Double, lowerLeftY: Double, upperRightX: Double, upperRightY: Double): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinBox","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-box.html","searchKeys":["geoWithinBox","fun <T> KProperty<T?>.geoWithinBox(lowerLeftX: Double, lowerLeftY: Double, upperRightX: Double, upperRightY: Double): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinBox"]},{"name":"fun <T> KProperty<T?>.geoWithinCenter(x: Double, y: Double, radius: Double): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinCenter","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-center.html","searchKeys":["geoWithinCenter","fun <T> KProperty<T?>.geoWithinCenter(x: Double, y: Double, radius: Double): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinCenter"]},{"name":"fun <T> KProperty<T?>.geoWithinCenterSphere(x: Double, y: Double, radius: Double): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinCenterSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-center-sphere.html","searchKeys":["geoWithinCenterSphere","fun <T> KProperty<T?>.geoWithinCenterSphere(x: Double, y: Double, radius: Double): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinCenterSphere"]},{"name":"fun <T> KProperty<T?>.mod(divisor: Long, remainder: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.mod","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/mod.html","searchKeys":["mod","fun <T> KProperty<T?>.mod(divisor: Long, remainder: Long): Bson","com.mongodb.kotlin.client.model.Filters.mod"]},{"name":"fun <T> KProperty<T?>.near(geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.near","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near.html","searchKeys":["near","fun <T> KProperty<T?>.near(geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.near"]},{"name":"fun <T> KProperty<T?>.near(geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.near","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near.html","searchKeys":["near","fun <T> KProperty<T?>.near(geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.near"]},{"name":"fun <T> KProperty<T?>.near(x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.near","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near.html","searchKeys":["near","fun <T> KProperty<T?>.near(x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.near"]},{"name":"fun <T> KProperty<T?>.nearSphere(geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.nearSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near-sphere.html","searchKeys":["nearSphere","fun <T> KProperty<T?>.nearSphere(geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.nearSphere"]},{"name":"fun <T> KProperty<T?>.nearSphere(geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.nearSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near-sphere.html","searchKeys":["nearSphere","fun <T> KProperty<T?>.nearSphere(geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.nearSphere"]},{"name":"fun <T> KProperty<T?>.nearSphere(x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.nearSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near-sphere.html","searchKeys":["nearSphere","fun <T> KProperty<T?>.nearSphere(x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.nearSphere"]},{"name":"fun <T> accumulator(property: KProperty<T>, initFunction: String, accumulateFunction: String, mergeFunction: String): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.accumulator","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/accumulator.html","searchKeys":["accumulator","fun <T> accumulator(property: KProperty<T>, initFunction: String, accumulateFunction: String, mergeFunction: String): BsonField","com.mongodb.kotlin.client.model.Accumulators.accumulator"]},{"name":"fun <T> accumulator(property: KProperty<T>, initFunction: String, accumulateFunction: String, mergeFunction: String, finalizeFunction: String?): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.accumulator","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/accumulator.html","searchKeys":["accumulator","fun <T> accumulator(property: KProperty<T>, initFunction: String, accumulateFunction: String, mergeFunction: String, finalizeFunction: String?): BsonField","com.mongodb.kotlin.client.model.Accumulators.accumulator"]},{"name":"fun <T> accumulator(property: KProperty<T>, initFunction: String, accumulateFunction: String, mergeFunction: String, finalizeFunction: String?, lang: String): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.accumulator","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/accumulator.html","searchKeys":["accumulator","fun <T> accumulator(property: KProperty<T>, initFunction: String, accumulateFunction: String, mergeFunction: String, finalizeFunction: String?, lang: String): BsonField","com.mongodb.kotlin.client.model.Accumulators.accumulator"]},{"name":"fun <T> accumulator(property: KProperty<T>, initFunction: String, initArgs: List<String>?, accumulateFunction: String, accumulateArgs: List<String>?, mergeFunction: String, finalizeFunction: String?): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.accumulator","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/accumulator.html","searchKeys":["accumulator","fun <T> accumulator(property: KProperty<T>, initFunction: String, initArgs: List<String>?, accumulateFunction: String, accumulateArgs: List<String>?, mergeFunction: String, finalizeFunction: String?): BsonField","com.mongodb.kotlin.client.model.Accumulators.accumulator"]},{"name":"fun <T> accumulator(property: KProperty<T>, initFunction: String, initArgs: List<String>?, accumulateFunction: String, accumulateArgs: List<String>?, mergeFunction: String, finalizeFunction: String?, lang: String): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.accumulator","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/accumulator.html","searchKeys":["accumulator","fun <T> accumulator(property: KProperty<T>, initFunction: String, initArgs: List<String>?, accumulateFunction: String, accumulateArgs: List<String>?, mergeFunction: String, finalizeFunction: String?, lang: String): BsonField","com.mongodb.kotlin.client.model.Accumulators.accumulator"]},{"name":"fun <T> addEachToSet(property: KProperty<Iterable<T>?>, values: List<T>): Bson","description":"com.mongodb.kotlin.client.model.Updates.addEachToSet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/add-each-to-set.html","searchKeys":["addEachToSet","fun <T> addEachToSet(property: KProperty<Iterable<T>?>, values: List<T>): Bson","com.mongodb.kotlin.client.model.Updates.addEachToSet"]},{"name":"fun <T> addToSet(property: KProperty<Iterable<T>?>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.addToSet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/add-to-set.html","searchKeys":["addToSet","fun <T> addToSet(property: KProperty<Iterable<T>?>, value: T): Bson","com.mongodb.kotlin.client.model.Updates.addToSet"]},{"name":"fun <T> all(property: KProperty<Iterable<T>?>, values: Iterable<T>): Bson","description":"com.mongodb.kotlin.client.model.Filters.all","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/all.html","searchKeys":["all","fun <T> all(property: KProperty<Iterable<T>?>, values: Iterable<T>): Bson","com.mongodb.kotlin.client.model.Filters.all"]},{"name":"fun <T> all(property: KProperty<Iterable<T>?>, vararg values: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.all","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/all.html","searchKeys":["all","fun <T> all(property: KProperty<Iterable<T>?>, vararg values: T): Bson","com.mongodb.kotlin.client.model.Filters.all"]},{"name":"fun <T> bitsAllClear(property: KProperty<T?>, bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAllClear","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-all-clear.html","searchKeys":["bitsAllClear","fun <T> bitsAllClear(property: KProperty<T?>, bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAllClear"]},{"name":"fun <T> bitsAllSet(property: KProperty<T?>, bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAllSet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-all-set.html","searchKeys":["bitsAllSet","fun <T> bitsAllSet(property: KProperty<T?>, bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAllSet"]},{"name":"fun <T> bitsAnyClear(property: KProperty<T?>, bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAnyClear","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-any-clear.html","searchKeys":["bitsAnyClear","fun <T> bitsAnyClear(property: KProperty<T?>, bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAnyClear"]},{"name":"fun <T> bitsAnySet(property: KProperty<T?>, bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAnySet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-any-set.html","searchKeys":["bitsAnySet","fun <T> bitsAnySet(property: KProperty<T?>, bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAnySet"]},{"name":"fun <T> computed(property: KProperty<T>, expression: Any): Bson","description":"com.mongodb.kotlin.client.model.Projections.computed","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed.html","searchKeys":["computed","fun <T> computed(property: KProperty<T>, expression: Any): Bson","com.mongodb.kotlin.client.model.Projections.computed"]},{"name":"fun <T> computedSearchMeta(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Projections.computedSearchMeta","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed-search-meta.html","searchKeys":["computedSearchMeta","fun <T> computedSearchMeta(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Projections.computedSearchMeta"]},{"name":"fun <T> count(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.count","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/count.html","searchKeys":["count","fun <T> count(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Aggregates.count"]},{"name":"fun <T> currentDate(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Updates.currentDate","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/current-date.html","searchKeys":["currentDate","fun <T> currentDate(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Updates.currentDate"]},{"name":"fun <T> currentTimestamp(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Updates.currentTimestamp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/current-timestamp.html","searchKeys":["currentTimestamp","fun <T> currentTimestamp(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Updates.currentTimestamp"]},{"name":"fun <T> densify(property: KProperty<T>, range: DensifyRange): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.densify","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/densify.html","searchKeys":["densify","fun <T> densify(property: KProperty<T>, range: DensifyRange): Bson","com.mongodb.kotlin.client.model.Aggregates.densify"]},{"name":"fun <T> densify(property: KProperty<T>, range: DensifyRange, options: DensifyOptions): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.densify","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/densify.html","searchKeys":["densify","fun <T> densify(property: KProperty<T>, range: DensifyRange, options: DensifyOptions): Bson","com.mongodb.kotlin.client.model.Aggregates.densify"]},{"name":"fun <T> elemMatch(property: KProperty<Iterable<T>?>, filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.elemMatch","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/elem-match.html","searchKeys":["elemMatch","fun <T> elemMatch(property: KProperty<Iterable<T>?>, filter: Bson): Bson","com.mongodb.kotlin.client.model.Filters.elemMatch"]},{"name":"fun <T> elemMatch(property: KProperty<T>, filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Projections.elemMatch","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/elem-match.html","searchKeys":["elemMatch","fun <T> elemMatch(property: KProperty<T>, filter: Bson): Bson","com.mongodb.kotlin.client.model.Projections.elemMatch"]},{"name":"fun <T> eq(property: KProperty<T?>, value: T?): Bson","description":"com.mongodb.kotlin.client.model.Filters.eq","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/eq.html","searchKeys":["eq","fun <T> eq(property: KProperty<T?>, value: T?): Bson","com.mongodb.kotlin.client.model.Filters.eq"]},{"name":"fun <T> exists(property: KProperty<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.exists","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/exists.html","searchKeys":["exists","fun <T> exists(property: KProperty<T?>): Bson","com.mongodb.kotlin.client.model.Filters.exists"]},{"name":"fun <T> exists(property: KProperty<T?>, exists: Boolean): Bson","description":"com.mongodb.kotlin.client.model.Filters.exists","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/exists.html","searchKeys":["exists","fun <T> exists(property: KProperty<T?>, exists: Boolean): Bson","com.mongodb.kotlin.client.model.Filters.exists"]},{"name":"fun <T> expr(expression: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.expr","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/expr.html","searchKeys":["expr","fun <T> expr(expression: T): Bson","com.mongodb.kotlin.client.model.Filters.expr"]},{"name":"fun <T> geo2d(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.geo2d","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/geo2d.html","searchKeys":["geo2d","fun <T> geo2d(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Indexes.geo2d"]},{"name":"fun <T> geoIntersects(property: KProperty<T?>, geometry: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoIntersects","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-intersects.html","searchKeys":["geoIntersects","fun <T> geoIntersects(property: KProperty<T?>, geometry: Bson): Bson","com.mongodb.kotlin.client.model.Filters.geoIntersects"]},{"name":"fun <T> geoIntersects(property: KProperty<T?>, geometry: Geometry): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoIntersects","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-intersects.html","searchKeys":["geoIntersects","fun <T> geoIntersects(property: KProperty<T?>, geometry: Geometry): Bson","com.mongodb.kotlin.client.model.Filters.geoIntersects"]},{"name":"fun <T> geoWithin(property: KProperty<T?>, geometry: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within.html","searchKeys":["geoWithin","fun <T> geoWithin(property: KProperty<T?>, geometry: Bson): Bson","com.mongodb.kotlin.client.model.Filters.geoWithin"]},{"name":"fun <T> geoWithin(property: KProperty<T?>, geometry: Geometry): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within.html","searchKeys":["geoWithin","fun <T> geoWithin(property: KProperty<T?>, geometry: Geometry): Bson","com.mongodb.kotlin.client.model.Filters.geoWithin"]},{"name":"fun <T> geoWithinBox(property: KProperty<T?>, lowerLeftX: Double, lowerLeftY: Double, upperRightX: Double, upperRightY: Double): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinBox","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-box.html","searchKeys":["geoWithinBox","fun <T> geoWithinBox(property: KProperty<T?>, lowerLeftX: Double, lowerLeftY: Double, upperRightX: Double, upperRightY: Double): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinBox"]},{"name":"fun <T> geoWithinCenter(property: KProperty<T?>, x: Double, y: Double, radius: Double): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinCenter","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-center.html","searchKeys":["geoWithinCenter","fun <T> geoWithinCenter(property: KProperty<T?>, x: Double, y: Double, radius: Double): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinCenter"]},{"name":"fun <T> geoWithinCenterSphere(property: KProperty<T?>, x: Double, y: Double, radius: Double): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinCenterSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-center-sphere.html","searchKeys":["geoWithinCenterSphere","fun <T> geoWithinCenterSphere(property: KProperty<T?>, x: Double, y: Double, radius: Double): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinCenterSphere"]},{"name":"fun <T> geoWithinPolygon(property: KProperty<T?>, points: List<List<Double>>): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinPolygon","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-polygon.html","searchKeys":["geoWithinPolygon","fun <T> geoWithinPolygon(property: KProperty<T?>, points: List<List<Double>>): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinPolygon"]},{"name":"fun <T> gt(property: KProperty<T>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.gt","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/gt.html","searchKeys":["gt","fun <T> gt(property: KProperty<T>, value: T): Bson","com.mongodb.kotlin.client.model.Filters.gt"]},{"name":"fun <T> gte(property: KProperty<T>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.gte","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/gte.html","searchKeys":["gte","fun <T> gte(property: KProperty<T>, value: T): Bson","com.mongodb.kotlin.client.model.Filters.gte"]},{"name":"fun <T> hashed(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.hashed","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/hashed.html","searchKeys":["hashed","fun <T> hashed(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Indexes.hashed"]},{"name":"fun <T> in(property: KProperty<Iterable<T>?>, values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.in","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/in.html","searchKeys":["in","fun <T> in(property: KProperty<Iterable<T>?>, values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.in"]},{"name":"fun <T> in(property: KProperty<T?>, values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.in","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/in.html","searchKeys":["in","fun <T> in(property: KProperty<T?>, values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.in"]},{"name":"fun <T> lt(property: KProperty<T?>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.lt","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/lt.html","searchKeys":["lt","fun <T> lt(property: KProperty<T?>, value: T): Bson","com.mongodb.kotlin.client.model.Filters.lt"]},{"name":"fun <T> lte(property: KProperty<T?>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.lte","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/lte.html","searchKeys":["lte","fun <T> lte(property: KProperty<T?>, value: T): Bson","com.mongodb.kotlin.client.model.Filters.lte"]},{"name":"fun <T> max(property: KProperty<T>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.max","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/max.html","searchKeys":["max","fun <T> max(property: KProperty<T>, value: T): Bson","com.mongodb.kotlin.client.model.Updates.max"]},{"name":"fun <T> meta(property: KProperty<T>, metaFieldName: String): Bson","description":"com.mongodb.kotlin.client.model.Projections.meta","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/meta.html","searchKeys":["meta","fun <T> meta(property: KProperty<T>, metaFieldName: String): Bson","com.mongodb.kotlin.client.model.Projections.meta"]},{"name":"fun <T> metaTextScore(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Sorts.metaTextScore","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-sorts/meta-text-score.html","searchKeys":["metaTextScore","fun <T> metaTextScore(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Sorts.metaTextScore"]},{"name":"fun <T> min(property: KProperty<T>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.min","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/min.html","searchKeys":["min","fun <T> min(property: KProperty<T>, value: T): Bson","com.mongodb.kotlin.client.model.Updates.min"]},{"name":"fun <T> mod(property: KProperty<T?>, divisor: Long, remainder: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.mod","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/mod.html","searchKeys":["mod","fun <T> mod(property: KProperty<T?>, divisor: Long, remainder: Long): Bson","com.mongodb.kotlin.client.model.Filters.mod"]},{"name":"fun <T> ne(property: KProperty<T?>, value: T?): Bson","description":"com.mongodb.kotlin.client.model.Filters.ne","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/ne.html","searchKeys":["ne","fun <T> ne(property: KProperty<T?>, value: T?): Bson","com.mongodb.kotlin.client.model.Filters.ne"]},{"name":"fun <T> near(property: KProperty<T?>, geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.near","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near.html","searchKeys":["near","fun <T> near(property: KProperty<T?>, geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.near"]},{"name":"fun <T> near(property: KProperty<T?>, geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.near","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near.html","searchKeys":["near","fun <T> near(property: KProperty<T?>, geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.near"]},{"name":"fun <T> near(property: KProperty<T?>, x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.near","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near.html","searchKeys":["near","fun <T> near(property: KProperty<T?>, x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.near"]},{"name":"fun <T> nearSphere(property: KProperty<T?>, geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.nearSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near-sphere.html","searchKeys":["nearSphere","fun <T> nearSphere(property: KProperty<T?>, geometry: Bson, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.nearSphere"]},{"name":"fun <T> nearSphere(property: KProperty<T?>, geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.nearSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near-sphere.html","searchKeys":["nearSphere","fun <T> nearSphere(property: KProperty<T?>, geometry: Point, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.nearSphere"]},{"name":"fun <T> nearSphere(property: KProperty<T?>, x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","description":"com.mongodb.kotlin.client.model.Filters.nearSphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/near-sphere.html","searchKeys":["nearSphere","fun <T> nearSphere(property: KProperty<T?>, x: Double, y: Double, maxDistance: Double? = null, minDistance: Double? = null): Bson","com.mongodb.kotlin.client.model.Filters.nearSphere"]},{"name":"fun <T> nin(property: KProperty<Iterable<T>?>, values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.nin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/nin.html","searchKeys":["nin","fun <T> nin(property: KProperty<Iterable<T>?>, values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.nin"]},{"name":"fun <T> nin(property: KProperty<T?>, values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.nin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/nin.html","searchKeys":["nin","fun <T> nin(property: KProperty<T?>, values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.nin"]},{"name":"fun <T> popFirst(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Updates.popFirst","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pop-first.html","searchKeys":["popFirst","fun <T> popFirst(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Updates.popFirst"]},{"name":"fun <T> popLast(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Updates.popLast","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pop-last.html","searchKeys":["popLast","fun <T> popLast(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Updates.popLast"]},{"name":"fun <T> pull(property: KProperty<Iterable<T?>?>, value: T?): Bson","description":"com.mongodb.kotlin.client.model.Updates.pull","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull.html","searchKeys":["pull","fun <T> pull(property: KProperty<Iterable<T?>?>, value: T?): Bson","com.mongodb.kotlin.client.model.Updates.pull"]},{"name":"fun <T> pullAll(property: KProperty<Iterable<T>?>, values: List<T?>?): Bson","description":"com.mongodb.kotlin.client.model.Updates.pullAll","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull-all.html","searchKeys":["pullAll","fun <T> pullAll(property: KProperty<Iterable<T>?>, values: List<T?>?): Bson","com.mongodb.kotlin.client.model.Updates.pullAll"]},{"name":"fun <T> push(property: KProperty<Iterable<T>?>, value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.push","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/push.html","searchKeys":["push","fun <T> push(property: KProperty<Iterable<T>?>, value: T): Bson","com.mongodb.kotlin.client.model.Updates.push"]},{"name":"fun <T> pushEach(property: KProperty<Iterable<T>?>, values: List<T?>, options: PushOptions = PushOptions()): Bson","description":"com.mongodb.kotlin.client.model.Updates.pushEach","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/push-each.html","searchKeys":["pushEach","fun <T> pushEach(property: KProperty<Iterable<T>?>, values: List<T?>, options: PushOptions = PushOptions()): Bson","com.mongodb.kotlin.client.model.Updates.pushEach"]},{"name":"fun <T> rename(property: KProperty<T?>, newProperty: KProperty<T?>): Bson","description":"com.mongodb.kotlin.client.model.Updates.rename","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/rename.html","searchKeys":["rename","fun <T> rename(property: KProperty<T?>, newProperty: KProperty<T?>): Bson","com.mongodb.kotlin.client.model.Updates.rename"]},{"name":"fun <T> set(property: KProperty<T?>, value: T?): Bson","description":"com.mongodb.kotlin.client.model.Updates.set","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/set.html","searchKeys":["set","fun <T> set(property: KProperty<T?>, value: T?): Bson","com.mongodb.kotlin.client.model.Updates.set"]},{"name":"fun <T> setOnInsert(property: KProperty<T?>, value: T?): Bson","description":"com.mongodb.kotlin.client.model.Updates.setOnInsert","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/set-on-insert.html","searchKeys":["setOnInsert","fun <T> setOnInsert(property: KProperty<T?>, value: T?): Bson","com.mongodb.kotlin.client.model.Updates.setOnInsert"]},{"name":"fun <T> size(property: KProperty<T?>, size: Int): Bson","description":"com.mongodb.kotlin.client.model.Filters.size","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/size.html","searchKeys":["size","fun <T> size(property: KProperty<T?>, size: Int): Bson","com.mongodb.kotlin.client.model.Filters.size"]},{"name":"fun <T> text(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.text","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/text.html","searchKeys":["text","fun <T> text(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Indexes.text"]},{"name":"fun <T> type(property: KProperty<T?>, type: BsonType): Bson","description":"com.mongodb.kotlin.client.model.Filters.type","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/type.html","searchKeys":["type","fun <T> type(property: KProperty<T?>, type: BsonType): Bson","com.mongodb.kotlin.client.model.Filters.type"]},{"name":"fun <T> unset(property: KProperty<T>): Bson","description":"com.mongodb.kotlin.client.model.Updates.unset","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/unset.html","searchKeys":["unset","fun <T> unset(property: KProperty<T>): Bson","com.mongodb.kotlin.client.model.Updates.unset"]},{"name":"fun <T> unwind(property: KProperty<Iterable<T>?>, unwindOptions: UnwindOptions = UnwindOptions()): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.unwind","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/unwind.html","searchKeys":["unwind","fun <T> unwind(property: KProperty<Iterable<T>?>, unwindOptions: UnwindOptions = UnwindOptions()): Bson","com.mongodb.kotlin.client.model.Aggregates.unwind"]},{"name":"fun <TExpression, FROM : Any> graphLookup(from: MongoCollection<FROM>, startWith: TExpression, connectFromField: KProperty1<FROM, Any?>, connectToField: KProperty1<FROM, Any?>, fieldAs: String, options: GraphLookupOptions = GraphLookupOptions()): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.graphLookup","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/graph-lookup.html","searchKeys":["graphLookup","fun <TExpression, FROM : Any> graphLookup(from: MongoCollection<FROM>, startWith: TExpression, connectFromField: KProperty1<FROM, Any?>, connectToField: KProperty1<FROM, Any?>, fieldAs: String, options: GraphLookupOptions = GraphLookupOptions()): Bson","com.mongodb.kotlin.client.model.Aggregates.graphLookup"]},{"name":"fun <TExpression, FROM : Any> graphLookup(from: MongoCollection<FROM>, startWith: TExpression, connectFromField: KProperty1<FROM, Any?>, connectToField: KProperty1<FROM, Any?>, fieldAs: String, options: GraphLookupOptions = GraphLookupOptions()): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.graphLookup","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/graph-lookup.html","searchKeys":["graphLookup","fun <TExpression, FROM : Any> graphLookup(from: MongoCollection<FROM>, startWith: TExpression, connectFromField: KProperty1<FROM, Any?>, connectToField: KProperty1<FROM, Any?>, fieldAs: String, options: GraphLookupOptions = GraphLookupOptions()): Bson","com.mongodb.kotlin.client.model.Aggregates.graphLookup"]},{"name":"fun <TExpression> addToSet(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.addToSet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/add-to-set.html","searchKeys":["addToSet","fun <TExpression> addToSet(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.addToSet"]},{"name":"fun <TExpression> avg(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.avg","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/avg.html","searchKeys":["avg","fun <TExpression> avg(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.avg"]},{"name":"fun <TExpression> first(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.first","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/first.html","searchKeys":["first","fun <TExpression> first(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.first"]},{"name":"fun <TExpression> last(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.last","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/last.html","searchKeys":["last","fun <TExpression> last(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.last"]},{"name":"fun <TExpression> max(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.max","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/max.html","searchKeys":["max","fun <TExpression> max(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.max"]},{"name":"fun <TExpression> mergeObjects(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.mergeObjects","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/merge-objects.html","searchKeys":["mergeObjects","fun <TExpression> mergeObjects(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.mergeObjects"]},{"name":"fun <TExpression> min(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.min","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/min.html","searchKeys":["min","fun <TExpression> min(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.min"]},{"name":"fun <TExpression> push(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.push","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/push.html","searchKeys":["push","fun <TExpression> push(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.push"]},{"name":"fun <TExpression> stdDevPop(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.stdDevPop","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/std-dev-pop.html","searchKeys":["stdDevPop","fun <TExpression> stdDevPop(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.stdDevPop"]},{"name":"fun <TExpression> stdDevSamp(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.stdDevSamp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/std-dev-samp.html","searchKeys":["stdDevSamp","fun <TExpression> stdDevSamp(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.stdDevSamp"]},{"name":"fun <TExpression> sum(property: KProperty<*>, expression: TExpression): BsonField","description":"com.mongodb.kotlin.client.model.Accumulators.sum","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/sum.html","searchKeys":["sum","fun <TExpression> sum(property: KProperty<*>, expression: TExpression): BsonField","com.mongodb.kotlin.client.model.Accumulators.sum"]},{"name":"fun KProperty<Iterable<String?>>.regex(regex: String, options: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun KProperty<Iterable<String?>>.regex(regex: String, options: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun KProperty<String?>.regex(pattern: String, options: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun KProperty<String?>.regex(pattern: String, options: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun and(filters: Iterable<Bson?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.and","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/and.html","searchKeys":["and","fun and(filters: Iterable<Bson?>): Bson","com.mongodb.kotlin.client.model.Filters.and"]},{"name":"fun and(vararg filters: Bson?): Bson","description":"com.mongodb.kotlin.client.model.Filters.and","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/and.html","searchKeys":["and","fun and(vararg filters: Bson?): Bson","com.mongodb.kotlin.client.model.Filters.and"]},{"name":"fun ascending(properties: Iterable<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.ascending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/ascending.html","searchKeys":["ascending","fun ascending(properties: Iterable<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Indexes.ascending"]},{"name":"fun ascending(properties: List<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Sorts.ascending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-sorts/ascending.html","searchKeys":["ascending","fun ascending(properties: List<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Sorts.ascending"]},{"name":"fun ascending(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.ascending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/ascending.html","searchKeys":["ascending","fun ascending(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Indexes.ascending"]},{"name":"fun ascending(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Sorts.ascending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-sorts/ascending.html","searchKeys":["ascending","fun ascending(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Sorts.ascending"]},{"name":"fun combine(updates: List<Bson>): Bson","description":"com.mongodb.kotlin.client.model.Updates.combine","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/combine.html","searchKeys":["combine","fun combine(updates: List<Bson>): Bson","com.mongodb.kotlin.client.model.Updates.combine"]},{"name":"fun combine(vararg updates: Bson): Bson","description":"com.mongodb.kotlin.client.model.Updates.combine","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/combine.html","searchKeys":["combine","fun combine(vararg updates: Bson): Bson","com.mongodb.kotlin.client.model.Updates.combine"]},{"name":"fun computed(property: String, expression: Any): Bson","description":"com.mongodb.kotlin.client.model.Projections.computed","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed.html","searchKeys":["computed","fun computed(property: String, expression: Any): Bson","com.mongodb.kotlin.client.model.Projections.computed"]},{"name":"fun descending(properties: Iterable<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.descending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/descending.html","searchKeys":["descending","fun descending(properties: Iterable<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Indexes.descending"]},{"name":"fun descending(properties: List<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Sorts.descending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-sorts/descending.html","searchKeys":["descending","fun descending(properties: List<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Sorts.descending"]},{"name":"fun descending(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.descending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/descending.html","searchKeys":["descending","fun descending(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Indexes.descending"]},{"name":"fun descending(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Sorts.descending","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-sorts/descending.html","searchKeys":["descending","fun descending(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Sorts.descending"]},{"name":"fun exclude(properties: Iterable<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Projections.exclude","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/exclude.html","searchKeys":["exclude","fun exclude(properties: Iterable<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Projections.exclude"]},{"name":"fun exclude(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Projections.exclude","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/exclude.html","searchKeys":["exclude","fun exclude(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Projections.exclude"]},{"name":"fun excludeId(): Bson","description":"com.mongodb.kotlin.client.model.Projections.excludeId","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/exclude-id.html","searchKeys":["excludeId","fun excludeId(): Bson","com.mongodb.kotlin.client.model.Projections.excludeId"]},{"name":"fun fields(projections: List<Bson>): Bson","description":"com.mongodb.kotlin.client.model.Projections.fields","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/fields.html","searchKeys":["fields","fun fields(projections: List<Bson>): Bson","com.mongodb.kotlin.client.model.Projections.fields"]},{"name":"fun fields(vararg projections: Bson): Bson","description":"com.mongodb.kotlin.client.model.Projections.fields","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/fields.html","searchKeys":["fields","fun fields(vararg projections: Bson): Bson","com.mongodb.kotlin.client.model.Projections.fields"]},{"name":"fun filteredPosOp(identifier: String): MEMBER","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath.filteredPosOp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/filtered-pos-op.html","searchKeys":["filteredPosOp","fun filteredPosOp(identifier: String): MEMBER","com.mongodb.kotlin.client.property.KCollectionPropertyPath.filteredPosOp"]},{"name":"fun geo2dsphere(properties: Iterable<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.geo2dsphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/geo2dsphere.html","searchKeys":["geo2dsphere","fun geo2dsphere(properties: Iterable<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Indexes.geo2dsphere"]},{"name":"fun geo2dsphere(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Indexes.geo2dsphere","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/geo2dsphere.html","searchKeys":["geo2dsphere","fun geo2dsphere(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Indexes.geo2dsphere"]},{"name":"fun include(properties: Iterable<KProperty<*>>): Bson","description":"com.mongodb.kotlin.client.model.Projections.include","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/include.html","searchKeys":["include","fun include(properties: Iterable<KProperty<*>>): Bson","com.mongodb.kotlin.client.model.Projections.include"]},{"name":"fun include(vararg properties: KProperty<*>): Bson","description":"com.mongodb.kotlin.client.model.Projections.include","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/include.html","searchKeys":["include","fun include(vararg properties: KProperty<*>): Bson","com.mongodb.kotlin.client.model.Projections.include"]},{"name":"fun jsonSchema(schema: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.jsonSchema","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/json-schema.html","searchKeys":["jsonSchema","fun jsonSchema(schema: Bson): Bson","com.mongodb.kotlin.client.model.Filters.jsonSchema"]},{"name":"fun keyProjection(key: K): MEMBER","description":"com.mongodb.kotlin.client.property.KMapPropertyPath.keyProjection","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-map-property-path/key-projection.html","searchKeys":["keyProjection","fun keyProjection(key: K): MEMBER","com.mongodb.kotlin.client.property.KMapPropertyPath.keyProjection"]},{"name":"fun merge(collection: MongoCollection<*>, options: MergeOptions = MergeOptions()): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.merge","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/merge.html","searchKeys":["merge","fun merge(collection: MongoCollection<*>, options: MergeOptions = MergeOptions()): Bson","com.mongodb.kotlin.client.model.Aggregates.merge"]},{"name":"fun merge(collection: MongoCollection<*>, options: MergeOptions = MergeOptions()): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.merge","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/merge.html","searchKeys":["merge","fun merge(collection: MongoCollection<*>, options: MergeOptions = MergeOptions()): Bson","com.mongodb.kotlin.client.model.Aggregates.merge"]},{"name":"fun nor(filters: Iterable<Bson>): Bson","description":"com.mongodb.kotlin.client.model.Filters.nor","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/nor.html","searchKeys":["nor","fun nor(filters: Iterable<Bson>): Bson","com.mongodb.kotlin.client.model.Filters.nor"]},{"name":"fun nor(vararg filters: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.nor","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/nor.html","searchKeys":["nor","fun nor(vararg filters: Bson): Bson","com.mongodb.kotlin.client.model.Filters.nor"]},{"name":"fun not(filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.not","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/not.html","searchKeys":["not","fun not(filter: Bson): Bson","com.mongodb.kotlin.client.model.Filters.not"]},{"name":"fun or(filters: Iterable<Bson?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.or","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/or.html","searchKeys":["or","fun or(filters: Iterable<Bson?>): Bson","com.mongodb.kotlin.client.model.Filters.or"]},{"name":"fun or(vararg filters: Bson?): Bson","description":"com.mongodb.kotlin.client.model.Filters.or","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/or.html","searchKeys":["or","fun or(vararg filters: Bson?): Bson","com.mongodb.kotlin.client.model.Filters.or"]},{"name":"fun out(collection: MongoCollection<*>): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.out","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/--out--.html","searchKeys":["out","fun out(collection: MongoCollection<*>): Bson","com.mongodb.kotlin.client.model.Aggregates.out"]},{"name":"fun out(collection: MongoCollection<*>): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.out","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/--out--.html","searchKeys":["out","fun out(collection: MongoCollection<*>): Bson","com.mongodb.kotlin.client.model.Aggregates.out"]},{"name":"fun pos(position: Int): MEMBER","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath.pos","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/pos.html","searchKeys":["pos","fun pos(position: Int): MEMBER","com.mongodb.kotlin.client.property.KCollectionPropertyPath.pos"]},{"name":"fun pullByFilter(filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Updates.pullByFilter","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull-by-filter.html","searchKeys":["pullByFilter","fun pullByFilter(filter: Bson): Bson","com.mongodb.kotlin.client.model.Updates.pullByFilter"]},{"name":"fun pullByFilter(property: KProperty<*>, filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Updates.pullByFilter","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull-by-filter.html","searchKeys":["pullByFilter","fun pullByFilter(property: KProperty<*>, filter: Bson): Bson","com.mongodb.kotlin.client.model.Updates.pullByFilter"]},{"name":"fun regex(property: KProperty<Iterable<String?>>, pattern: Pattern): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<Iterable<String?>>, pattern: Pattern): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<Iterable<String?>>, pattern: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<Iterable<String?>>, pattern: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<Iterable<String?>>, regex: Regex): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<Iterable<String?>>, regex: Regex): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<Iterable<String?>>, regex: String, options: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<Iterable<String?>>, regex: String, options: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<String?>, pattern: Pattern): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<String?>, pattern: Pattern): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<String?>, pattern: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<String?>, pattern: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<String?>, pattern: String, options: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<String?>, pattern: String, options: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun regex(property: KProperty<String?>, regex: Regex): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","fun regex(property: KProperty<String?>, regex: Regex): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"fun text(search: String, textSearchOptions: TextSearchOptions = TextSearchOptions()): Bson","description":"com.mongodb.kotlin.client.model.Filters.text","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/text.html","searchKeys":["text","fun text(search: String, textSearchOptions: TextSearchOptions = TextSearchOptions()): Bson","com.mongodb.kotlin.client.model.Filters.text"]},{"name":"fun unionWith(collection: MongoCollection<*>, pipeline: List<Bson>): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.unionWith","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/union-with.html","searchKeys":["unionWith","fun unionWith(collection: MongoCollection<*>, pipeline: List<Bson>): Bson","com.mongodb.kotlin.client.model.Aggregates.unionWith"]},{"name":"fun unionWith(collection: MongoCollection<*>, pipeline: List<Bson>): Bson","description":"com.mongodb.kotlin.client.model.Aggregates.unionWith","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/union-with.html","searchKeys":["unionWith","fun unionWith(collection: MongoCollection<*>, pipeline: List<Bson>): Bson","com.mongodb.kotlin.client.model.Aggregates.unionWith"]},{"name":"fun where(javaScriptExpression: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.where","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/where.html","searchKeys":["where","fun where(javaScriptExpression: String): Bson","com.mongodb.kotlin.client.model.Filters.where"]},{"name":"infix fun <T : Number?> KProperty<T>.bitwiseAnd(value: Int): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseAnd","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-and.html","searchKeys":["bitwiseAnd","infix fun <T : Number?> KProperty<T>.bitwiseAnd(value: Int): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseAnd"]},{"name":"infix fun <T : Number?> KProperty<T>.bitwiseAnd(value: Long): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseAnd","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-and.html","searchKeys":["bitwiseAnd","infix fun <T : Number?> KProperty<T>.bitwiseAnd(value: Long): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseAnd"]},{"name":"infix fun <T : Number?> KProperty<T>.bitwiseOr(value: Int): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseOr","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-or.html","searchKeys":["bitwiseOr","infix fun <T : Number?> KProperty<T>.bitwiseOr(value: Int): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseOr"]},{"name":"infix fun <T : Number?> KProperty<T>.bitwiseOr(value: Long): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseOr","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-or.html","searchKeys":["bitwiseOr","infix fun <T : Number?> KProperty<T>.bitwiseOr(value: Long): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseOr"]},{"name":"infix fun <T : Number?> KProperty<T>.bitwiseXor(value: Int): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseXor","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-xor.html","searchKeys":["bitwiseXor","infix fun <T : Number?> KProperty<T>.bitwiseXor(value: Int): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseXor"]},{"name":"infix fun <T : Number?> KProperty<T>.bitwiseXor(value: Long): Bson","description":"com.mongodb.kotlin.client.model.Updates.bitwiseXor","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/bitwise-xor.html","searchKeys":["bitwiseXor","infix fun <T : Number?> KProperty<T>.bitwiseXor(value: Long): Bson","com.mongodb.kotlin.client.model.Updates.bitwiseXor"]},{"name":"infix fun <T : Number?> KProperty<T>.inc(number: Number): Bson","description":"com.mongodb.kotlin.client.model.Updates.inc","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/inc.html","searchKeys":["inc","infix fun <T : Number?> KProperty<T>.inc(number: Number): Bson","com.mongodb.kotlin.client.model.Updates.inc"]},{"name":"infix fun <T : Number?> KProperty<T>.mul(number: Number): Bson","description":"com.mongodb.kotlin.client.model.Updates.mul","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/mul.html","searchKeys":["mul","infix fun <T : Number?> KProperty<T>.mul(number: Number): Bson","com.mongodb.kotlin.client.model.Updates.mul"]},{"name":"infix fun <T0, T1> KProperty1<T0, T1?>.projectionWith(p2: String): String","description":"com.mongodb.kotlin.client.model.Projections.projectionWith","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/projection-with.html","searchKeys":["projectionWith","infix fun <T0, T1> KProperty1<T0, T1?>.projectionWith(p2: String): String","com.mongodb.kotlin.client.model.Projections.projectionWith"]},{"name":"infix fun <T> KProperty<Iterable<T>?>.addToSet(value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.addToSet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/add-to-set.html","searchKeys":["addToSet","infix fun <T> KProperty<Iterable<T>?>.addToSet(value: T): Bson","com.mongodb.kotlin.client.model.Updates.addToSet"]},{"name":"infix fun <T> KProperty<Iterable<T>?>.all(values: Iterable<T>): Bson","description":"com.mongodb.kotlin.client.model.Filters.all","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/all.html","searchKeys":["all","infix fun <T> KProperty<Iterable<T>?>.all(values: Iterable<T>): Bson","com.mongodb.kotlin.client.model.Filters.all"]},{"name":"infix fun <T> KProperty<Iterable<T>?>.elemMatch(filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.elemMatch","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/elem-match.html","searchKeys":["elemMatch","infix fun <T> KProperty<Iterable<T>?>.elemMatch(filter: Bson): Bson","com.mongodb.kotlin.client.model.Filters.elemMatch"]},{"name":"infix fun <T> KProperty<Iterable<T>?>.in(values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.in","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/in.html","searchKeys":["in","infix fun <T> KProperty<Iterable<T>?>.in(values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.in"]},{"name":"infix fun <T> KProperty<Iterable<T>?>.nin(values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.nin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/nin.html","searchKeys":["nin","infix fun <T> KProperty<Iterable<T>?>.nin(values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.nin"]},{"name":"infix fun <T> KProperty<Iterable<T>?>.pullAll(values: List<T?>?): Bson","description":"com.mongodb.kotlin.client.model.Updates.pullAll","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull-all.html","searchKeys":["pullAll","infix fun <T> KProperty<Iterable<T>?>.pullAll(values: List<T?>?): Bson","com.mongodb.kotlin.client.model.Updates.pullAll"]},{"name":"infix fun <T> KProperty<Iterable<T?>?>.pull(value: T?): Bson","description":"com.mongodb.kotlin.client.model.Updates.pull","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull.html","searchKeys":["pull","infix fun <T> KProperty<Iterable<T?>?>.pull(value: T?): Bson","com.mongodb.kotlin.client.model.Updates.pull"]},{"name":"infix fun <T> KProperty<T>.computed(expression: Any): Bson","description":"com.mongodb.kotlin.client.model.Projections.computed","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed.html","searchKeys":["computed","infix fun <T> KProperty<T>.computed(expression: Any): Bson","com.mongodb.kotlin.client.model.Projections.computed"]},{"name":"infix fun <T> KProperty<T>.elemMatch(filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Projections.elemMatch","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/elem-match.html","searchKeys":["elemMatch","infix fun <T> KProperty<T>.elemMatch(filter: Bson): Bson","com.mongodb.kotlin.client.model.Projections.elemMatch"]},{"name":"infix fun <T> KProperty<T>.gt(value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.gt","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/gt.html","searchKeys":["gt","infix fun <T> KProperty<T>.gt(value: T): Bson","com.mongodb.kotlin.client.model.Filters.gt"]},{"name":"infix fun <T> KProperty<T>.gte(value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.gte","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/gte.html","searchKeys":["gte","infix fun <T> KProperty<T>.gte(value: T): Bson","com.mongodb.kotlin.client.model.Filters.gte"]},{"name":"infix fun <T> KProperty<T>.max(value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.max","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/max.html","searchKeys":["max","infix fun <T> KProperty<T>.max(value: T): Bson","com.mongodb.kotlin.client.model.Updates.max"]},{"name":"infix fun <T> KProperty<T>.meta(metaFieldName: String): Bson","description":"com.mongodb.kotlin.client.model.Projections.meta","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/meta.html","searchKeys":["meta","infix fun <T> KProperty<T>.meta(metaFieldName: String): Bson","com.mongodb.kotlin.client.model.Projections.meta"]},{"name":"infix fun <T> KProperty<T>.min(value: T): Bson","description":"com.mongodb.kotlin.client.model.Updates.min","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/min.html","searchKeys":["min","infix fun <T> KProperty<T>.min(value: T): Bson","com.mongodb.kotlin.client.model.Updates.min"]},{"name":"infix fun <T> KProperty<T>.set(value: T?): Bson","description":"com.mongodb.kotlin.client.model.Updates.set","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/set.html","searchKeys":["set","infix fun <T> KProperty<T>.set(value: T?): Bson","com.mongodb.kotlin.client.model.Updates.set"]},{"name":"infix fun <T> KProperty<T>.slice(limit: Int): Bson","description":"com.mongodb.kotlin.client.model.Projections.slice","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/slice.html","searchKeys":["slice","infix fun <T> KProperty<T>.slice(limit: Int): Bson","com.mongodb.kotlin.client.model.Projections.slice"]},{"name":"infix fun <T> KProperty<T?>.bitsAllClear(bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAllClear","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-all-clear.html","searchKeys":["bitsAllClear","infix fun <T> KProperty<T?>.bitsAllClear(bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAllClear"]},{"name":"infix fun <T> KProperty<T?>.bitsAllSet(bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAllSet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-all-set.html","searchKeys":["bitsAllSet","infix fun <T> KProperty<T?>.bitsAllSet(bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAllSet"]},{"name":"infix fun <T> KProperty<T?>.bitsAnyClear(bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAnyClear","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-any-clear.html","searchKeys":["bitsAnyClear","infix fun <T> KProperty<T?>.bitsAnyClear(bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAnyClear"]},{"name":"infix fun <T> KProperty<T?>.bitsAnySet(bitmask: Long): Bson","description":"com.mongodb.kotlin.client.model.Filters.bitsAnySet","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/bits-any-set.html","searchKeys":["bitsAnySet","infix fun <T> KProperty<T?>.bitsAnySet(bitmask: Long): Bson","com.mongodb.kotlin.client.model.Filters.bitsAnySet"]},{"name":"infix fun <T> KProperty<T?>.eq(value: T?): Bson","description":"com.mongodb.kotlin.client.model.Filters.eq","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/eq.html","searchKeys":["eq","infix fun <T> KProperty<T?>.eq(value: T?): Bson","com.mongodb.kotlin.client.model.Filters.eq"]},{"name":"infix fun <T> KProperty<T?>.exists(exists: Boolean): Bson","description":"com.mongodb.kotlin.client.model.Filters.exists","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/exists.html","searchKeys":["exists","infix fun <T> KProperty<T?>.exists(exists: Boolean): Bson","com.mongodb.kotlin.client.model.Filters.exists"]},{"name":"infix fun <T> KProperty<T?>.geoIntersects(geometry: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoIntersects","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-intersects.html","searchKeys":["geoIntersects","infix fun <T> KProperty<T?>.geoIntersects(geometry: Bson): Bson","com.mongodb.kotlin.client.model.Filters.geoIntersects"]},{"name":"infix fun <T> KProperty<T?>.geoIntersects(geometry: Geometry): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoIntersects","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-intersects.html","searchKeys":["geoIntersects","infix fun <T> KProperty<T?>.geoIntersects(geometry: Geometry): Bson","com.mongodb.kotlin.client.model.Filters.geoIntersects"]},{"name":"infix fun <T> KProperty<T?>.geoWithin(geometry: Bson): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within.html","searchKeys":["geoWithin","infix fun <T> KProperty<T?>.geoWithin(geometry: Bson): Bson","com.mongodb.kotlin.client.model.Filters.geoWithin"]},{"name":"infix fun <T> KProperty<T?>.geoWithin(geometry: Geometry): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within.html","searchKeys":["geoWithin","infix fun <T> KProperty<T?>.geoWithin(geometry: Geometry): Bson","com.mongodb.kotlin.client.model.Filters.geoWithin"]},{"name":"infix fun <T> KProperty<T?>.geoWithinPolygon(points: List<List<Double>>): Bson","description":"com.mongodb.kotlin.client.model.Filters.geoWithinPolygon","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/geo-within-polygon.html","searchKeys":["geoWithinPolygon","infix fun <T> KProperty<T?>.geoWithinPolygon(points: List<List<Double>>): Bson","com.mongodb.kotlin.client.model.Filters.geoWithinPolygon"]},{"name":"infix fun <T> KProperty<T?>.in(values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.in","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/in.html","searchKeys":["in","infix fun <T> KProperty<T?>.in(values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.in"]},{"name":"infix fun <T> KProperty<T?>.lt(value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.lt","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/lt.html","searchKeys":["lt","infix fun <T> KProperty<T?>.lt(value: T): Bson","com.mongodb.kotlin.client.model.Filters.lt"]},{"name":"infix fun <T> KProperty<T?>.lte(value: T): Bson","description":"com.mongodb.kotlin.client.model.Filters.lte","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/lte.html","searchKeys":["lte","infix fun <T> KProperty<T?>.lte(value: T): Bson","com.mongodb.kotlin.client.model.Filters.lte"]},{"name":"infix fun <T> KProperty<T?>.ne(value: T?): Bson","description":"com.mongodb.kotlin.client.model.Filters.ne","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/ne.html","searchKeys":["ne","infix fun <T> KProperty<T?>.ne(value: T?): Bson","com.mongodb.kotlin.client.model.Filters.ne"]},{"name":"infix fun <T> KProperty<T?>.nin(values: Iterable<T?>): Bson","description":"com.mongodb.kotlin.client.model.Filters.nin","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/nin.html","searchKeys":["nin","infix fun <T> KProperty<T?>.nin(values: Iterable<T?>): Bson","com.mongodb.kotlin.client.model.Filters.nin"]},{"name":"infix fun <T> KProperty<T?>.rename(newProperty: KProperty<T?>): Bson","description":"com.mongodb.kotlin.client.model.Updates.rename","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/rename.html","searchKeys":["rename","infix fun <T> KProperty<T?>.rename(newProperty: KProperty<T?>): Bson","com.mongodb.kotlin.client.model.Updates.rename"]},{"name":"infix fun <T> KProperty<T?>.setOnInsert(value: T?): Bson","description":"com.mongodb.kotlin.client.model.Updates.setOnInsert","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/set-on-insert.html","searchKeys":["setOnInsert","infix fun <T> KProperty<T?>.setOnInsert(value: T?): Bson","com.mongodb.kotlin.client.model.Updates.setOnInsert"]},{"name":"infix fun <T> KProperty<T?>.size(size: Int): Bson","description":"com.mongodb.kotlin.client.model.Filters.size","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/size.html","searchKeys":["size","infix fun <T> KProperty<T?>.size(size: Int): Bson","com.mongodb.kotlin.client.model.Filters.size"]},{"name":"infix fun <T> KProperty<T?>.type(type: BsonType): Bson","description":"com.mongodb.kotlin.client.model.Filters.type","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/type.html","searchKeys":["type","infix fun <T> KProperty<T?>.type(type: BsonType): Bson","com.mongodb.kotlin.client.model.Filters.type"]},{"name":"infix fun KProperty<*>.pullByFilter(filter: Bson): Bson","description":"com.mongodb.kotlin.client.model.Updates.pullByFilter","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/pull-by-filter.html","searchKeys":["pullByFilter","infix fun KProperty<*>.pullByFilter(filter: Bson): Bson","com.mongodb.kotlin.client.model.Updates.pullByFilter"]},{"name":"infix fun KProperty<Iterable<String?>>.regex(pattern: Pattern): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","infix fun KProperty<Iterable<String?>>.regex(pattern: Pattern): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"infix fun KProperty<Iterable<String?>>.regex(pattern: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","infix fun KProperty<Iterable<String?>>.regex(pattern: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"infix fun KProperty<Iterable<String?>>.regex(regex: Regex): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","infix fun KProperty<Iterable<String?>>.regex(regex: Regex): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"infix fun KProperty<String?>.regex(pattern: Pattern): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","infix fun KProperty<String?>.regex(pattern: Pattern): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"infix fun KProperty<String?>.regex(pattern: String): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","infix fun KProperty<String?>.regex(pattern: String): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"infix fun KProperty<String?>.regex(regex: Regex): Bson","description":"com.mongodb.kotlin.client.model.Filters.regex","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/regex.html","searchKeys":["regex","infix fun KProperty<String?>.regex(regex: Regex): Bson","com.mongodb.kotlin.client.model.Filters.regex"]},{"name":"infix fun String.computed(expression: Any): Bson","description":"com.mongodb.kotlin.client.model.Projections.computed","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed.html","searchKeys":["computed","infix fun String.computed(expression: Any): Bson","com.mongodb.kotlin.client.model.Projections.computed"]},{"name":"object Accumulators","description":"com.mongodb.kotlin.client.model.Accumulators","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-accumulators/index.html","searchKeys":["Accumulators","object Accumulators","com.mongodb.kotlin.client.model.Accumulators"]},{"name":"object Aggregates","description":"com.mongodb.kotlin.client.model.Aggregates","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-aggregates/index.html","searchKeys":["Aggregates","object Aggregates","com.mongodb.kotlin.client.model.Aggregates"]},{"name":"object Companion","description":"com.mongodb.kotlin.client.property.KPropertyPath.Companion","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/-companion/index.html","searchKeys":["Companion","object Companion","com.mongodb.kotlin.client.property.KPropertyPath.Companion"]},{"name":"object Filters","description":"com.mongodb.kotlin.client.model.Filters","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-filters/index.html","searchKeys":["Filters","object Filters","com.mongodb.kotlin.client.model.Filters"]},{"name":"object Indexes","description":"com.mongodb.kotlin.client.model.Indexes","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-indexes/index.html","searchKeys":["Indexes","object Indexes","com.mongodb.kotlin.client.model.Indexes"]},{"name":"object Projections","description":"com.mongodb.kotlin.client.model.Projections","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/index.html","searchKeys":["Projections","object Projections","com.mongodb.kotlin.client.model.Projections"]},{"name":"object Sorts","description":"com.mongodb.kotlin.client.model.Sorts","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-sorts/index.html","searchKeys":["Sorts","object Sorts","com.mongodb.kotlin.client.model.Sorts"]},{"name":"object Updates","description":"com.mongodb.kotlin.client.model.Updates","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-updates/index.html","searchKeys":["Updates","object Updates","com.mongodb.kotlin.client.model.Updates"]},{"name":"open class KCollectionPropertyPath<T, R, MEMBER : KPropertyPath<T, R?>>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>) : KPropertyPath<T, Iterable<R>?> ","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/index.html","searchKeys":["KCollectionPropertyPath","open class KCollectionPropertyPath<T, R, MEMBER : KPropertyPath<T, R?>>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Iterable<R>?>) : KPropertyPath<T, Iterable<R>?> ","com.mongodb.kotlin.client.property.KCollectionPropertyPath"]},{"name":"open class KMapPropertyPath<T, K, R, MEMBER : KPropertyPath<T, R?>>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>) : KPropertyPath<T, Map<out K?, R>?> ","description":"com.mongodb.kotlin.client.property.KMapPropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-map-property-path/index.html","searchKeys":["KMapPropertyPath","open class KMapPropertyPath<T, K, R, MEMBER : KPropertyPath<T, R?>>(previous: KPropertyPath<T, *>?, property: KProperty1<*, Map<out K, R>?>) : KPropertyPath<T, Map<out K?, R>?> ","com.mongodb.kotlin.client.property.KMapPropertyPath"]},{"name":"open class KPropertyPath<T, R>(previous: KPropertyPath<T, *>?, property: KProperty1<*, R?>) : KProperty1<T, R> ","description":"com.mongodb.kotlin.client.property.KPropertyPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/index.html","searchKeys":["KPropertyPath","open class KPropertyPath<T, R>(previous: KPropertyPath<T, *>?, property: KProperty1<*, R?>) : KProperty1<T, R> ","com.mongodb.kotlin.client.property.KPropertyPath"]},{"name":"open fun memberWithAdditionalPath(additionalPath: String): MEMBER","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath.memberWithAdditionalPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/member-with-additional-path.html","searchKeys":["memberWithAdditionalPath","open fun memberWithAdditionalPath(additionalPath: String): MEMBER","com.mongodb.kotlin.client.property.KCollectionPropertyPath.memberWithAdditionalPath"]},{"name":"open fun memberWithAdditionalPath(additionalPath: String): MEMBER","description":"com.mongodb.kotlin.client.property.KMapPropertyPath.memberWithAdditionalPath","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-map-property-path/member-with-additional-path.html","searchKeys":["memberWithAdditionalPath","open fun memberWithAdditionalPath(additionalPath: String): MEMBER","com.mongodb.kotlin.client.property.KMapPropertyPath.memberWithAdditionalPath"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.equals","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.mongodb.kotlin.client.property.KPropertyPath.equals"]},{"name":"open operator override fun invoke(p1: T): R","description":"com.mongodb.kotlin.client.property.KPropertyPath.invoke","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/invoke.html","searchKeys":["invoke","open operator override fun invoke(p1: T): R","com.mongodb.kotlin.client.property.KPropertyPath.invoke"]},{"name":"open override fun call(vararg args: Any?): R","description":"com.mongodb.kotlin.client.property.KPropertyPath.call","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/call.html","searchKeys":["call","open override fun call(vararg args: Any?): R","com.mongodb.kotlin.client.property.KPropertyPath.call"]},{"name":"open override fun callBy(args: Map<KParameter, Any?>): R","description":"com.mongodb.kotlin.client.property.KPropertyPath.callBy","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/call-by.html","searchKeys":["callBy","open override fun callBy(args: Map<KParameter, Any?>): R","com.mongodb.kotlin.client.property.KPropertyPath.callBy"]},{"name":"open override fun get(receiver: T): R","description":"com.mongodb.kotlin.client.property.KPropertyPath.get","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/get.html","searchKeys":["get","open override fun get(receiver: T): R","com.mongodb.kotlin.client.property.KPropertyPath.get"]},{"name":"open override fun getDelegate(receiver: T): Any?","description":"com.mongodb.kotlin.client.property.KPropertyPath.getDelegate","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/get-delegate.html","searchKeys":["getDelegate","open override fun getDelegate(receiver: T): Any?","com.mongodb.kotlin.client.property.KPropertyPath.getDelegate"]},{"name":"open override fun hashCode(): Int","description":"com.mongodb.kotlin.client.property.KPropertyPath.hashCode","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.mongodb.kotlin.client.property.KPropertyPath.hashCode"]},{"name":"open override val annotations: List<Annotation>","description":"com.mongodb.kotlin.client.property.KPropertyPath.annotations","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/annotations.html","searchKeys":["annotations","open override val annotations: List<Annotation>","com.mongodb.kotlin.client.property.KPropertyPath.annotations"]},{"name":"open override val getter: KProperty1.Getter<T, R>","description":"com.mongodb.kotlin.client.property.KPropertyPath.getter","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/getter.html","searchKeys":["getter","open override val getter: KProperty1.Getter<T, R>","com.mongodb.kotlin.client.property.KPropertyPath.getter"]},{"name":"open override val isAbstract: Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.isAbstract","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/is-abstract.html","searchKeys":["isAbstract","open override val isAbstract: Boolean","com.mongodb.kotlin.client.property.KPropertyPath.isAbstract"]},{"name":"open override val isConst: Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.isConst","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/is-const.html","searchKeys":["isConst","open override val isConst: Boolean","com.mongodb.kotlin.client.property.KPropertyPath.isConst"]},{"name":"open override val isFinal: Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.isFinal","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/is-final.html","searchKeys":["isFinal","open override val isFinal: Boolean","com.mongodb.kotlin.client.property.KPropertyPath.isFinal"]},{"name":"open override val isLateinit: Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.isLateinit","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/is-lateinit.html","searchKeys":["isLateinit","open override val isLateinit: Boolean","com.mongodb.kotlin.client.property.KPropertyPath.isLateinit"]},{"name":"open override val isOpen: Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.isOpen","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/is-open.html","searchKeys":["isOpen","open override val isOpen: Boolean","com.mongodb.kotlin.client.property.KPropertyPath.isOpen"]},{"name":"open override val isSuspend: Boolean","description":"com.mongodb.kotlin.client.property.KPropertyPath.isSuspend","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/is-suspend.html","searchKeys":["isSuspend","open override val isSuspend: Boolean","com.mongodb.kotlin.client.property.KPropertyPath.isSuspend"]},{"name":"open override val name: String","description":"com.mongodb.kotlin.client.property.KPropertyPath.name","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/name.html","searchKeys":["name","open override val name: String","com.mongodb.kotlin.client.property.KPropertyPath.name"]},{"name":"open override val parameters: List<KParameter>","description":"com.mongodb.kotlin.client.property.KPropertyPath.parameters","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/parameters.html","searchKeys":["parameters","open override val parameters: List<KParameter>","com.mongodb.kotlin.client.property.KPropertyPath.parameters"]},{"name":"open override val returnType: KType","description":"com.mongodb.kotlin.client.property.KPropertyPath.returnType","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/return-type.html","searchKeys":["returnType","open override val returnType: KType","com.mongodb.kotlin.client.property.KPropertyPath.returnType"]},{"name":"open override val typeParameters: List<KTypeParameter>","description":"com.mongodb.kotlin.client.property.KPropertyPath.typeParameters","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/type-parameters.html","searchKeys":["typeParameters","open override val typeParameters: List<KTypeParameter>","com.mongodb.kotlin.client.property.KPropertyPath.typeParameters"]},{"name":"open override val visibility: KVisibility?","description":"com.mongodb.kotlin.client.property.KPropertyPath.visibility","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-property-path/visibility.html","searchKeys":["visibility","open override val visibility: KVisibility?","com.mongodb.kotlin.client.property.KPropertyPath.visibility"]},{"name":"operator fun <T0, K, T1, T2> KProperty1<T0, Map<out K, T1>?>.div(p2: KProperty1<out T1, T2?>): KProperty1<T0, T2?>","description":"com.mongodb.kotlin.client.model.div","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/div.html","searchKeys":["div","operator fun <T0, K, T1, T2> KProperty1<T0, Map<out K, T1>?>.div(p2: KProperty1<out T1, T2?>): KProperty1<T0, T2?>","com.mongodb.kotlin.client.model.div"]},{"name":"operator fun <T0, T1, T2> KProperty1<T0, Iterable<T1>?>.div(p2: KProperty1<out T1, T2?>): KProperty1<T0, T2?>","description":"com.mongodb.kotlin.client.model.div","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/div.html","searchKeys":["div","operator fun <T0, T1, T2> KProperty1<T0, Iterable<T1>?>.div(p2: KProperty1<out T1, T2?>): KProperty1<T0, T2?>","com.mongodb.kotlin.client.model.div"]},{"name":"operator fun <T0, T1, T2> KProperty1<T0, T1?>.div(p2: KProperty1<T1, T2?>): KProperty1<T0, T2?>","description":"com.mongodb.kotlin.client.model.div","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/div.html","searchKeys":["div","operator fun <T0, T1, T2> KProperty1<T0, T1?>.div(p2: KProperty1<T1, T2?>): KProperty1<T0, T2?>","com.mongodb.kotlin.client.model.div"]},{"name":"operator fun <T0, T1, T2> KProperty1<T0, T1?>.rem(p2: KProperty1<out T1, T2?>): KProperty1<T0, T2?>","description":"com.mongodb.kotlin.client.model.rem","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/rem.html","searchKeys":["rem","operator fun <T0, T1, T2> KProperty1<T0, T1?>.rem(p2: KProperty1<out T1, T2?>): KProperty1<T0, T2?>","com.mongodb.kotlin.client.model.rem"]},{"name":"val <K, T> KProperty1<out Any?, Map<out K, T>?>.mapProperty: KMapSimplePropertyPath<out Any?, K, T>","description":"com.mongodb.kotlin.client.model.mapProperty","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/map-property.html","searchKeys":["mapProperty","val <K, T> KProperty1<out Any?, Map<out K, T>?>.mapProperty: KMapSimplePropertyPath<out Any?, K, T>","com.mongodb.kotlin.client.model.mapProperty"]},{"name":"val <T> KProperty1<out Any?, Iterable<T>?>.allPosOp: KPropertyPath<out Any?, T?>","description":"com.mongodb.kotlin.client.model.allPosOp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/all-pos-op.html","searchKeys":["allPosOp","val <T> KProperty1<out Any?, Iterable<T>?>.allPosOp: KPropertyPath<out Any?, T?>","com.mongodb.kotlin.client.model.allPosOp"]},{"name":"val <T> KProperty1<out Any?, Iterable<T>?>.colProperty: KCollectionSimplePropertyPath<out Any?, T>","description":"com.mongodb.kotlin.client.model.colProperty","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/col-property.html","searchKeys":["colProperty","val <T> KProperty1<out Any?, Iterable<T>?>.colProperty: KCollectionSimplePropertyPath<out Any?, T>","com.mongodb.kotlin.client.model.colProperty"]},{"name":"val <T> KProperty1<out Any?, Iterable<T>?>.posOp: KPropertyPath<out Any?, T?>","description":"com.mongodb.kotlin.client.model.posOp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/pos-op.html","searchKeys":["posOp","val <T> KProperty1<out Any?, Iterable<T>?>.posOp: KPropertyPath<out Any?, T?>","com.mongodb.kotlin.client.model.posOp"]},{"name":"val <T> KProperty<T>.elemMatch: Bson","description":"com.mongodb.kotlin.client.model.Projections.elemMatch","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/elem-match.html","searchKeys":["elemMatch","val <T> KProperty<T>.elemMatch: Bson","com.mongodb.kotlin.client.model.Projections.elemMatch"]},{"name":"val <T> KProperty<T>.projection: String","description":"com.mongodb.kotlin.client.model.Projections.projection","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/projection.html","searchKeys":["projection","val <T> KProperty<T>.projection: String","com.mongodb.kotlin.client.model.Projections.projection"]},{"name":"val String.projection: String","description":"com.mongodb.kotlin.client.model.Projections.projection","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/projection.html","searchKeys":["projection","val String.projection: String","com.mongodb.kotlin.client.model.Projections.projection"]},{"name":"val allPosOp: MEMBER","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath.allPosOp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/all-pos-op.html","searchKeys":["allPosOp","val allPosOp: MEMBER","com.mongodb.kotlin.client.property.KCollectionPropertyPath.allPosOp"]},{"name":"val posOp: MEMBER","description":"com.mongodb.kotlin.client.property.KCollectionPropertyPath.posOp","location":"mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.property/-k-collection-property-path/pos-op.html","searchKeys":["posOp","val posOp: MEMBER","com.mongodb.kotlin.client.property.KCollectionPropertyPath.posOp"]}]
