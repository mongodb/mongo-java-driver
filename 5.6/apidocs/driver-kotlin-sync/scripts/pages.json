[{"name":"abstract fun tryNext(): T?","description":"com.mongodb.kotlin.client.MongoCursor.tryNext","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cursor/try-next.html","searchKeys":["tryNext","abstract fun tryNext(): T?","com.mongodb.kotlin.client.MongoCursor.tryNext"]},{"name":"abstract val available: Int","description":"com.mongodb.kotlin.client.MongoCursor.available","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cursor/available.html","searchKeys":["available","abstract val available: Int","com.mongodb.kotlin.client.MongoCursor.available"]},{"name":"abstract val resumeToken: BsonDocument?","description":"com.mongodb.kotlin.client.MongoChangeStreamCursor.resumeToken","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-change-stream-cursor/resume-token.html","searchKeys":["resumeToken","abstract val resumeToken: BsonDocument?","com.mongodb.kotlin.client.MongoChangeStreamCursor.resumeToken"]},{"name":"abstract val serverAddress: ServerAddress","description":"com.mongodb.kotlin.client.MongoCursor.serverAddress","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cursor/server-address.html","searchKeys":["serverAddress","abstract val serverAddress: ServerAddress","com.mongodb.kotlin.client.MongoCursor.serverAddress"]},{"name":"abstract val serverCursor: ServerCursor?","description":"com.mongodb.kotlin.client.MongoCursor.serverCursor","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cursor/server-cursor.html","searchKeys":["serverCursor","abstract val serverCursor: ServerCursor?","com.mongodb.kotlin.client.MongoCursor.serverCursor"]},{"name":"class AggregateIterable<T : Any>(wrapped: AggregateIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.AggregateIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/index.html","searchKeys":["AggregateIterable","class AggregateIterable<T : Any>(wrapped: AggregateIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.AggregateIterable"]},{"name":"class ChangeStreamIterable<T : Any>(wrapped: ChangeStreamIterable<T>) : MongoIterable<ChangeStreamDocument<T>> ","description":"com.mongodb.kotlin.client.ChangeStreamIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/index.html","searchKeys":["ChangeStreamIterable","class ChangeStreamIterable<T : Any>(wrapped: ChangeStreamIterable<T>) : MongoIterable<ChangeStreamDocument<T>> ","com.mongodb.kotlin.client.ChangeStreamIterable"]},{"name":"class ClientSession(val wrapped: ClientSession) : Closeable","description":"com.mongodb.kotlin.client.ClientSession","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/index.html","searchKeys":["ClientSession","class ClientSession(val wrapped: ClientSession) : Closeable","com.mongodb.kotlin.client.ClientSession"]},{"name":"class DistinctIterable<T>(wrapped: DistinctIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.DistinctIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/index.html","searchKeys":["DistinctIterable","class DistinctIterable<T>(wrapped: DistinctIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.DistinctIterable"]},{"name":"class FindIterable<T : Any>(wrapped: FindIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.FindIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/index.html","searchKeys":["FindIterable","class FindIterable<T : Any>(wrapped: FindIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.FindIterable"]},{"name":"class ListCollectionNamesIterable(wrapped: ListCollectionNamesIterable) : MongoIterable<String> ","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/index.html","searchKeys":["ListCollectionNamesIterable","class ListCollectionNamesIterable(wrapped: ListCollectionNamesIterable) : MongoIterable<String> ","com.mongodb.kotlin.client.ListCollectionNamesIterable"]},{"name":"class ListCollectionsIterable<T : Any>(wrapped: ListCollectionsIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.ListCollectionsIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/index.html","searchKeys":["ListCollectionsIterable","class ListCollectionsIterable<T : Any>(wrapped: ListCollectionsIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.ListCollectionsIterable"]},{"name":"class ListDatabasesIterable<T : Any>(wrapped: ListDatabasesIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.ListDatabasesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/index.html","searchKeys":["ListDatabasesIterable","class ListDatabasesIterable<T : Any>(wrapped: ListDatabasesIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.ListDatabasesIterable"]},{"name":"class ListIndexesIterable<T : Any>(wrapped: ListIndexesIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.ListIndexesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/index.html","searchKeys":["ListIndexesIterable","class ListIndexesIterable<T : Any>(wrapped: ListIndexesIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.ListIndexesIterable"]},{"name":"class ListSearchIndexesIterable<T : Any>(wrapped: ListSearchIndexesIterable<T>) : MongoIterable<T> ","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/index.html","searchKeys":["ListSearchIndexesIterable","class ListSearchIndexesIterable<T : Any>(wrapped: ListSearchIndexesIterable<T>) : MongoIterable<T> ","com.mongodb.kotlin.client.ListSearchIndexesIterable"]},{"name":"class MongoClient(wrapped: MongoClient) : MongoCluster, Closeable","description":"com.mongodb.kotlin.client.MongoClient","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/index.html","searchKeys":["MongoClient","class MongoClient(wrapped: MongoClient) : MongoCluster, Closeable","com.mongodb.kotlin.client.MongoClient"]},{"name":"class MongoCollection<T : Any>(wrapped: MongoCollection<T>)","description":"com.mongodb.kotlin.client.MongoCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/index.html","searchKeys":["MongoCollection","class MongoCollection<T : Any>(wrapped: MongoCollection<T>)","com.mongodb.kotlin.client.MongoCollection"]},{"name":"class MongoDatabase(wrapped: MongoDatabase)","description":"com.mongodb.kotlin.client.MongoDatabase","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/index.html","searchKeys":["MongoDatabase","class MongoDatabase(wrapped: MongoDatabase)","com.mongodb.kotlin.client.MongoDatabase"]},{"name":"constructor(delegate: MongoIterable<T>)","description":"com.mongodb.kotlin.client.MongoIterable.MongoIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/-mongo-iterable.html","searchKeys":["MongoIterable","constructor(delegate: MongoIterable<T>)","com.mongodb.kotlin.client.MongoIterable.MongoIterable"]},{"name":"constructor(wrapped: AggregateIterable<T>)","description":"com.mongodb.kotlin.client.AggregateIterable.AggregateIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/-aggregate-iterable.html","searchKeys":["AggregateIterable","constructor(wrapped: AggregateIterable<T>)","com.mongodb.kotlin.client.AggregateIterable.AggregateIterable"]},{"name":"constructor(wrapped: ChangeStreamIterable<T>)","description":"com.mongodb.kotlin.client.ChangeStreamIterable.ChangeStreamIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/-change-stream-iterable.html","searchKeys":["ChangeStreamIterable","constructor(wrapped: ChangeStreamIterable<T>)","com.mongodb.kotlin.client.ChangeStreamIterable.ChangeStreamIterable"]},{"name":"constructor(wrapped: ClientSession)","description":"com.mongodb.kotlin.client.ClientSession.ClientSession","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/-client-session.html","searchKeys":["ClientSession","constructor(wrapped: ClientSession)","com.mongodb.kotlin.client.ClientSession.ClientSession"]},{"name":"constructor(wrapped: DistinctIterable<T>)","description":"com.mongodb.kotlin.client.DistinctIterable.DistinctIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/-distinct-iterable.html","searchKeys":["DistinctIterable","constructor(wrapped: DistinctIterable<T>)","com.mongodb.kotlin.client.DistinctIterable.DistinctIterable"]},{"name":"constructor(wrapped: FindIterable<T>)","description":"com.mongodb.kotlin.client.FindIterable.FindIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/-find-iterable.html","searchKeys":["FindIterable","constructor(wrapped: FindIterable<T>)","com.mongodb.kotlin.client.FindIterable.FindIterable"]},{"name":"constructor(wrapped: ListCollectionNamesIterable)","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.ListCollectionNamesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/-list-collection-names-iterable.html","searchKeys":["ListCollectionNamesIterable","constructor(wrapped: ListCollectionNamesIterable)","com.mongodb.kotlin.client.ListCollectionNamesIterable.ListCollectionNamesIterable"]},{"name":"constructor(wrapped: ListCollectionsIterable<T>)","description":"com.mongodb.kotlin.client.ListCollectionsIterable.ListCollectionsIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/-list-collections-iterable.html","searchKeys":["ListCollectionsIterable","constructor(wrapped: ListCollectionsIterable<T>)","com.mongodb.kotlin.client.ListCollectionsIterable.ListCollectionsIterable"]},{"name":"constructor(wrapped: ListDatabasesIterable<T>)","description":"com.mongodb.kotlin.client.ListDatabasesIterable.ListDatabasesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/-list-databases-iterable.html","searchKeys":["ListDatabasesIterable","constructor(wrapped: ListDatabasesIterable<T>)","com.mongodb.kotlin.client.ListDatabasesIterable.ListDatabasesIterable"]},{"name":"constructor(wrapped: ListIndexesIterable<T>)","description":"com.mongodb.kotlin.client.ListIndexesIterable.ListIndexesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/-list-indexes-iterable.html","searchKeys":["ListIndexesIterable","constructor(wrapped: ListIndexesIterable<T>)","com.mongodb.kotlin.client.ListIndexesIterable.ListIndexesIterable"]},{"name":"constructor(wrapped: ListSearchIndexesIterable<T>)","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.ListSearchIndexesIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/-list-search-indexes-iterable.html","searchKeys":["ListSearchIndexesIterable","constructor(wrapped: ListSearchIndexesIterable<T>)","com.mongodb.kotlin.client.ListSearchIndexesIterable.ListSearchIndexesIterable"]},{"name":"constructor(wrapped: MongoClient)","description":"com.mongodb.kotlin.client.MongoClient.MongoClient","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/-mongo-client.html","searchKeys":["MongoClient","constructor(wrapped: MongoClient)","com.mongodb.kotlin.client.MongoClient.MongoClient"]},{"name":"constructor(wrapped: MongoCollection<T>)","description":"com.mongodb.kotlin.client.MongoCollection.MongoCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/-mongo-collection.html","searchKeys":["MongoCollection","constructor(wrapped: MongoCollection<T>)","com.mongodb.kotlin.client.MongoCollection.MongoCollection"]},{"name":"constructor(wrapped: MongoDatabase)","description":"com.mongodb.kotlin.client.MongoDatabase.MongoDatabase","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/-mongo-database.html","searchKeys":["MongoDatabase","constructor(wrapped: MongoDatabase)","com.mongodb.kotlin.client.MongoDatabase.MongoDatabase"]},{"name":"fun <C : MutableCollection<in T>> toCollection(destination: C): C","description":"com.mongodb.kotlin.client.MongoIterable.toCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/to-collection.html","searchKeys":["toCollection","fun <C : MutableCollection<in T>> toCollection(destination: C): C","com.mongodb.kotlin.client.MongoIterable.toCollection"]},{"name":"fun <R : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<R>): AggregateIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun <R : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<R>): AggregateIterable<R>","com.mongodb.kotlin.client.MongoCollection.aggregate"]},{"name":"fun <R : Any> aggregate(pipeline: List<Bson>, resultClass: Class<R>): AggregateIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun <R : Any> aggregate(pipeline: List<Bson>, resultClass: Class<R>): AggregateIterable<R>","com.mongodb.kotlin.client.MongoCollection.aggregate"]},{"name":"fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","description":"com.mongodb.kotlin.client.AggregateIterable.explain","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/explain.html","searchKeys":["explain","fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","com.mongodb.kotlin.client.AggregateIterable.explain"]},{"name":"fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","description":"com.mongodb.kotlin.client.FindIterable.explain","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/explain.html","searchKeys":["explain","fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","com.mongodb.kotlin.client.FindIterable.explain"]},{"name":"fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.explain","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/explain.html","searchKeys":["explain","fun <R : Any> explain(resultClass: Class<R>, verbosity: ExplainVerbosity? = null): R","com.mongodb.kotlin.client.ListSearchIndexesIterable.explain"]},{"name":"fun <R : Any> find(clientSession: ClientSession, filter: Bson = BsonDocument(), resultClass: Class<R>): FindIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.find","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find.html","searchKeys":["find","fun <R : Any> find(clientSession: ClientSession, filter: Bson = BsonDocument(), resultClass: Class<R>): FindIterable<R>","com.mongodb.kotlin.client.MongoCollection.find"]},{"name":"fun <R : Any> find(filter: Bson = BsonDocument(), resultClass: Class<R>): FindIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.find","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find.html","searchKeys":["find","fun <R : Any> find(filter: Bson = BsonDocument(), resultClass: Class<R>): FindIterable<R>","com.mongodb.kotlin.client.MongoCollection.find"]},{"name":"fun <R : Any> listIndexes(clientSession: ClientSession, resultClass: Class<R>): ListIndexesIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun <R : Any> listIndexes(clientSession: ClientSession, resultClass: Class<R>): ListIndexesIterable<R>","com.mongodb.kotlin.client.MongoCollection.listIndexes"]},{"name":"fun <R : Any> listIndexes(resultClass: Class<R>): ListIndexesIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun <R : Any> listIndexes(resultClass: Class<R>): ListIndexesIterable<R>","com.mongodb.kotlin.client.MongoCollection.listIndexes"]},{"name":"fun <R : Any> listSearchIndexes(resultClass: Class<R>): ListSearchIndexesIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.listSearchIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/list-search-indexes.html","searchKeys":["listSearchIndexes","fun <R : Any> listSearchIndexes(resultClass: Class<R>): ListSearchIndexesIterable<R>","com.mongodb.kotlin.client.MongoCollection.listSearchIndexes"]},{"name":"fun <R : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/watch.html","searchKeys":["watch","fun <R : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamIterable<R>","com.mongodb.kotlin.client.MongoCollection.watch"]},{"name":"fun <R : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/watch.html","searchKeys":["watch","fun <R : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<R>): ChangeStreamIterable<R>","com.mongodb.kotlin.client.MongoCollection.watch"]},{"name":"fun <R : Any> withDocumentClass(resultClass: Class<R>): MongoCollection<R>","description":"com.mongodb.kotlin.client.MongoCollection.withDocumentClass","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-document-class.html","searchKeys":["withDocumentClass","fun <R : Any> withDocumentClass(resultClass: Class<R>): MongoCollection<R>","com.mongodb.kotlin.client.MongoCollection.withDocumentClass"]},{"name":"fun <R : Any> withDocumentClass(resultClass: Class<R>): MongoIterable<R>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.withDocumentClass","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/with-document-class.html","searchKeys":["withDocumentClass","fun <R : Any> withDocumentClass(resultClass: Class<R>): MongoIterable<R>","com.mongodb.kotlin.client.ChangeStreamIterable.withDocumentClass"]},{"name":"fun <R> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.distinct","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/distinct.html","searchKeys":["distinct","fun <R> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctIterable<R>","com.mongodb.kotlin.client.MongoCollection.distinct"]},{"name":"fun <R> distinct(fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.distinct","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/distinct.html","searchKeys":["distinct","fun <R> distinct(fieldName: String, filter: Bson = BsonDocument(), resultClass: Class<R>): DistinctIterable<R>","com.mongodb.kotlin.client.MongoCollection.distinct"]},{"name":"fun <R> map(transform: (T) -> R): MongoIterable<R>","description":"com.mongodb.kotlin.client.MongoIterable.map","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/map.html","searchKeys":["map","fun <R> map(transform: (T) -> R): MongoIterable<R>","com.mongodb.kotlin.client.MongoIterable.map"]},{"name":"fun <R> use(consumer: (Sequence<T>) -> R): R","description":"com.mongodb.kotlin.client.MongoIterable.use","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/use.html","searchKeys":["use","fun <R> use(consumer: (Sequence<T>) -> R): R","com.mongodb.kotlin.client.MongoIterable.use"]},{"name":"fun <T : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<T>): AggregateIterable<T>","description":"com.mongodb.kotlin.client.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/aggregate.html","searchKeys":["aggregate","fun <T : Any> aggregate(clientSession: ClientSession, pipeline: List<Bson>, resultClass: Class<T>): AggregateIterable<T>","com.mongodb.kotlin.client.MongoDatabase.aggregate"]},{"name":"fun <T : Any> aggregate(pipeline: List<Bson>, resultClass: Class<T>): AggregateIterable<T>","description":"com.mongodb.kotlin.client.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/aggregate.html","searchKeys":["aggregate","fun <T : Any> aggregate(pipeline: List<Bson>, resultClass: Class<T>): AggregateIterable<T>","com.mongodb.kotlin.client.MongoDatabase.aggregate"]},{"name":"fun <T : Any> getCollection(collectionName: String, resultClass: Class<T>): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoDatabase.getCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/get-collection.html","searchKeys":["getCollection","fun <T : Any> getCollection(collectionName: String, resultClass: Class<T>): MongoCollection<T>","com.mongodb.kotlin.client.MongoDatabase.getCollection"]},{"name":"fun <T : Any> listCollections(clientSession: ClientSession, resultClass: Class<T>): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/list-collections.html","searchKeys":["listCollections","fun <T : Any> listCollections(clientSession: ClientSession, resultClass: Class<T>): ListCollectionsIterable<T>","com.mongodb.kotlin.client.MongoDatabase.listCollections"]},{"name":"fun <T : Any> listCollections(resultClass: Class<T>): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/list-collections.html","searchKeys":["listCollections","fun <T : Any> listCollections(resultClass: Class<T>): ListCollectionsIterable<T>","com.mongodb.kotlin.client.MongoDatabase.listCollections"]},{"name":"fun <T : Any> listDatabases(clientSession: ClientSession, resultClass: Class<T>): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun <T : Any> listDatabases(clientSession: ClientSession, resultClass: Class<T>): ListDatabasesIterable<T>","com.mongodb.kotlin.client.MongoCluster.listDatabases"]},{"name":"fun <T : Any> listDatabases(resultClass: Class<T>): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun <T : Any> listDatabases(resultClass: Class<T>): ListDatabasesIterable<T>","com.mongodb.kotlin.client.MongoCluster.listDatabases"]},{"name":"fun <T : Any> runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","description":"com.mongodb.kotlin.client.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/run-command.html","searchKeys":["runCommand","fun <T : Any> runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","com.mongodb.kotlin.client.MongoDatabase.runCommand"]},{"name":"fun <T : Any> runCommand(command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","description":"com.mongodb.kotlin.client.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/run-command.html","searchKeys":["runCommand","fun <T : Any> runCommand(command: Bson, readPreference: ReadPreference = this.readPreference, resultClass: Class<T>): T","com.mongodb.kotlin.client.MongoDatabase.runCommand"]},{"name":"fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.MongoCluster.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/watch.html","searchKeys":["watch","fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","com.mongodb.kotlin.client.MongoCluster.watch"]},{"name":"fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.MongoDatabase.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/watch.html","searchKeys":["watch","fun <T : Any> watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","com.mongodb.kotlin.client.MongoDatabase.watch"]},{"name":"fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.MongoCluster.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/watch.html","searchKeys":["watch","fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","com.mongodb.kotlin.client.MongoCluster.watch"]},{"name":"fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.MongoDatabase.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/watch.html","searchKeys":["watch","fun <T : Any> watch(pipeline: List<Bson> = emptyList(), resultClass: Class<T>): ChangeStreamIterable<T>","com.mongodb.kotlin.client.MongoDatabase.watch"]},{"name":"fun <T : Any> withTransaction(transactionBody: () -> T, options: TransactionOptions = TransactionOptions.builder().build()): T","description":"com.mongodb.kotlin.client.ClientSession.withTransaction","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/with-transaction.html","searchKeys":["withTransaction","fun <T : Any> withTransaction(transactionBody: () -> T, options: TransactionOptions = TransactionOptions.builder().build()): T","com.mongodb.kotlin.client.ClientSession.withTransaction"]},{"name":"fun ClientSessionOptions.Builder.defaultTimeout(defaultTimeout: Long): ClientSessionOptions.Builder","description":"com.mongodb.kotlin.client.defaultTimeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/default-timeout.html","searchKeys":["defaultTimeout","fun ClientSessionOptions.Builder.defaultTimeout(defaultTimeout: Long): ClientSessionOptions.Builder","com.mongodb.kotlin.client.defaultTimeout"]},{"name":"fun CountOptions.maxTime(maxTime: Long): CountOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun CountOptions.maxTime(maxTime: Long): CountOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun CreateCollectionOptions.expireAfter(maxTime: Long): CreateCollectionOptions","description":"com.mongodb.kotlin.client.expireAfter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/expire-after.html","searchKeys":["expireAfter","fun CreateCollectionOptions.expireAfter(maxTime: Long): CreateCollectionOptions","com.mongodb.kotlin.client.expireAfter"]},{"name":"fun CreateIndexOptions.maxTime(maxTime: Long): CreateIndexOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun CreateIndexOptions.maxTime(maxTime: Long): CreateIndexOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun DropIndexOptions.maxTime(maxTime: Long): DropIndexOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun DropIndexOptions.maxTime(maxTime: Long): DropIndexOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun EstimatedDocumentCountOptions.maxTime(maxTime: Long): EstimatedDocumentCountOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun EstimatedDocumentCountOptions.maxTime(maxTime: Long): EstimatedDocumentCountOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun FindOneAndDeleteOptions.maxTime(maxTime: Long): FindOneAndDeleteOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun FindOneAndDeleteOptions.maxTime(maxTime: Long): FindOneAndDeleteOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun FindOneAndReplaceOptions.maxTime(maxTime: Long): FindOneAndReplaceOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun FindOneAndReplaceOptions.maxTime(maxTime: Long): FindOneAndReplaceOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun FindOneAndUpdateOptions.maxTime(maxTime: Long): FindOneAndUpdateOptions","description":"com.mongodb.kotlin.client.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-time.html","searchKeys":["maxTime","fun FindOneAndUpdateOptions.maxTime(maxTime: Long): FindOneAndUpdateOptions","com.mongodb.kotlin.client.maxTime"]},{"name":"fun IndexOptions.expireAfter(expireAfter: Long): IndexOptions","description":"com.mongodb.kotlin.client.expireAfter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/expire-after.html","searchKeys":["expireAfter","fun IndexOptions.expireAfter(expireAfter: Long): IndexOptions","com.mongodb.kotlin.client.expireAfter"]},{"name":"fun TransactionOptions.Builder.maxCommitTime(maxCommitTime: Long): TransactionOptions.Builder","description":"com.mongodb.kotlin.client.maxCommitTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/max-commit-time.html","searchKeys":["maxCommitTime","fun TransactionOptions.Builder.maxCommitTime(maxCommitTime: Long): TransactionOptions.Builder","com.mongodb.kotlin.client.maxCommitTime"]},{"name":"fun abortTransaction()","description":"com.mongodb.kotlin.client.ClientSession.abortTransaction","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/abort-transaction.html","searchKeys":["abortTransaction","fun abortTransaction()","com.mongodb.kotlin.client.ClientSession.abortTransaction"]},{"name":"fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateIterable<Document>","description":"com.mongodb.kotlin.client.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/aggregate.html","searchKeys":["aggregate","fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateIterable<Document>","com.mongodb.kotlin.client.MongoDatabase.aggregate"]},{"name":"fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateIterable<T>","description":"com.mongodb.kotlin.client.MongoCollection.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun aggregate(clientSession: ClientSession, pipeline: List<Bson>): AggregateIterable<T>","com.mongodb.kotlin.client.MongoCollection.aggregate"]},{"name":"fun aggregate(pipeline: List<Bson>): AggregateIterable<Document>","description":"com.mongodb.kotlin.client.MongoDatabase.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/aggregate.html","searchKeys":["aggregate","fun aggregate(pipeline: List<Bson>): AggregateIterable<Document>","com.mongodb.kotlin.client.MongoDatabase.aggregate"]},{"name":"fun aggregate(pipeline: List<Bson>): AggregateIterable<T>","description":"com.mongodb.kotlin.client.MongoCollection.aggregate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/aggregate.html","searchKeys":["aggregate","fun aggregate(pipeline: List<Bson>): AggregateIterable<T>","com.mongodb.kotlin.client.MongoCollection.aggregate"]},{"name":"fun allowDiskUse(allowDiskUse: Boolean?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.allowDiskUse","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/allow-disk-use.html","searchKeys":["allowDiskUse","fun allowDiskUse(allowDiskUse: Boolean?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.allowDiskUse"]},{"name":"fun allowDiskUse(allowDiskUse: Boolean?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.allowDiskUse","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/allow-disk-use.html","searchKeys":["allowDiskUse","fun allowDiskUse(allowDiskUse: Boolean?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.allowDiskUse"]},{"name":"fun allowDiskUse(allowDiskUse: Boolean?): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.allowDiskUse","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/allow-disk-use.html","searchKeys":["allowDiskUse","fun allowDiskUse(allowDiskUse: Boolean?): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.allowDiskUse"]},{"name":"fun appendMetadata(mongoDriverInformation: MongoDriverInformation)","description":"com.mongodb.kotlin.client.MongoClient.appendMetadata","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/append-metadata.html","searchKeys":["appendMetadata","fun appendMetadata(mongoDriverInformation: MongoDriverInformation)","com.mongodb.kotlin.client.MongoClient.appendMetadata"]},{"name":"fun authorizedCollections(authorizedCollections: Boolean): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.authorizedCollections","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/authorized-collections.html","searchKeys":["authorizedCollections","fun authorizedCollections(authorizedCollections: Boolean): ListCollectionNamesIterable","com.mongodb.kotlin.client.ListCollectionNamesIterable.authorizedCollections"]},{"name":"fun authorizedDatabasesOnly(authorizedDatabasesOnly: Boolean?): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.authorizedDatabasesOnly","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/authorized-databases-only.html","searchKeys":["authorizedDatabasesOnly","fun authorizedDatabasesOnly(authorizedDatabasesOnly: Boolean?): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.authorizedDatabasesOnly"]},{"name":"fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","com.mongodb.kotlin.client.MongoCluster.bulkWrite"]},{"name":"fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","fun bulkWrite(clientSession: ClientSession, models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","com.mongodb.kotlin.client.MongoCluster.bulkWrite"]},{"name":"fun bulkWrite(clientSession: ClientSession, requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","description":"com.mongodb.kotlin.client.MongoCollection.bulkWrite","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/bulk-write.html","searchKeys":["bulkWrite","fun bulkWrite(clientSession: ClientSession, requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","com.mongodb.kotlin.client.MongoCollection.bulkWrite"]},{"name":"fun bulkWrite(models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","fun bulkWrite(models: List<ClientNamespacedWriteModel>): ClientBulkWriteResult","com.mongodb.kotlin.client.MongoCluster.bulkWrite"]},{"name":"fun bulkWrite(models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","description":"com.mongodb.kotlin.client.MongoCluster.bulkWrite","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/bulk-write.html","searchKeys":["bulkWrite","fun bulkWrite(models: List<ClientNamespacedWriteModel>, options: ClientBulkWriteOptions): ClientBulkWriteResult","com.mongodb.kotlin.client.MongoCluster.bulkWrite"]},{"name":"fun bulkWrite(requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","description":"com.mongodb.kotlin.client.MongoCollection.bulkWrite","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/bulk-write.html","searchKeys":["bulkWrite","fun bulkWrite(requests: List<WriteModel<out T>>, options: BulkWriteOptions = BulkWriteOptions()): BulkWriteResult","com.mongodb.kotlin.client.MongoCollection.bulkWrite"]},{"name":"fun bypassDocumentValidation(bypassDocumentValidation: Boolean?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.bypassDocumentValidation","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/bypass-document-validation.html","searchKeys":["bypassDocumentValidation","fun bypassDocumentValidation(bypassDocumentValidation: Boolean?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.bypassDocumentValidation"]},{"name":"fun collation(collation: Collation?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.collation","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/collation.html","searchKeys":["collation","fun collation(collation: Collation?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.collation"]},{"name":"fun collation(collation: Collation?): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.collation","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/collation.html","searchKeys":["collation","fun collation(collation: Collation?): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.collation"]},{"name":"fun collation(collation: Collation?): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.collation","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/collation.html","searchKeys":["collation","fun collation(collation: Collation?): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.collation"]},{"name":"fun collation(collation: Collation?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.collation","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/collation.html","searchKeys":["collation","fun collation(collation: Collation?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.collation"]},{"name":"fun collation(collation: Collation?): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.collation","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/collation.html","searchKeys":["collation","fun collation(collation: Collation?): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.collation"]},{"name":"fun comment(comment: BsonValue?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.comment"]},{"name":"fun comment(comment: BsonValue?): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.comment"]},{"name":"fun comment(comment: BsonValue?): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.comment"]},{"name":"fun comment(comment: BsonValue?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.comment"]},{"name":"fun comment(comment: BsonValue?): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListCollectionNamesIterable","com.mongodb.kotlin.client.ListCollectionNamesIterable.comment"]},{"name":"fun comment(comment: BsonValue?): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.ListCollectionsIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListCollectionsIterable<T>","com.mongodb.kotlin.client.ListCollectionsIterable.comment"]},{"name":"fun comment(comment: BsonValue?): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.comment"]},{"name":"fun comment(comment: BsonValue?): ListIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListIndexesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListIndexesIterable<T>","com.mongodb.kotlin.client.ListIndexesIterable.comment"]},{"name":"fun comment(comment: BsonValue?): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/comment.html","searchKeys":["comment","fun comment(comment: BsonValue?): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.comment"]},{"name":"fun comment(comment: String?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.comment"]},{"name":"fun comment(comment: String?): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.comment"]},{"name":"fun comment(comment: String?): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.comment"]},{"name":"fun comment(comment: String?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.comment"]},{"name":"fun comment(comment: String?): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): ListCollectionNamesIterable","com.mongodb.kotlin.client.ListCollectionNamesIterable.comment"]},{"name":"fun comment(comment: String?): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.ListCollectionsIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): ListCollectionsIterable<T>","com.mongodb.kotlin.client.ListCollectionsIterable.comment"]},{"name":"fun comment(comment: String?): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.comment"]},{"name":"fun comment(comment: String?): ListIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListIndexesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): ListIndexesIterable<T>","com.mongodb.kotlin.client.ListIndexesIterable.comment"]},{"name":"fun comment(comment: String?): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.comment","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/comment.html","searchKeys":["comment","fun comment(comment: String?): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.comment"]},{"name":"fun commitTransaction()","description":"com.mongodb.kotlin.client.ClientSession.commitTransaction","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/commit-transaction.html","searchKeys":["commitTransaction","fun commitTransaction()","com.mongodb.kotlin.client.ClientSession.commitTransaction"]},{"name":"fun countDocuments(clientSession: ClientSession, filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","description":"com.mongodb.kotlin.client.MongoCollection.countDocuments","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/count-documents.html","searchKeys":["countDocuments","fun countDocuments(clientSession: ClientSession, filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","com.mongodb.kotlin.client.MongoCollection.countDocuments"]},{"name":"fun countDocuments(filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","description":"com.mongodb.kotlin.client.MongoCollection.countDocuments","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/count-documents.html","searchKeys":["countDocuments","fun countDocuments(filter: Bson = BsonDocument(), options: CountOptions = CountOptions()): Long","com.mongodb.kotlin.client.MongoCollection.countDocuments"]},{"name":"fun create(connectionString: ConnectionString = ConnectionString(\"mongodb://localhost\"), mongoDriverInformation: MongoDriverInformation? = null): MongoClient","description":"com.mongodb.kotlin.client.MongoClient.Factory.create","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/-factory/create.html","searchKeys":["create","fun create(connectionString: ConnectionString = ConnectionString(\"mongodb://localhost\"), mongoDriverInformation: MongoDriverInformation? = null): MongoClient","com.mongodb.kotlin.client.MongoClient.Factory.create"]},{"name":"fun create(connectionString: String): MongoClient","description":"com.mongodb.kotlin.client.MongoClient.Factory.create","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/-factory/create.html","searchKeys":["create","fun create(connectionString: String): MongoClient","com.mongodb.kotlin.client.MongoClient.Factory.create"]},{"name":"fun create(settings: MongoClientSettings, mongoDriverInformation: MongoDriverInformation? = null): MongoClient","description":"com.mongodb.kotlin.client.MongoClient.Factory.create","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/-factory/create.html","searchKeys":["create","fun create(settings: MongoClientSettings, mongoDriverInformation: MongoDriverInformation? = null): MongoClient","com.mongodb.kotlin.client.MongoClient.Factory.create"]},{"name":"fun createCollection(clientSession: ClientSession, collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","description":"com.mongodb.kotlin.client.MongoDatabase.createCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/create-collection.html","searchKeys":["createCollection","fun createCollection(clientSession: ClientSession, collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","com.mongodb.kotlin.client.MongoDatabase.createCollection"]},{"name":"fun createCollection(collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","description":"com.mongodb.kotlin.client.MongoDatabase.createCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/create-collection.html","searchKeys":["createCollection","fun createCollection(collectionName: String, createCollectionOptions: CreateCollectionOptions = CreateCollectionOptions())","com.mongodb.kotlin.client.MongoDatabase.createCollection"]},{"name":"fun createIndex(clientSession: ClientSession, keys: Bson, options: IndexOptions = IndexOptions()): String","description":"com.mongodb.kotlin.client.MongoCollection.createIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-index.html","searchKeys":["createIndex","fun createIndex(clientSession: ClientSession, keys: Bson, options: IndexOptions = IndexOptions()): String","com.mongodb.kotlin.client.MongoCollection.createIndex"]},{"name":"fun createIndex(keys: Bson, options: IndexOptions = IndexOptions()): String","description":"com.mongodb.kotlin.client.MongoCollection.createIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-index.html","searchKeys":["createIndex","fun createIndex(keys: Bson, options: IndexOptions = IndexOptions()): String","com.mongodb.kotlin.client.MongoCollection.createIndex"]},{"name":"fun createIndexes(clientSession: ClientSession, indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): List<String>","description":"com.mongodb.kotlin.client.MongoCollection.createIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-indexes.html","searchKeys":["createIndexes","fun createIndexes(clientSession: ClientSession, indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): List<String>","com.mongodb.kotlin.client.MongoCollection.createIndexes"]},{"name":"fun createIndexes(indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): List<String>","description":"com.mongodb.kotlin.client.MongoCollection.createIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-indexes.html","searchKeys":["createIndexes","fun createIndexes(indexes: List<IndexModel>, options: CreateIndexOptions = CreateIndexOptions()): List<String>","com.mongodb.kotlin.client.MongoCollection.createIndexes"]},{"name":"fun createSearchIndex(definition: Bson): String","description":"com.mongodb.kotlin.client.MongoCollection.createSearchIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-search-index.html","searchKeys":["createSearchIndex","fun createSearchIndex(definition: Bson): String","com.mongodb.kotlin.client.MongoCollection.createSearchIndex"]},{"name":"fun createSearchIndex(indexName: String, definition: Bson): String","description":"com.mongodb.kotlin.client.MongoCollection.createSearchIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-search-index.html","searchKeys":["createSearchIndex","fun createSearchIndex(indexName: String, definition: Bson): String","com.mongodb.kotlin.client.MongoCollection.createSearchIndex"]},{"name":"fun createSearchIndexes(searchIndexModels: List<SearchIndexModel>): List<String>","description":"com.mongodb.kotlin.client.MongoCollection.createSearchIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/create-search-indexes.html","searchKeys":["createSearchIndexes","fun createSearchIndexes(searchIndexModels: List<SearchIndexModel>): List<String>","com.mongodb.kotlin.client.MongoCollection.createSearchIndexes"]},{"name":"fun createView(clientSession: ClientSession, viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","description":"com.mongodb.kotlin.client.MongoDatabase.createView","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/create-view.html","searchKeys":["createView","fun createView(clientSession: ClientSession, viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","com.mongodb.kotlin.client.MongoDatabase.createView"]},{"name":"fun createView(viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","description":"com.mongodb.kotlin.client.MongoDatabase.createView","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/create-view.html","searchKeys":["createView","fun createView(viewName: String, viewOn: String, pipeline: List<Bson>, createViewOptions: CreateViewOptions = CreateViewOptions())","com.mongodb.kotlin.client.MongoDatabase.createView"]},{"name":"fun cursorType(cursorType: CursorType): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.cursorType","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/cursor-type.html","searchKeys":["cursorType","fun cursorType(cursorType: CursorType): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.cursorType"]},{"name":"fun deleteMany(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.MongoCollection.deleteMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/delete-many.html","searchKeys":["deleteMany","fun deleteMany(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.MongoCollection.deleteMany"]},{"name":"fun deleteMany(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.MongoCollection.deleteMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/delete-many.html","searchKeys":["deleteMany","fun deleteMany(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.MongoCollection.deleteMany"]},{"name":"fun deleteOne(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.MongoCollection.deleteOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/delete-one.html","searchKeys":["deleteOne","fun deleteOne(clientSession: ClientSession, filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.MongoCollection.deleteOne"]},{"name":"fun deleteOne(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","description":"com.mongodb.kotlin.client.MongoCollection.deleteOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/delete-one.html","searchKeys":["deleteOne","fun deleteOne(filter: Bson, options: DeleteOptions = DeleteOptions()): DeleteResult","com.mongodb.kotlin.client.MongoCollection.deleteOne"]},{"name":"fun drop()","description":"com.mongodb.kotlin.client.MongoDatabase.drop","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/drop.html","searchKeys":["drop","fun drop()","com.mongodb.kotlin.client.MongoDatabase.drop"]},{"name":"fun drop(clientSession: ClientSession)","description":"com.mongodb.kotlin.client.MongoDatabase.drop","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/drop.html","searchKeys":["drop","fun drop(clientSession: ClientSession)","com.mongodb.kotlin.client.MongoDatabase.drop"]},{"name":"fun drop(clientSession: ClientSession, options: DropCollectionOptions = DropCollectionOptions())","description":"com.mongodb.kotlin.client.MongoCollection.drop","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop.html","searchKeys":["drop","fun drop(clientSession: ClientSession, options: DropCollectionOptions = DropCollectionOptions())","com.mongodb.kotlin.client.MongoCollection.drop"]},{"name":"fun drop(options: DropCollectionOptions = DropCollectionOptions())","description":"com.mongodb.kotlin.client.MongoCollection.drop","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop.html","searchKeys":["drop","fun drop(options: DropCollectionOptions = DropCollectionOptions())","com.mongodb.kotlin.client.MongoCollection.drop"]},{"name":"fun dropIndex(clientSession: ClientSession, indexName: String, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-index.html","searchKeys":["dropIndex","fun dropIndex(clientSession: ClientSession, indexName: String, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.MongoCollection.dropIndex"]},{"name":"fun dropIndex(clientSession: ClientSession, keys: Bson, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-index.html","searchKeys":["dropIndex","fun dropIndex(clientSession: ClientSession, keys: Bson, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.MongoCollection.dropIndex"]},{"name":"fun dropIndex(indexName: String, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-index.html","searchKeys":["dropIndex","fun dropIndex(indexName: String, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.MongoCollection.dropIndex"]},{"name":"fun dropIndex(keys: Bson, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.MongoCollection.dropIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-index.html","searchKeys":["dropIndex","fun dropIndex(keys: Bson, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.MongoCollection.dropIndex"]},{"name":"fun dropIndexes(clientSession: ClientSession, options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.MongoCollection.dropIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-indexes.html","searchKeys":["dropIndexes","fun dropIndexes(clientSession: ClientSession, options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.MongoCollection.dropIndexes"]},{"name":"fun dropIndexes(options: DropIndexOptions = DropIndexOptions())","description":"com.mongodb.kotlin.client.MongoCollection.dropIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-indexes.html","searchKeys":["dropIndexes","fun dropIndexes(options: DropIndexOptions = DropIndexOptions())","com.mongodb.kotlin.client.MongoCollection.dropIndexes"]},{"name":"fun dropSearchIndex(indexName: String)","description":"com.mongodb.kotlin.client.MongoCollection.dropSearchIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/drop-search-index.html","searchKeys":["dropSearchIndex","fun dropSearchIndex(indexName: String)","com.mongodb.kotlin.client.MongoCollection.dropSearchIndex"]},{"name":"fun estimatedDocumentCount(options: EstimatedDocumentCountOptions = EstimatedDocumentCountOptions()): Long","description":"com.mongodb.kotlin.client.MongoCollection.estimatedDocumentCount","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/estimated-document-count.html","searchKeys":["estimatedDocumentCount","fun estimatedDocumentCount(options: EstimatedDocumentCountOptions = EstimatedDocumentCountOptions()): Long","com.mongodb.kotlin.client.MongoCollection.estimatedDocumentCount"]},{"name":"fun explain(verbosity: ExplainVerbosity? = null): Document","description":"com.mongodb.kotlin.client.AggregateIterable.explain","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/explain.html","searchKeys":["explain","fun explain(verbosity: ExplainVerbosity? = null): Document","com.mongodb.kotlin.client.AggregateIterable.explain"]},{"name":"fun explain(verbosity: ExplainVerbosity? = null): Document","description":"com.mongodb.kotlin.client.FindIterable.explain","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/explain.html","searchKeys":["explain","fun explain(verbosity: ExplainVerbosity? = null): Document","com.mongodb.kotlin.client.FindIterable.explain"]},{"name":"fun explain(verbosity: ExplainVerbosity? = null): Document","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.explain","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/explain.html","searchKeys":["explain","fun explain(verbosity: ExplainVerbosity? = null): Document","com.mongodb.kotlin.client.ListSearchIndexesIterable.explain"]},{"name":"fun filter(filter: Bson?): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.filter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/filter.html","searchKeys":["filter","fun filter(filter: Bson?): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.filter"]},{"name":"fun filter(filter: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.filter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/filter.html","searchKeys":["filter","fun filter(filter: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.filter"]},{"name":"fun filter(filter: Bson?): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.filter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/filter.html","searchKeys":["filter","fun filter(filter: Bson?): ListCollectionNamesIterable","com.mongodb.kotlin.client.ListCollectionNamesIterable.filter"]},{"name":"fun filter(filter: Bson?): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.ListCollectionsIterable.filter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/filter.html","searchKeys":["filter","fun filter(filter: Bson?): ListCollectionsIterable<T>","com.mongodb.kotlin.client.ListCollectionsIterable.filter"]},{"name":"fun filter(filter: Bson?): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.filter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/filter.html","searchKeys":["filter","fun filter(filter: Bson?): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.filter"]},{"name":"fun find(clientSession: ClientSession, filter: Bson = BsonDocument()): FindIterable<T>","description":"com.mongodb.kotlin.client.MongoCollection.find","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find.html","searchKeys":["find","fun find(clientSession: ClientSession, filter: Bson = BsonDocument()): FindIterable<T>","com.mongodb.kotlin.client.MongoCollection.find"]},{"name":"fun find(filter: Bson = BsonDocument()): FindIterable<T>","description":"com.mongodb.kotlin.client.MongoCollection.find","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find.html","searchKeys":["find","fun find(filter: Bson = BsonDocument()): FindIterable<T>","com.mongodb.kotlin.client.MongoCollection.find"]},{"name":"fun findOneAndDelete(clientSession: ClientSession, filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndDelete","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-delete.html","searchKeys":["findOneAndDelete","fun findOneAndDelete(clientSession: ClientSession, filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndDelete"]},{"name":"fun findOneAndDelete(filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndDelete","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-delete.html","searchKeys":["findOneAndDelete","fun findOneAndDelete(filter: Bson, options: FindOneAndDeleteOptions = FindOneAndDeleteOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndDelete"]},{"name":"fun findOneAndReplace(clientSession: ClientSession, filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndReplace","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-replace.html","searchKeys":["findOneAndReplace","fun findOneAndReplace(clientSession: ClientSession, filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndReplace"]},{"name":"fun findOneAndReplace(filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndReplace","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-replace.html","searchKeys":["findOneAndReplace","fun findOneAndReplace(filter: Bson, replacement: T, options: FindOneAndReplaceOptions = FindOneAndReplaceOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndReplace"]},{"name":"fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate"]},{"name":"fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","fun findOneAndUpdate(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate"]},{"name":"fun findOneAndUpdate(filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","fun findOneAndUpdate(filter: Bson, update: Bson, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate"]},{"name":"fun findOneAndUpdate(filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","description":"com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/find-one-and-update.html","searchKeys":["findOneAndUpdate","fun findOneAndUpdate(filter: Bson, update: List<Bson>, options: FindOneAndUpdateOptions = FindOneAndUpdateOptions()): T?","com.mongodb.kotlin.client.MongoCollection.findOneAndUpdate"]},{"name":"fun first(): T","description":"com.mongodb.kotlin.client.MongoIterable.first","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/first.html","searchKeys":["first","fun first(): T","com.mongodb.kotlin.client.MongoIterable.first"]},{"name":"fun firstOrNull(): T?","description":"com.mongodb.kotlin.client.MongoIterable.firstOrNull","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/first-or-null.html","searchKeys":["firstOrNull","fun firstOrNull(): T?","com.mongodb.kotlin.client.MongoIterable.firstOrNull"]},{"name":"fun forEach(action: (T) -> Unit)","description":"com.mongodb.kotlin.client.MongoIterable.forEach","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/for-each.html","searchKeys":["forEach","fun forEach(action: (T) -> Unit)","com.mongodb.kotlin.client.MongoIterable.forEach"]},{"name":"fun fullDocument(fullDocument: FullDocument): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.fullDocument","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/full-document.html","searchKeys":["fullDocument","fun fullDocument(fullDocument: FullDocument): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.fullDocument"]},{"name":"fun fullDocumentBeforeChange(fullDocumentBeforeChange: FullDocumentBeforeChange): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.fullDocumentBeforeChange","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/full-document-before-change.html","searchKeys":["fullDocumentBeforeChange","fun fullDocumentBeforeChange(fullDocumentBeforeChange: FullDocumentBeforeChange): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.fullDocumentBeforeChange"]},{"name":"fun getDatabase(databaseName: String): MongoDatabase","description":"com.mongodb.kotlin.client.MongoCluster.getDatabase","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/get-database.html","searchKeys":["getDatabase","fun getDatabase(databaseName: String): MongoDatabase","com.mongodb.kotlin.client.MongoCluster.getDatabase"]},{"name":"fun hint(hint: Bson?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.hint","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/hint.html","searchKeys":["hint","fun hint(hint: Bson?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.hint"]},{"name":"fun hint(hint: Bson?): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.hint","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/hint.html","searchKeys":["hint","fun hint(hint: Bson?): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.hint"]},{"name":"fun hint(hint: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.hint","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/hint.html","searchKeys":["hint","fun hint(hint: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.hint"]},{"name":"fun hintString(hint: String?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.hintString","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/hint-string.html","searchKeys":["hintString","fun hintString(hint: String?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.hintString"]},{"name":"fun hintString(hint: String?): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.hintString","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/hint-string.html","searchKeys":["hintString","fun hintString(hint: String?): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.hintString"]},{"name":"fun hintString(hint: String?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.hintString","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/hint-string.html","searchKeys":["hintString","fun hintString(hint: String?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.hintString"]},{"name":"fun insertMany(clientSession: ClientSession, documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","description":"com.mongodb.kotlin.client.MongoCollection.insertMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/insert-many.html","searchKeys":["insertMany","fun insertMany(clientSession: ClientSession, documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","com.mongodb.kotlin.client.MongoCollection.insertMany"]},{"name":"fun insertMany(documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","description":"com.mongodb.kotlin.client.MongoCollection.insertMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/insert-many.html","searchKeys":["insertMany","fun insertMany(documents: List<T>, options: InsertManyOptions = InsertManyOptions()): InsertManyResult","com.mongodb.kotlin.client.MongoCollection.insertMany"]},{"name":"fun insertOne(clientSession: ClientSession, document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","description":"com.mongodb.kotlin.client.MongoCollection.insertOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/insert-one.html","searchKeys":["insertOne","fun insertOne(clientSession: ClientSession, document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","com.mongodb.kotlin.client.MongoCollection.insertOne"]},{"name":"fun insertOne(document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","description":"com.mongodb.kotlin.client.MongoCollection.insertOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/insert-one.html","searchKeys":["insertOne","fun insertOne(document: T, options: InsertOneOptions = InsertOneOptions()): InsertOneResult","com.mongodb.kotlin.client.MongoCollection.insertOne"]},{"name":"fun let(variables: Bson?): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.let","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/let.html","searchKeys":["let","fun let(variables: Bson?): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.let"]},{"name":"fun let(variables: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.let","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/let.html","searchKeys":["let","fun let(variables: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.let"]},{"name":"fun limit(limit: Int): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.limit","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/limit.html","searchKeys":["limit","fun limit(limit: Int): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.limit"]},{"name":"fun listCollectionNames(): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.MongoDatabase.listCollectionNames","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/list-collection-names.html","searchKeys":["listCollectionNames","fun listCollectionNames(): ListCollectionNamesIterable","com.mongodb.kotlin.client.MongoDatabase.listCollectionNames"]},{"name":"fun listCollectionNames(clientSession: ClientSession): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.MongoDatabase.listCollectionNames","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/list-collection-names.html","searchKeys":["listCollectionNames","fun listCollectionNames(clientSession: ClientSession): ListCollectionNamesIterable","com.mongodb.kotlin.client.MongoDatabase.listCollectionNames"]},{"name":"fun listCollections(): ListCollectionsIterable<Document>","description":"com.mongodb.kotlin.client.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/list-collections.html","searchKeys":["listCollections","fun listCollections(): ListCollectionsIterable<Document>","com.mongodb.kotlin.client.MongoDatabase.listCollections"]},{"name":"fun listCollections(clientSession: ClientSession): ListCollectionsIterable<Document>","description":"com.mongodb.kotlin.client.MongoDatabase.listCollections","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/list-collections.html","searchKeys":["listCollections","fun listCollections(clientSession: ClientSession): ListCollectionsIterable<Document>","com.mongodb.kotlin.client.MongoDatabase.listCollections"]},{"name":"fun listDatabaseNames(): MongoIterable<String>","description":"com.mongodb.kotlin.client.MongoCluster.listDatabaseNames","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/list-database-names.html","searchKeys":["listDatabaseNames","fun listDatabaseNames(): MongoIterable<String>","com.mongodb.kotlin.client.MongoCluster.listDatabaseNames"]},{"name":"fun listDatabaseNames(clientSession: ClientSession): MongoIterable<String>","description":"com.mongodb.kotlin.client.MongoCluster.listDatabaseNames","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/list-database-names.html","searchKeys":["listDatabaseNames","fun listDatabaseNames(clientSession: ClientSession): MongoIterable<String>","com.mongodb.kotlin.client.MongoCluster.listDatabaseNames"]},{"name":"fun listDatabases(): ListDatabasesIterable<Document>","description":"com.mongodb.kotlin.client.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun listDatabases(): ListDatabasesIterable<Document>","com.mongodb.kotlin.client.MongoCluster.listDatabases"]},{"name":"fun listDatabases(clientSession: ClientSession): ListDatabasesIterable<Document>","description":"com.mongodb.kotlin.client.MongoCluster.listDatabases","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/list-databases.html","searchKeys":["listDatabases","fun listDatabases(clientSession: ClientSession): ListDatabasesIterable<Document>","com.mongodb.kotlin.client.MongoCluster.listDatabases"]},{"name":"fun listIndexes(): ListIndexesIterable<Document>","description":"com.mongodb.kotlin.client.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun listIndexes(): ListIndexesIterable<Document>","com.mongodb.kotlin.client.MongoCollection.listIndexes"]},{"name":"fun listIndexes(clientSession: ClientSession): ListIndexesIterable<Document>","description":"com.mongodb.kotlin.client.MongoCollection.listIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/list-indexes.html","searchKeys":["listIndexes","fun listIndexes(clientSession: ClientSession): ListIndexesIterable<Document>","com.mongodb.kotlin.client.MongoCollection.listIndexes"]},{"name":"fun listSearchIndexes(): ListSearchIndexesIterable<Document>","description":"com.mongodb.kotlin.client.MongoCollection.listSearchIndexes","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/list-search-indexes.html","searchKeys":["listSearchIndexes","fun listSearchIndexes(): ListSearchIndexesIterable<Document>","com.mongodb.kotlin.client.MongoCollection.listSearchIndexes"]},{"name":"fun max(max: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.max","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/max.html","searchKeys":["max","fun max(max: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.max"]},{"name":"fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.maxAwaitTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/max-await-time.html","searchKeys":["maxAwaitTime","fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.maxAwaitTime"]},{"name":"fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.maxAwaitTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/max-await-time.html","searchKeys":["maxAwaitTime","fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.maxAwaitTime"]},{"name":"fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.maxAwaitTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/max-await-time.html","searchKeys":["maxAwaitTime","fun maxAwaitTime(maxAwaitTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.maxAwaitTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionNamesIterable","com.mongodb.kotlin.client.ListCollectionNamesIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.ListCollectionsIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListCollectionsIterable<T>","com.mongodb.kotlin.client.ListCollectionsIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListIndexesIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListIndexesIterable<T>","com.mongodb.kotlin.client.ListIndexesIterable.maxTime"]},{"name":"fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.maxTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/max-time.html","searchKeys":["maxTime","fun maxTime(maxTime: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.maxTime"]},{"name":"fun min(min: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.min","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/min.html","searchKeys":["min","fun min(min: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.min"]},{"name":"fun name(indexName: String): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.name","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/name.html","searchKeys":["name","fun name(indexName: String): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.name"]},{"name":"fun nameOnly(nameOnly: Boolean?): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.nameOnly","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/name-only.html","searchKeys":["nameOnly","fun nameOnly(nameOnly: Boolean?): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.nameOnly"]},{"name":"fun noCursorTimeout(noCursorTimeout: Boolean): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.noCursorTimeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/no-cursor-timeout.html","searchKeys":["noCursorTimeout","fun noCursorTimeout(noCursorTimeout: Boolean): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.noCursorTimeout"]},{"name":"fun partial(partial: Boolean): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.partial","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/partial.html","searchKeys":["partial","fun partial(partial: Boolean): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.partial"]},{"name":"fun projection(projection: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.projection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/projection.html","searchKeys":["projection","fun projection(projection: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.projection"]},{"name":"fun renameCollection(clientSession: ClientSession, newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","description":"com.mongodb.kotlin.client.MongoCollection.renameCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/rename-collection.html","searchKeys":["renameCollection","fun renameCollection(clientSession: ClientSession, newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","com.mongodb.kotlin.client.MongoCollection.renameCollection"]},{"name":"fun renameCollection(newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","description":"com.mongodb.kotlin.client.MongoCollection.renameCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/rename-collection.html","searchKeys":["renameCollection","fun renameCollection(newCollectionNamespace: MongoNamespace, options: RenameCollectionOptions = RenameCollectionOptions())","com.mongodb.kotlin.client.MongoCollection.renameCollection"]},{"name":"fun replaceOne(clientSession: ClientSession, filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.replaceOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/replace-one.html","searchKeys":["replaceOne","fun replaceOne(clientSession: ClientSession, filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.replaceOne"]},{"name":"fun replaceOne(filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.replaceOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/replace-one.html","searchKeys":["replaceOne","fun replaceOne(filter: Bson, replacement: T, options: ReplaceOptions = ReplaceOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.replaceOne"]},{"name":"fun resumeAfter(resumeToken: BsonDocument): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.resumeAfter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/resume-after.html","searchKeys":["resumeAfter","fun resumeAfter(resumeToken: BsonDocument): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.resumeAfter"]},{"name":"fun returnKey(returnKey: Boolean): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.returnKey","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/return-key.html","searchKeys":["returnKey","fun returnKey(returnKey: Boolean): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.returnKey"]},{"name":"fun runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference): Document","description":"com.mongodb.kotlin.client.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/run-command.html","searchKeys":["runCommand","fun runCommand(clientSession: ClientSession, command: Bson, readPreference: ReadPreference = this.readPreference): Document","com.mongodb.kotlin.client.MongoDatabase.runCommand"]},{"name":"fun runCommand(command: Bson, readPreference: ReadPreference = this.readPreference): Document","description":"com.mongodb.kotlin.client.MongoDatabase.runCommand","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/run-command.html","searchKeys":["runCommand","fun runCommand(command: Bson, readPreference: ReadPreference = this.readPreference): Document","com.mongodb.kotlin.client.MongoDatabase.runCommand"]},{"name":"fun showExpandedEvents(showExpandedEvents: Boolean): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.showExpandedEvents","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/show-expanded-events.html","searchKeys":["showExpandedEvents","fun showExpandedEvents(showExpandedEvents: Boolean): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.showExpandedEvents"]},{"name":"fun showRecordId(showRecordId: Boolean): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.showRecordId","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/show-record-id.html","searchKeys":["showRecordId","fun showRecordId(showRecordId: Boolean): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.showRecordId"]},{"name":"fun skip(skip: Int): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.skip","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/skip.html","searchKeys":["skip","fun skip(skip: Int): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.skip"]},{"name":"fun sort(sort: Bson?): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.sort","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/sort.html","searchKeys":["sort","fun sort(sort: Bson?): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.sort"]},{"name":"fun startAfter(startAfter: BsonDocument): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.startAfter","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/start-after.html","searchKeys":["startAfter","fun startAfter(startAfter: BsonDocument): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.startAfter"]},{"name":"fun startAtOperationTime(startAtOperationTime: BsonTimestamp): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.startAtOperationTime","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/start-at-operation-time.html","searchKeys":["startAtOperationTime","fun startAtOperationTime(startAtOperationTime: BsonTimestamp): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.startAtOperationTime"]},{"name":"fun startSession(options: ClientSessionOptions = ClientSessionOptions.builder().build()): ClientSession","description":"com.mongodb.kotlin.client.MongoCluster.startSession","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/start-session.html","searchKeys":["startSession","fun startSession(options: ClientSessionOptions = ClientSessionOptions.builder().build()): ClientSession","com.mongodb.kotlin.client.MongoCluster.startSession"]},{"name":"fun startTransaction()","description":"com.mongodb.kotlin.client.ClientSession.startTransaction","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/start-transaction.html","searchKeys":["startTransaction","fun startTransaction()","com.mongodb.kotlin.client.ClientSession.startTransaction"]},{"name":"fun startTransaction(transactionOptions: TransactionOptions)","description":"com.mongodb.kotlin.client.ClientSession.startTransaction","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/start-transaction.html","searchKeys":["startTransaction","fun startTransaction(transactionOptions: TransactionOptions)","com.mongodb.kotlin.client.ClientSession.startTransaction"]},{"name":"fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","description":"com.mongodb.kotlin.client.MongoCluster.timeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/timeout.html","searchKeys":["timeout","fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","com.mongodb.kotlin.client.MongoCluster.timeout"]},{"name":"fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","description":"com.mongodb.kotlin.client.MongoCollection.timeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/timeout.html","searchKeys":["timeout","fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","com.mongodb.kotlin.client.MongoCollection.timeout"]},{"name":"fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","description":"com.mongodb.kotlin.client.MongoDatabase.timeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/timeout.html","searchKeys":["timeout","fun timeout(timeUnit: TimeUnit = TimeUnit.MILLISECONDS): Long?","com.mongodb.kotlin.client.MongoDatabase.timeout"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.ListCollectionsIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListCollectionsIterable<T>","com.mongodb.kotlin.client.ListCollectionsIterable.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListIndexesIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListIndexesIterable<T>","com.mongodb.kotlin.client.ListIndexesIterable.timeoutMode"]},{"name":"fun timeoutMode(timeoutMode: TimeoutMode): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.timeoutMode","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/timeout-mode.html","searchKeys":["timeoutMode","fun timeoutMode(timeoutMode: TimeoutMode): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.timeoutMode"]},{"name":"fun toCollection()","description":"com.mongodb.kotlin.client.AggregateIterable.toCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/to-collection.html","searchKeys":["toCollection","fun toCollection()","com.mongodb.kotlin.client.AggregateIterable.toCollection"]},{"name":"fun toList(): List<T>","description":"com.mongodb.kotlin.client.MongoIterable.toList","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/to-list.html","searchKeys":["toList","fun toList(): List<T>","com.mongodb.kotlin.client.MongoIterable.toList"]},{"name":"fun updateMany(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-many.html","searchKeys":["updateMany","fun updateMany(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateMany"]},{"name":"fun updateMany(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-many.html","searchKeys":["updateMany","fun updateMany(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateMany"]},{"name":"fun updateMany(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-many.html","searchKeys":["updateMany","fun updateMany(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateMany"]},{"name":"fun updateMany(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateMany","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-many.html","searchKeys":["updateMany","fun updateMany(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateMany"]},{"name":"fun updateOne(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-one.html","searchKeys":["updateOne","fun updateOne(clientSession: ClientSession, filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateOne"]},{"name":"fun updateOne(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-one.html","searchKeys":["updateOne","fun updateOne(clientSession: ClientSession, filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateOne"]},{"name":"fun updateOne(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-one.html","searchKeys":["updateOne","fun updateOne(filter: Bson, update: Bson, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateOne"]},{"name":"fun updateOne(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","description":"com.mongodb.kotlin.client.MongoCollection.updateOne","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-one.html","searchKeys":["updateOne","fun updateOne(filter: Bson, update: List<Bson>, options: UpdateOptions = UpdateOptions()): UpdateResult","com.mongodb.kotlin.client.MongoCollection.updateOne"]},{"name":"fun updateSearchIndex(indexName: String, definition: Bson)","description":"com.mongodb.kotlin.client.MongoCollection.updateSearchIndex","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/update-search-index.html","searchKeys":["updateSearchIndex","fun updateSearchIndex(indexName: String, definition: Bson)","com.mongodb.kotlin.client.MongoCollection.updateSearchIndex"]},{"name":"fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","description":"com.mongodb.kotlin.client.MongoCluster.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/watch.html","searchKeys":["watch","fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","com.mongodb.kotlin.client.MongoCluster.watch"]},{"name":"fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","description":"com.mongodb.kotlin.client.MongoDatabase.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/watch.html","searchKeys":["watch","fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","com.mongodb.kotlin.client.MongoDatabase.watch"]},{"name":"fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.MongoCollection.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/watch.html","searchKeys":["watch","fun watch(clientSession: ClientSession, pipeline: List<Bson> = emptyList()): ChangeStreamIterable<T>","com.mongodb.kotlin.client.MongoCollection.watch"]},{"name":"fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","description":"com.mongodb.kotlin.client.MongoCluster.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/watch.html","searchKeys":["watch","fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","com.mongodb.kotlin.client.MongoCluster.watch"]},{"name":"fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","description":"com.mongodb.kotlin.client.MongoDatabase.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/watch.html","searchKeys":["watch","fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamIterable<Document>","com.mongodb.kotlin.client.MongoDatabase.watch"]},{"name":"fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.MongoCollection.watch","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/watch.html","searchKeys":["watch","fun watch(pipeline: List<Bson> = emptyList()): ChangeStreamIterable<T>","com.mongodb.kotlin.client.MongoCollection.watch"]},{"name":"fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCluster","description":"com.mongodb.kotlin.client.MongoCluster.withCodecRegistry","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/with-codec-registry.html","searchKeys":["withCodecRegistry","fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCluster","com.mongodb.kotlin.client.MongoCluster.withCodecRegistry"]},{"name":"fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoCollection.withCodecRegistry","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-codec-registry.html","searchKeys":["withCodecRegistry","fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoCollection<T>","com.mongodb.kotlin.client.MongoCollection.withCodecRegistry"]},{"name":"fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoDatabase","description":"com.mongodb.kotlin.client.MongoDatabase.withCodecRegistry","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/with-codec-registry.html","searchKeys":["withCodecRegistry","fun withCodecRegistry(newCodecRegistry: CodecRegistry): MongoDatabase","com.mongodb.kotlin.client.MongoDatabase.withCodecRegistry"]},{"name":"fun withReadConcern(newReadConcern: ReadConcern): MongoCluster","description":"com.mongodb.kotlin.client.MongoCluster.withReadConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/with-read-concern.html","searchKeys":["withReadConcern","fun withReadConcern(newReadConcern: ReadConcern): MongoCluster","com.mongodb.kotlin.client.MongoCluster.withReadConcern"]},{"name":"fun withReadConcern(newReadConcern: ReadConcern): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoCollection.withReadConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-read-concern.html","searchKeys":["withReadConcern","fun withReadConcern(newReadConcern: ReadConcern): MongoCollection<T>","com.mongodb.kotlin.client.MongoCollection.withReadConcern"]},{"name":"fun withReadConcern(newReadConcern: ReadConcern): MongoDatabase","description":"com.mongodb.kotlin.client.MongoDatabase.withReadConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/with-read-concern.html","searchKeys":["withReadConcern","fun withReadConcern(newReadConcern: ReadConcern): MongoDatabase","com.mongodb.kotlin.client.MongoDatabase.withReadConcern"]},{"name":"fun withReadPreference(newReadPreference: ReadPreference): MongoCluster","description":"com.mongodb.kotlin.client.MongoCluster.withReadPreference","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/with-read-preference.html","searchKeys":["withReadPreference","fun withReadPreference(newReadPreference: ReadPreference): MongoCluster","com.mongodb.kotlin.client.MongoCluster.withReadPreference"]},{"name":"fun withReadPreference(newReadPreference: ReadPreference): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoCollection.withReadPreference","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-read-preference.html","searchKeys":["withReadPreference","fun withReadPreference(newReadPreference: ReadPreference): MongoCollection<T>","com.mongodb.kotlin.client.MongoCollection.withReadPreference"]},{"name":"fun withReadPreference(newReadPreference: ReadPreference): MongoDatabase","description":"com.mongodb.kotlin.client.MongoDatabase.withReadPreference","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/with-read-preference.html","searchKeys":["withReadPreference","fun withReadPreference(newReadPreference: ReadPreference): MongoDatabase","com.mongodb.kotlin.client.MongoDatabase.withReadPreference"]},{"name":"fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCluster","description":"com.mongodb.kotlin.client.MongoCluster.withTimeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCluster","com.mongodb.kotlin.client.MongoCluster.withTimeout"]},{"name":"fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoCollection.withTimeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoCollection<T>","com.mongodb.kotlin.client.MongoCollection.withTimeout"]},{"name":"fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoDatabase","description":"com.mongodb.kotlin.client.MongoDatabase.withTimeout","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(timeout: Long, timeUnit: TimeUnit = TimeUnit.MILLISECONDS): MongoDatabase","com.mongodb.kotlin.client.MongoDatabase.withTimeout"]},{"name":"fun withWriteConcern(newWriteConcern: WriteConcern): MongoCluster","description":"com.mongodb.kotlin.client.MongoCluster.withWriteConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/with-write-concern.html","searchKeys":["withWriteConcern","fun withWriteConcern(newWriteConcern: WriteConcern): MongoCluster","com.mongodb.kotlin.client.MongoCluster.withWriteConcern"]},{"name":"fun withWriteConcern(newWriteConcern: WriteConcern): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoCollection.withWriteConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-write-concern.html","searchKeys":["withWriteConcern","fun withWriteConcern(newWriteConcern: WriteConcern): MongoCollection<T>","com.mongodb.kotlin.client.MongoCollection.withWriteConcern"]},{"name":"fun withWriteConcern(newWriteConcern: WriteConcern): MongoDatabase","description":"com.mongodb.kotlin.client.MongoDatabase.withWriteConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/with-write-concern.html","searchKeys":["withWriteConcern","fun withWriteConcern(newWriteConcern: WriteConcern): MongoDatabase","com.mongodb.kotlin.client.MongoDatabase.withWriteConcern"]},{"name":"inline fun <R : Any> withDocumentClass(): MongoCollection<R>","description":"com.mongodb.kotlin.client.MongoCollection.withDocumentClass","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/with-document-class.html","searchKeys":["withDocumentClass","inline fun <R : Any> withDocumentClass(): MongoCollection<R>","com.mongodb.kotlin.client.MongoCollection.withDocumentClass"]},{"name":"inline fun <R : Any> withDocumentClass(): MongoIterable<R>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.withDocumentClass","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/with-document-class.html","searchKeys":["withDocumentClass","inline fun <R : Any> withDocumentClass(): MongoIterable<R>","com.mongodb.kotlin.client.ChangeStreamIterable.withDocumentClass"]},{"name":"inline fun <R> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument()): DistinctIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.distinct","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/distinct.html","searchKeys":["distinct","inline fun <R> distinct(clientSession: ClientSession, fieldName: String, filter: Bson = BsonDocument()): DistinctIterable<R>","com.mongodb.kotlin.client.MongoCollection.distinct"]},{"name":"inline fun <R> distinct(fieldName: String, filter: Bson = BsonDocument()): DistinctIterable<R>","description":"com.mongodb.kotlin.client.MongoCollection.distinct","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/distinct.html","searchKeys":["distinct","inline fun <R> distinct(fieldName: String, filter: Bson = BsonDocument()): DistinctIterable<R>","com.mongodb.kotlin.client.MongoCollection.distinct"]},{"name":"inline fun <T : Any> getCollection(collectionName: String): MongoCollection<T>","description":"com.mongodb.kotlin.client.MongoDatabase.getCollection","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/get-collection.html","searchKeys":["getCollection","inline fun <T : Any> getCollection(collectionName: String): MongoCollection<T>","com.mongodb.kotlin.client.MongoDatabase.getCollection"]},{"name":"interface MongoChangeStreamCursor<T : Any> : MongoCursor<T> ","description":"com.mongodb.kotlin.client.MongoChangeStreamCursor","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-change-stream-cursor/index.html","searchKeys":["MongoChangeStreamCursor","interface MongoChangeStreamCursor<T : Any> : MongoCursor<T> ","com.mongodb.kotlin.client.MongoChangeStreamCursor"]},{"name":"interface MongoCursor<T> : Iterator<T> , Closeable","description":"com.mongodb.kotlin.client.MongoCursor","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cursor/index.html","searchKeys":["MongoCursor","interface MongoCursor<T> : Iterator<T> , Closeable","com.mongodb.kotlin.client.MongoCursor"]},{"name":"object Factory","description":"com.mongodb.kotlin.client.MongoClient.Factory","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/-factory/index.html","searchKeys":["Factory","object Factory","com.mongodb.kotlin.client.MongoClient.Factory"]},{"name":"open class MongoCluster","description":"com.mongodb.kotlin.client.MongoCluster","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/index.html","searchKeys":["MongoCluster","open class MongoCluster","com.mongodb.kotlin.client.MongoCluster"]},{"name":"open class MongoIterable<T>(delegate: MongoIterable<T>)","description":"com.mongodb.kotlin.client.MongoIterable","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/index.html","searchKeys":["MongoIterable","open class MongoIterable<T>(delegate: MongoIterable<T>)","com.mongodb.kotlin.client.MongoIterable"]},{"name":"open fun batchSize(batchSize: Int): MongoIterable<T>","description":"com.mongodb.kotlin.client.MongoIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/batch-size.html","searchKeys":["batchSize","open fun batchSize(batchSize: Int): MongoIterable<T>","com.mongodb.kotlin.client.MongoIterable.batchSize"]},{"name":"open fun cursor(): MongoCursor<T>","description":"com.mongodb.kotlin.client.MongoIterable.cursor","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-iterable/cursor.html","searchKeys":["cursor","open fun cursor(): MongoCursor<T>","com.mongodb.kotlin.client.MongoIterable.cursor"]},{"name":"open override fun batchSize(batchSize: Int): AggregateIterable<T>","description":"com.mongodb.kotlin.client.AggregateIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): AggregateIterable<T>","com.mongodb.kotlin.client.AggregateIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): ChangeStreamIterable<T>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): ChangeStreamIterable<T>","com.mongodb.kotlin.client.ChangeStreamIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): DistinctIterable<T>","description":"com.mongodb.kotlin.client.DistinctIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-distinct-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): DistinctIterable<T>","com.mongodb.kotlin.client.DistinctIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): FindIterable<T>","description":"com.mongodb.kotlin.client.FindIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-find-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): FindIterable<T>","com.mongodb.kotlin.client.FindIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): ListCollectionNamesIterable","description":"com.mongodb.kotlin.client.ListCollectionNamesIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collection-names-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): ListCollectionNamesIterable","com.mongodb.kotlin.client.ListCollectionNamesIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): ListCollectionsIterable<T>","description":"com.mongodb.kotlin.client.ListCollectionsIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-collections-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): ListCollectionsIterable<T>","com.mongodb.kotlin.client.ListCollectionsIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): ListDatabasesIterable<T>","description":"com.mongodb.kotlin.client.ListDatabasesIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-databases-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): ListDatabasesIterable<T>","com.mongodb.kotlin.client.ListDatabasesIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): ListIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListIndexesIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-indexes-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): ListIndexesIterable<T>","com.mongodb.kotlin.client.ListIndexesIterable.batchSize"]},{"name":"open override fun batchSize(batchSize: Int): ListSearchIndexesIterable<T>","description":"com.mongodb.kotlin.client.ListSearchIndexesIterable.batchSize","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-list-search-indexes-iterable/batch-size.html","searchKeys":["batchSize","open override fun batchSize(batchSize: Int): ListSearchIndexesIterable<T>","com.mongodb.kotlin.client.ListSearchIndexesIterable.batchSize"]},{"name":"open override fun close()","description":"com.mongodb.kotlin.client.ClientSession.close","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/close.html","searchKeys":["close","open override fun close()","com.mongodb.kotlin.client.ClientSession.close"]},{"name":"open override fun close()","description":"com.mongodb.kotlin.client.MongoClient.close","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/close.html","searchKeys":["close","open override fun close()","com.mongodb.kotlin.client.MongoClient.close"]},{"name":"open override fun cursor(): MongoChangeStreamCursor<ChangeStreamDocument<T>>","description":"com.mongodb.kotlin.client.ChangeStreamIterable.cursor","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-change-stream-iterable/cursor.html","searchKeys":["cursor","open override fun cursor(): MongoChangeStreamCursor<ChangeStreamDocument<T>>","com.mongodb.kotlin.client.ChangeStreamIterable.cursor"]},{"name":"open override fun cursor(): MongoCursor<T>","description":"com.mongodb.kotlin.client.AggregateIterable.cursor","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-aggregate-iterable/cursor.html","searchKeys":["cursor","open override fun cursor(): MongoCursor<T>","com.mongodb.kotlin.client.AggregateIterable.cursor"]},{"name":"val clusterDescription: ClusterDescription","description":"com.mongodb.kotlin.client.MongoClient.clusterDescription","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-client/cluster-description.html","searchKeys":["clusterDescription","val clusterDescription: ClusterDescription","com.mongodb.kotlin.client.MongoClient.clusterDescription"]},{"name":"val codecRegistry: CodecRegistry","description":"com.mongodb.kotlin.client.MongoCluster.codecRegistry","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/codec-registry.html","searchKeys":["codecRegistry","val codecRegistry: CodecRegistry","com.mongodb.kotlin.client.MongoCluster.codecRegistry"]},{"name":"val codecRegistry: CodecRegistry","description":"com.mongodb.kotlin.client.MongoCollection.codecRegistry","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/codec-registry.html","searchKeys":["codecRegistry","val codecRegistry: CodecRegistry","com.mongodb.kotlin.client.MongoCollection.codecRegistry"]},{"name":"val codecRegistry: CodecRegistry","description":"com.mongodb.kotlin.client.MongoDatabase.codecRegistry","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/codec-registry.html","searchKeys":["codecRegistry","val codecRegistry: CodecRegistry","com.mongodb.kotlin.client.MongoDatabase.codecRegistry"]},{"name":"val documentClass: Class<T>","description":"com.mongodb.kotlin.client.MongoCollection.documentClass","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/document-class.html","searchKeys":["documentClass","val documentClass: Class<T>","com.mongodb.kotlin.client.MongoCollection.documentClass"]},{"name":"val hasActiveTransaction: Boolean","description":"com.mongodb.kotlin.client.ClientSession.hasActiveTransaction","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/has-active-transaction.html","searchKeys":["hasActiveTransaction","val hasActiveTransaction: Boolean","com.mongodb.kotlin.client.ClientSession.hasActiveTransaction"]},{"name":"val isCausallyConsistent: Boolean","description":"com.mongodb.kotlin.client.ClientSession.isCausallyConsistent","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/is-causally-consistent.html","searchKeys":["isCausallyConsistent","val isCausallyConsistent: Boolean","com.mongodb.kotlin.client.ClientSession.isCausallyConsistent"]},{"name":"val name: String","description":"com.mongodb.kotlin.client.MongoDatabase.name","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/name.html","searchKeys":["name","val name: String","com.mongodb.kotlin.client.MongoDatabase.name"]},{"name":"val namespace: MongoNamespace","description":"com.mongodb.kotlin.client.MongoCollection.namespace","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/namespace.html","searchKeys":["namespace","val namespace: MongoNamespace","com.mongodb.kotlin.client.MongoCollection.namespace"]},{"name":"val options: ClientSessionOptions","description":"com.mongodb.kotlin.client.ClientSession.options","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/options.html","searchKeys":["options","val options: ClientSessionOptions","com.mongodb.kotlin.client.ClientSession.options"]},{"name":"val readConcern: ReadConcern","description":"com.mongodb.kotlin.client.MongoCluster.readConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/read-concern.html","searchKeys":["readConcern","val readConcern: ReadConcern","com.mongodb.kotlin.client.MongoCluster.readConcern"]},{"name":"val readConcern: ReadConcern","description":"com.mongodb.kotlin.client.MongoCollection.readConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/read-concern.html","searchKeys":["readConcern","val readConcern: ReadConcern","com.mongodb.kotlin.client.MongoCollection.readConcern"]},{"name":"val readConcern: ReadConcern","description":"com.mongodb.kotlin.client.MongoDatabase.readConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/read-concern.html","searchKeys":["readConcern","val readConcern: ReadConcern","com.mongodb.kotlin.client.MongoDatabase.readConcern"]},{"name":"val readPreference: ReadPreference","description":"com.mongodb.kotlin.client.MongoCluster.readPreference","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/read-preference.html","searchKeys":["readPreference","val readPreference: ReadPreference","com.mongodb.kotlin.client.MongoCluster.readPreference"]},{"name":"val readPreference: ReadPreference","description":"com.mongodb.kotlin.client.MongoCollection.readPreference","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/read-preference.html","searchKeys":["readPreference","val readPreference: ReadPreference","com.mongodb.kotlin.client.MongoCollection.readPreference"]},{"name":"val readPreference: ReadPreference","description":"com.mongodb.kotlin.client.MongoDatabase.readPreference","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/read-preference.html","searchKeys":["readPreference","val readPreference: ReadPreference","com.mongodb.kotlin.client.MongoDatabase.readPreference"]},{"name":"val transactionOptions: TransactionOptions","description":"com.mongodb.kotlin.client.ClientSession.transactionOptions","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/transaction-options.html","searchKeys":["transactionOptions","val transactionOptions: TransactionOptions","com.mongodb.kotlin.client.ClientSession.transactionOptions"]},{"name":"val wrapped: ClientSession","description":"com.mongodb.kotlin.client.ClientSession.wrapped","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-client-session/wrapped.html","searchKeys":["wrapped","val wrapped: ClientSession","com.mongodb.kotlin.client.ClientSession.wrapped"]},{"name":"val writeConcern: WriteConcern","description":"com.mongodb.kotlin.client.MongoCluster.writeConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-cluster/write-concern.html","searchKeys":["writeConcern","val writeConcern: WriteConcern","com.mongodb.kotlin.client.MongoCluster.writeConcern"]},{"name":"val writeConcern: WriteConcern","description":"com.mongodb.kotlin.client.MongoCollection.writeConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-collection/write-concern.html","searchKeys":["writeConcern","val writeConcern: WriteConcern","com.mongodb.kotlin.client.MongoCollection.writeConcern"]},{"name":"val writeConcern: WriteConcern","description":"com.mongodb.kotlin.client.MongoDatabase.writeConcern","location":"mongodb-driver-kotlin-sync/com.mongodb.kotlin.client/-mongo-database/write-concern.html","searchKeys":["writeConcern","val writeConcern: WriteConcern","com.mongodb.kotlin.client.MongoDatabase.writeConcern"]}]
